{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/panels/lovelace/editor/process-editor-entities.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-glance-card-editor.ts"],"names":["rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","Object","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_8__","entity_id","HaEntityPicker","lit_element__WEBPACK_IMPORTED_MODULE_9__","[object Object]","this","_getStates","memoize_one__WEBPACK_IMPORTED_MODULE_6__","hass","domainFilter","entityFilter","states","entityIds","keys","filter","eid","substr","indexOf","sort","map","key","value","changedProps","super","updated","has","_opened","_hass","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","length","ev","detail","setTimeout","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_10__","styles","tslib__WEBPACK_IMPORTED_MODULE_0__","type","Boolean","attribute","customElements","define","__webpack_require__","d","__webpack_exports__","struct","index_es","types","entity-id","includes","icon","configElementStyle","HuiThemeSelectEditor","lit_element__WEBPACK_IMPORTED_MODULE_1__","themes","concat","_changed","theme","target","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_3__","HuiEntityEditor","entities","entityConf","index","entity","_entityDown","_entityUp","_addEntity","newConfigEntities","newEntities","splice","assign","processEditorEntities","entitiesConfigStruct","_common_structs_struct__WEBPACK_IMPORTED_MODULE_11__","union","name","cardConfigStruct","title","columns","show_name","show_state","show_icon","HuiGlanceCardEditor","config","_config","_configEntities","_process_editor_entities__WEBPACK_IMPORTED_MODULE_12__","_title","_theme","_columns","NaN","_show_name","_show_icon","_show_state","_config_elements_style__WEBPACK_IMPORTED_MODULE_14__","configValue","isNaN","Number","checked","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_13__"],"mappings":"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","file":"chunk.d143afd52687c2ce8566.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      domainFilter: this[\"domainFilter\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (domainFilter) {\n        entityIds = entityIds.filter(\n          (eid) => eid.substr(0, eid.indexOf(\".\")) === domainFilter\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.domainFilter,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Clear\"\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Show entities\"\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    paper-toggle-button {\n      padding-top: 16px;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        label=\"Theme\"\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>Entities</h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=\"${this.hass}\"\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import { EntityConfig } from \"../entity-rows/types\";\n\nexport function processEditorEntities(entities): EntityConfig[] {\n  return entities.map((entityConf) => {\n    if (typeof entityConf === \"string\") {\n      return { entity: entityConf };\n    }\n    return entityConf;\n  });\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport \"@polymer/paper-toggle-button/paper-toggle-button\";\n\nimport \"../../../../components/entity/state-badge\";\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-icon\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { GlanceCardConfig, ConfigEntity } from \"../../cards/types\";\n\nconst entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string|number?\",\n  theme: \"string?\",\n  columns: \"number?\",\n  show_name: \"boolean?\",\n  show_state: \"boolean?\",\n  show_icon: \"boolean?\",\n  entities: [entitiesConfigStruct],\n});\n\n@customElement(\"hui-glance-card-editor\")\nexport class HuiGlanceCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: GlanceCardConfig;\n\n  @property() private _configEntities?: ConfigEntity[];\n\n  public setConfig(config: GlanceCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  get _columns(): number {\n    return this._config!.columns || NaN;\n  }\n\n  get _show_name(): boolean {\n    return this._config!.show_name || true;\n  }\n\n  get _show_icon(): boolean {\n    return this._config!.show_icon || true;\n  }\n\n  get _show_state(): boolean {\n    return this._config!.show_state || true;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Title\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n          <paper-input\n            label=\"Columns\"\n            type=\"number\"\n            .value=\"${this._columns}\"\n            .configValue=\"${\"columns\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-toggle-button\n            ?checked=\"${this._show_name !== false}\"\n            .configValue=\"${\"show_name\"}\"\n            @change=\"${this._valueChanged}\"\n            >Show Name?</paper-toggle-button\n          >\n          <paper-toggle-button\n            ?checked=\"${this._show_icon !== false}\"\n            .configValue=\"${\"show_icon\"}\"\n            @change=\"${this._valueChanged}\"\n            >Show Icon?</paper-toggle-button\n          >\n          <paper-toggle-button\n            ?checked=\"${this._show_state !== false}\"\n            .configValue=\"${\"show_state\"}\"\n            @change=\"${this._valueChanged}\"\n            >Show State?</paper-toggle-button\n          >\n        </div>\n      </div>\n      <hui-entity-editor\n        .hass=\"${this.hass}\"\n        .entities=\"${this._configEntities}\"\n        @entities-changed=\"${this._valueChanged}\"\n      ></hui-entity-editor>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (target.configValue && this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n    } else if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = {\n          ...this._config,\n          [target.configValue!]:\n            target.checked !== undefined ? target.checked : value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-glance-card-editor\": HuiGlanceCardEditor;\n  }\n}\n"],"sourceRoot":""}