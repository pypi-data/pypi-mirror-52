{"version":3,"sources":["webpack:///./src/components/ha-fab.ts","webpack:///./src/components/ha-checkbox.ts","webpack:///./src/panels/lovelace/editor/unused-entities/hui-select-row.ts","webpack:///./src/panels/lovelace/common/compute-unused-entities.ts","webpack:///./src/panels/lovelace/editor/unused-entities/hui-unused-entities.ts","webpack:///./src/panels/lovelace/editor/select-view/show-select-view-dialog.ts"],"names":["_super","HaFab","tslib__WEBPACK_IMPORTED_MODULE_0__","prototype","render","classes","mdc-fab--mini","this","mini","mdc-fab--exited","exited","mdc-fab--extended","extended","showLabel","label","Object","_material_mwc_base_base_element__WEBPACK_IMPORTED_MODULE_1__","templateObject_2","_material_mwc_ripple_ripple_directive_js__WEBPACK_IMPORTED_MODULE_2__","disabled","icon","showIconAtEnd","templateObject_1","customElements","get","HaCheckbox","tslib_es6","firstUpdated","call","style","setProperty","lit_element","HuiSelectRow","_this","apply","arguments","selectable","entity","stateObj","hass","states","undefined","templateObject_4","templateObject_3","_handleSelect","compute_state_name","entity_id","compute_domain","last_changed","ev","checkbox","currentTarget","fire_event","selected","checked","defineProperty","templateObject_5","EXCLUDED_DOMAINS","addFromAction","entities","actionConfig","action","service_data","entityIds","Array","isArray","_i","entityIds_1","length","entityId","add","addEntityId","camera_image","tap_action","hold_action","addEntities","obj","forEach","card","cards","elements","badges","badge","computeUnusedEntities","config","usedEntities","Set","views","view","computeUsedEntities","keys","filter","has","includes","split","sort","hui_unused_entities_HuiUnusedEntities","HuiUnusedEntities","_unusedEntities","_selectedEntities","lovelace","updated","changedProperties","_getUnusedEntities","mode","editMode","hui_unused_entities_templateObject_2","templateObject_6","hui_unused_entities_templateObject_3","_handleSelectionChanged","map","hui_unused_entities_templateObject_4","hui_unused_entities_templateObject_5","class_map","rtl","compute_rtl","localize","_selectView","hui_unused_entities_templateObject_1","_config","detail","push","index","indexOf","splice","element","selectViewDialogParams","viewSelectedCallback","_addCard","dialogTag","dialogImport","__webpack_require__","e","then","bind","dialogParams","show_edit_card_dialog","path","templateObject_7"],"mappings":"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","file":"chunk.b2a231e45b872d82484b.js","sourcesContent":["import {\n  classMap,\n  html,\n  customElement,\n  Constructor,\n} from \"@material/mwc-base/base-element\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive.js\";\n\nimport \"@material/mwc-fab\";\n// tslint:disable-next-line\nimport { Fab } from \"@material/mwc-fab\";\n// tslint:disable-next-line\nconst MwcFab = customElements.get(\"mwc-fab\") as Constructor<Fab>;\n\n@customElement(\"ha-fab\")\nexport class HaFab extends MwcFab {\n  // We override the render method because we don't have an icon font and mwc-fab doesn't support our svg-icon sets.\n  // Based on version mwc-fab 0.8\n  protected render() {\n    const classes = {\n      \"mdc-fab--mini\": this.mini,\n      \"mdc-fab--exited\": this.exited,\n      \"mdc-fab--extended\": this.extended,\n    };\n    const showLabel = this.label !== \"\" && this.extended;\n    return html`\n      <button\n        .ripple=\"${ripple()}\"\n        class=\"mdc-fab ${classMap(classes)}\"\n        ?disabled=\"${this.disabled}\"\n        aria-label=\"${this.label || this.icon}\"\n      >\n        ${showLabel && this.showIconAtEnd ? this.label : \"\"}\n        ${this.icon\n          ? html`\n              <ha-icon .icon=${this.icon}></ha-icon>\n            `\n          : \"\"}\n        ${showLabel && !this.showIconAtEnd ? this.label : \"\"}\n      </button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-fab\": HaFab;\n  }\n}\n","import { Constructor, customElement } from \"lit-element\";\nimport \"@material/mwc-checkbox\";\n// tslint:disable-next-line\nimport { Checkbox } from \"@material/mwc-checkbox\";\n// tslint:disable-next-line\nconst MwcCheckbox = customElements.get(\"mwc-checkbox\") as Constructor<Checkbox>;\n\n@customElement(\"ha-checkbox\")\nexport class HaCheckbox extends MwcCheckbox {\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\"--mdc-theme-secondary\", \"var(--primary-color)\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-checkbox\": HaCheckbox;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\n\nimport { Checkbox } from \"@material/mwc-checkbox\";\nimport { HomeAssistant } from \"../../../../types\";\nimport computeStateName from \"../../../../common/entity/compute_state_name\";\nimport computeDomain from \"../../../../common/entity/compute_domain\";\n\nimport \"../../../../components/ha-checkbox\";\nimport \"../../../../components/entity/state-badge\";\nimport \"../../../../components/ha-relative-time\";\nimport \"../../../../components/ha-icon\";\n\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"entity-selection-changed\": EntitySelectionChangedEvent;\n  }\n}\n\nexport interface EntitySelectionChangedEvent {\n  entity: string;\n  selected: boolean;\n}\n\n@customElement(\"hui-select-row\")\nclass HuiSelectRow extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public entity?: string;\n\n  @property() public selectable = true;\n\n  protected render(): TemplateResult | void {\n    if (!this.entity) {\n      return html``;\n    }\n\n    const stateObj = this.entity ? this.hass.states[this.entity] : undefined;\n\n    if (!stateObj) {\n      return html``;\n    }\n\n    return html`\n      <div class=\"flex-row\" role=\"rowgroup\">\n        <div class=\"flex-cell\" role=\"cell\">\n          ${this.selectable\n            ? html`\n                <ha-checkbox @change=${this._handleSelect}></ha-checkbox>\n              `\n            : \"\"}\n          <state-badge .hass=${this.hass} .stateObj=${stateObj}></state-badge>\n          ${computeStateName(stateObj)}\n        </div>\n        <div class=\"flex-cell\" role=\"cell\">${stateObj.entity_id}</div>\n        <div class=\"flex-cell\" role=\"cell\">\n          ${computeDomain(stateObj.entity_id)}\n        </div>\n        <div class=\"flex-cell\" role=\"cell\">\n          <ha-relative-time\n            .hass=${this.hass}\n            .datetime=${stateObj.last_changed}\n          ></ha-relative-time>\n        </div>\n      </div>\n    `;\n  }\n\n  private _handleSelect(ev: Event): void {\n    const checkbox = ev.currentTarget as Checkbox;\n    fireEvent(this, \"entity-selection-changed\", {\n      entity: this.entity!,\n      selected: checkbox.checked as boolean,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      div {\n        box-sizing: border-box;\n      }\n\n      .flex-row {\n        display: flex;\n        flex-flow: row wrap;\n      }\n\n      .flex-row:hover {\n        background: var(--table-row-alternative-background-color, #eee);\n      }\n\n      .flex-cell {\n        width: calc(100% / 4);\n        padding: 12px 24px;\n        border-bottom: 1px solid #e0e0e0;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        line-height: 40px;\n      }\n\n      @media all and (max-width: 767px) {\n        .flex-cell {\n          width: calc(100% / 3);\n          padding-top: 0;\n        }\n        .flex-cell:first-child {\n          width: 100%;\n          padding-top: 12px;\n          padding-bottom: 0;\n          border-bottom: 0;\n        }\n      }\n\n      @media all and (max-width: 430px) {\n        .flex-cell {\n          border-bottom: 0;\n          padding: 0 24px;\n        }\n\n        .flex-cell:first-child {\n          padding-top: 12px;\n        }\n\n        .flex-cell:last-child {\n          padding-bottom: 12px;\n          border-bottom: 1px solid #e0e0e0;\n        }\n\n        .flex-cell {\n          width: 100%;\n        }\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-select-row\": HuiSelectRow;\n  }\n}\n","import { LovelaceConfig, ActionConfig } from \"../../../data/lovelace\";\nimport { HomeAssistant } from \"../../../types\";\n\nconst EXCLUDED_DOMAINS = [\"zone\"];\n\nconst addFromAction = (entities: Set<string>, actionConfig: ActionConfig) => {\n  if (\n    actionConfig.action !== \"call-service\" ||\n    !actionConfig.service_data ||\n    !actionConfig.service_data.entity_id\n  ) {\n    return;\n  }\n  let entityIds = actionConfig.service_data.entity_id;\n  if (!Array.isArray(entityIds)) {\n    entityIds = [entityIds];\n  }\n  for (const entityId of entityIds) {\n    entities.add(entityId);\n  }\n};\n\nconst addEntityId = (entities: Set<string>, entity) => {\n  if (typeof entity === \"string\") {\n    entities.add(entity);\n    return;\n  }\n\n  if (entity.entity) {\n    entities.add(entity.entity);\n  }\n  if (entity.camera_image) {\n    entities.add(entity.camera_image);\n  }\n  if (entity.tap_action) {\n    addFromAction(entities, entity.tap_action);\n  }\n  if (entity.hold_action) {\n    addFromAction(entities, entity.hold_action);\n  }\n};\n\nconst addEntities = (entities: Set<string>, obj) => {\n  if (obj.entity) {\n    addEntityId(entities, obj.entity);\n  }\n  if (obj.entities) {\n    obj.entities.forEach((entity) => addEntityId(entities, entity));\n  }\n  if (obj.card) {\n    addEntities(entities, obj.card);\n  }\n  if (obj.cards) {\n    obj.cards.forEach((card) => addEntities(entities, card));\n  }\n  if (obj.elements) {\n    obj.elements.forEach((card) => addEntities(entities, card));\n  }\n  if (obj.badges) {\n    obj.badges.forEach((badge) => addEntityId(entities, badge));\n  }\n};\n\nconst computeUsedEntities = (config) => {\n  const entities = new Set<string>();\n  config.views.forEach((view) => addEntities(entities, view));\n  return entities;\n};\n\nexport const computeUnusedEntities = (\n  hass: HomeAssistant,\n  config: LovelaceConfig\n): string[] => {\n  const usedEntities = computeUsedEntities(config);\n  return Object.keys(hass.states)\n    .filter(\n      (entity) =>\n        !usedEntities.has(entity) &&\n        !EXCLUDED_DOMAINS.includes(entity.split(\".\", 1)[0])\n    )\n    .sort();\n};\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  PropertyValues,\n  property,\n  customElement,\n  css,\n  CSSResult,\n} from \"lit-element\";\n\nimport { classMap } from \"lit-html/directives/class-map\";\nimport \"../../../../components/ha-fab\";\n\nimport \"./hui-select-row\";\n\nimport { computeRTL } from \"../../../../common/util/compute_rtl\";\nimport { computeUnusedEntities } from \"../../common/compute-unused-entities\";\nimport { showSelectViewDialog } from \"../select-view/show-select-view-dialog\";\nimport { showEditCardDialog } from \"../card-editor/show-edit-card-dialog\";\n\nimport { HomeAssistant } from \"../../../../types\";\nimport { Lovelace } from \"../../types\";\nimport { LovelaceConfig } from \"../../../../data/lovelace\";\n\n@customElement(\"hui-unused-entities\")\nexport class HuiUnusedEntities extends LitElement {\n  @property() public lovelace?: Lovelace;\n\n  @property() public hass?: HomeAssistant;\n\n  @property() private _unusedEntities: string[] = [];\n\n  private _selectedEntities: string[] = [];\n\n  private get _config(): LovelaceConfig {\n    return this.lovelace!.config;\n  }\n\n  protected updated(changedProperties: PropertyValues): void {\n    super.updated(changedProperties);\n\n    if (changedProperties.has(\"lovelace\")) {\n      this._getUnusedEntities();\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass || !this.lovelace) {\n      return html``;\n    }\n\n    if (this.lovelace.mode === \"storage\" && this.lovelace.editMode === false) {\n      return html``;\n    }\n\n    return html`\n      <ha-card header=\"Unused entities\">\n        <div class=\"card-content\">\n          These are the entities that you have available, but are not in your\n          Lovelace UI yet.\n          ${this.lovelace.mode === \"storage\"\n            ? html`\n                <br />Select the entities you want to add to a card and then\n                click the add card button.\n              `\n            : \"\"}\n        </div>\n        <div\n          class=\"table-container\"\n          role=\"table\"\n          aria-label=\"Unused Entities\"\n          @entity-selection-changed=${this._handleSelectionChanged}\n        >\n          <div class=\"flex-row header\" role=\"rowgroup\">\n            <div class=\"flex-cell\" role=\"columnheader\">Entity</div>\n            <div class=\"flex-cell\" role=\"columnheader\">Entity id</div>\n            <div class=\"flex-cell\" role=\"columnheader\">Domain</div>\n            <div class=\"flex-cell\" role=\"columnheader\">Last Changed</div>\n          </div>\n          ${this._unusedEntities.map((entity) => {\n            return html`\n              <hui-select-row\n                .selectable=${this.lovelace!.mode === \"storage\"}\n                .hass=${this.hass}\n                .entity=${entity}\n              ></hui-select-row>\n            `;\n          })}\n        </div>\n      </ha-card>\n      ${this.lovelace.mode === \"storage\"\n        ? html`\n            <ha-fab\n              class=\"${classMap({\n                rtl: computeRTL(this.hass),\n              })}\"\n              icon=\"hass:plus\"\n              label=\"${this.hass.localize(\n                \"ui.panel.lovelace.editor.edit_card.add\"\n              )}\"\n              @click=\"${this._selectView}\"\n            ></ha-fab>\n          `\n        : \"\"}\n    `;\n  }\n\n  private _getUnusedEntities(): void {\n    if (!this.hass || !this.lovelace) {\n      return;\n    }\n    this._selectedEntities = [];\n    this._unusedEntities = computeUnusedEntities(this.hass, this._config!);\n  }\n\n  private _handleSelectionChanged(ev: any): void {\n    if (ev.detail.selected) {\n      this._selectedEntities.push(ev.detail.entity);\n    } else {\n      const index = this._selectedEntities.indexOf(ev.detail.entity);\n      if (index !== -1) {\n        this._selectedEntities.splice(index, 1);\n      }\n    }\n  }\n\n  private _selectView(): void {\n    showSelectViewDialog(this, {\n      lovelace: this.lovelace!,\n      viewSelectedCallback: (view) => this._addCard(view),\n    });\n  }\n\n  private _addCard(view: number): void {\n    showEditCardDialog(this, {\n      lovelace: this.lovelace!,\n      path: [view],\n      entities: this._selectedEntities,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(--lovelace-background);\n        padding: 16px;\n      }\n      ha-fab {\n        position: sticky;\n        float: right;\n        bottom: 16px;\n        z-index: 1;\n      }\n      ha-fab.rtl {\n        float: left;\n      }\n\n      div {\n        box-sizing: border-box;\n      }\n\n      .table-container {\n        display: block;\n        margin: auto;\n      }\n\n      .flex-row {\n        display: flex;\n        flex-flow: row wrap;\n      }\n      .flex-row .flex-cell {\n        font-weight: bold;\n      }\n\n      .flex-cell {\n        width: calc(100% / 4);\n        padding: 12px 24px;\n        border-bottom: 1px solid #e0e0e0;\n        vertical-align: middle;\n      }\n\n      @media all and (max-width: 767px) {\n        .flex-cell {\n          width: calc(100% / 3);\n        }\n        .flex-cell:first-child {\n          width: 100%;\n          border-bottom: 0;\n        }\n      }\n      @media all and (max-width: 430px) {\n        .flex-cell {\n          border-bottom: 0;\n        }\n\n        .flex-cell:last-child {\n          border-bottom: 1px solid #e0e0e0;\n        }\n\n        .flex-cell {\n          width: 100%;\n        }\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-unused-entities\": HuiUnusedEntities;\n  }\n}\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { Lovelace } from \"../../types\";\n\nexport interface SelectViewDialogParams {\n  lovelace: Lovelace;\n  viewSelectedCallback: (view: number) => void;\n}\n\nexport const showSelectViewDialog = (\n  element: HTMLElement,\n  selectViewDialogParams: SelectViewDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"hui-dialog-select-view\",\n    dialogImport: () =>\n      import(/* webpackChunkName: \"hui-dialog-select-view\" */ \"./hui-dialog-select-view\"),\n    dialogParams: selectViewDialogParams,\n  });\n};\n"],"sourceRoot":""}