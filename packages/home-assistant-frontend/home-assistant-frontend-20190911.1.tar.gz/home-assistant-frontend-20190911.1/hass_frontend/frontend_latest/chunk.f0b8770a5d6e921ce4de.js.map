{"version":3,"sources":["webpack:///./src/common/entity/compute_state_name.ts","webpack:///./src/common/entity/domain_icon.ts","webpack:///./src/common/entity/compute_state_domain.ts","webpack:///./src/components/entity/state-badge.ts","webpack:///./src/components/entity/state-info.js","webpack:///./src/common/entity/compute_object_id.ts","webpack:///./src/common/entity/sensor_icon.ts","webpack:///./src/common/entity/state_icon.ts","webpack:///./src/common/entity/binary_sensor_icon.ts","webpack:///./src/common/entity/cover_icon.ts","webpack:///./src/common/entity/input_dateteime_icon.ts","webpack:///./src/common/string/compare.ts","webpack:///./src/components/ha-relative-time.js","webpack:///./src/common/datetime/relative_time.ts","webpack:///./src/common/entity/entity_filter.ts","webpack:///./src/dialogs/domain-toggler/show-dialog-domain-toggler.ts","webpack:///./src/panels/config/cloud/alexa/cloud-alexa.ts"],"names":["_compute_object_id__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","stateObj","undefined","attributes","friendly_name","Object","entity_id","replace","d","domainIcon","_const__WEBPACK_IMPORTED_MODULE_0__","fixedIcons","alert","alexa","automation","calendar","camera","climate","configurator","conversation","device_tracker","fan","google_assistant","group","history_graph","homeassistant","homekit","image_processing","input_boolean","input_datetime","input_number","input_select","input_text","light","mailbox","notify","person","plant","proximity","remote","scene","script","sensor","simple_alarm","sun","switch","timer","updater","vacuum","water_heater","weather","weblink","domain","state","console","warn","computeStateDomain","_compute_domain__WEBPACK_IMPORTED_MODULE_0__","StateBadge","lit_element__WEBPACK_IMPORTED_MODULE_1__","[object Object]","this","_common_entity_compute_state_domain__WEBPACK_IMPORTED_MODULE_3__","overrideIcon","_common_entity_state_icon__WEBPACK_IMPORTED_MODULE_4__","changedProps","has","iconStyle","color","filter","hostStyle","backgroundImage","entity_picture","overrideImage","imageUrl","hass","hassUrl","display","hs_color","hue","sat","brightness","errorMessage","assign","_icon","style","styles","tslib__WEBPACK_IMPORTED_MODULE_0__","customElements","define","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_0__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_1__","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_4__","_common_util_compute_rtl__WEBPACK_IMPORTED_MODULE_5__","template","styleTemplate","stateBadgeTemplate","infoTemplate","properties","inDialog","type","Boolean","value","rtl","reflectToAttribute","computed","computeObjectId","entityId","substr","indexOf","fixedDeviceClassIcons","humidity","illuminance","temperature","pressure","power","signal_strength","stateIcon","domainIcons","binary_sensor","activated","device_class","cover","open","domain_icon","dclass","battery","Number","isNaN","batteryRound","Math","round","unit","unit_of_measurement","common_const","has_date","has_time","icon","compute_domain","compare","caseInsensitiveCompare","a","b","toLowerCase","_polymer_polymer_lib_legacy_polymer_dom__WEBPACK_IMPORTED_MODULE_0__","_common_datetime_relative_time__WEBPACK_IMPORTED_MODULE_2__","_mixins_localize_mixin__WEBPACK_IMPORTED_MODULE_3__","datetime","String","observer","datetimeObj","parsedDateTime","super","updateRelative","bind","connectedCallback","updateInterval","setInterval","disconnectedCallback","clearInterval","newVal","Date","root","innerHTML","localize","relativeTime","tests","langKey","dateObj","options","delta","compareTime","getTime","tense","timeDesc","abs","i","length","floor","includeTense","isEmptyFilter","generateFilter","include_domains","include_entities","exclude_domains","exclude_entities","includeDomains","includeEntities","excludeDomains","excludeEntities","includeDomainsSet","Set","includeEntitiesSet","excludeDomainsSet","excludeEntitiesSet","haveInclude","size","haveExclude","showDomainTogglerDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","loadDomainTogglerDialog","Promise","all","e","then","element","dialogParams","dialogTag","dialogImport","IGNORE_INTERFACES","configIsExposed","config","should_expose","CloudAlexa","_entityConfigs","_popstateSyncAttached","_popstateReloadStatusAttached","_getEntityFilterFunc","memoize_one__WEBPACK_IMPORTED_MODULE_9__","_common_entity_entity_filter__WEBPACK_IMPORTED_MODULE_10__","_entities","emptyFilter","cloudStatus","alexa_entities","filterFunc","showInExposed","_isInitialExposed","trackExposed","selected","exposedCards","notExposedCards","forEach","entity","states","isExposed","add","push","_showMoreInfo","interfaces","ifc","includes","map","join","_exposeChanged","narrow","_openDomainToggler","firstUpdated","_fetchData","updated","prefs","alexa_entity_configs","entities","_data_alexa__WEBPACK_IMPORTED_MODULE_16__","sort","stateA","stateB","_common_string_compare__WEBPACK_IMPORTED_MODULE_11__","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_12__","ev","currentTarget","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_13__","newExposed","detail","_updateExposed","_updateConfig","_ensureEntitySync","values","updatedConfig","_data_cloud__WEBPACK_IMPORTED_MODULE_8__","_ensureStatusReload","_dialogs_domain_toggler_show_dialog_domain_toggler__WEBPACK_IMPORTED_MODULE_14__","domains","_common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_15__","idx","self","toggleDomain","turnOn","parent","parentElement","window","addEventListener","once"],"mappings":"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","file":"chunk.f0b8770a5d6e921ce4de.js","sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport computeObjectId from \"./compute_object_id\";\n\nexport default (stateObj: HassEntity): string =>\n  stateObj.attributes.friendly_name === undefined\n    ? computeObjectId(stateObj.entity_id).replace(/_/g, \" \")\n    : stateObj.attributes.friendly_name || \"\";\n","/**\n * Return the icon to be used for a domain.\n *\n * Optionally pass in a state to influence the domain icon.\n */\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\n\nconst fixedIcons = {\n  alert: \"hass:alert\",\n  alexa: \"hass:amazon-alexa\",\n  automation: \"hass:playlist-play\",\n  calendar: \"hass:calendar\",\n  camera: \"hass:video\",\n  climate: \"hass:thermostat\",\n  configurator: \"hass:settings\",\n  conversation: \"hass:text-to-speech\",\n  device_tracker: \"hass:account\",\n  fan: \"hass:fan\",\n  google_assistant: \"hass:google-assistant\",\n  group: \"hass:google-circles-communities\",\n  history_graph: \"hass:chart-line\",\n  homeassistant: \"hass:home-assistant\",\n  homekit: \"hass:home-automation\",\n  image_processing: \"hass:image-filter-frames\",\n  input_boolean: \"hass:drawing\",\n  input_datetime: \"hass:calendar-clock\",\n  input_number: \"hass:ray-vertex\",\n  input_select: \"hass:format-list-bulleted\",\n  input_text: \"hass:textbox\",\n  light: \"hass:lightbulb\",\n  mailbox: \"hass:mailbox\",\n  notify: \"hass:comment-alert\",\n  person: \"hass:account\",\n  plant: \"hass:flower\",\n  proximity: \"hass:apple-safari\",\n  remote: \"hass:remote\",\n  scene: \"hass:google-pages\",\n  script: \"hass:file-document\",\n  sensor: \"hass:eye\",\n  simple_alarm: \"hass:bell\",\n  sun: \"hass:white-balance-sunny\",\n  switch: \"hass:flash\",\n  timer: \"hass:timer\",\n  updater: \"hass:cloud-upload\",\n  vacuum: \"hass:robot-vacuum\",\n  water_heater: \"hass:thermometer\",\n  weather: \"hass:weather-cloudy\",\n  weblink: \"hass:open-in-new\",\n};\n\nexport default function domainIcon(domain: string, state?: string): string {\n  if (domain in fixedIcons) {\n    return fixedIcons[domain];\n  }\n\n  switch (domain) {\n    case \"alarm_control_panel\":\n      switch (state) {\n        case \"armed_home\":\n          return \"hass:bell-plus\";\n        case \"armed_night\":\n          return \"hass:bell-sleep\";\n        case \"disarmed\":\n          return \"hass:bell-outline\";\n        case \"triggered\":\n          return \"hass:bell-ring\";\n        default:\n          return \"hass:bell\";\n      }\n\n    case \"binary_sensor\":\n      return state && state === \"off\"\n        ? \"hass:radiobox-blank\"\n        : \"hass:checkbox-marked-circle\";\n\n    case \"cover\":\n      return state === \"closed\" ? \"hass:window-closed\" : \"hass:window-open\";\n\n    case \"lock\":\n      return state && state === \"unlocked\" ? \"hass:lock-open\" : \"hass:lock\";\n\n    case \"media_player\":\n      return state && state !== \"off\" && state !== \"idle\"\n        ? \"hass:cast-connected\"\n        : \"hass:cast\";\n\n    case \"zwave\":\n      switch (state) {\n        case \"dead\":\n          return \"hass:emoticon-dead\";\n        case \"sleeping\":\n          return \"hass:sleep\";\n        case \"initializing\":\n          return \"hass:timer-sand\";\n        default:\n          return \"hass:z-wave\";\n      }\n\n    default:\n      // tslint:disable-next-line\n      console.warn(\n        \"Unable to find icon for domain \" + domain + \" (\" + state + \")\"\n      );\n      return DEFAULT_DOMAIN_ICON;\n  }\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport computeDomain from \"./compute_domain\";\n\nexport default function computeStateDomain(stateObj: HassEntity) {\n  return computeDomain(stateObj.entity_id);\n}\n","import {\n  LitElement,\n  TemplateResult,\n  css,\n  CSSResult,\n  html,\n  property,\n  PropertyValues,\n  query,\n} from \"lit-element\";\nimport \"../ha-icon\";\nimport computeStateDomain from \"../../common/entity/compute_state_domain\";\nimport stateIcon from \"../../common/entity/state_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"../ha-icon\";\nimport { HomeAssistant } from \"../../types\";\n\nclass StateBadge extends LitElement {\n  public hass?: HomeAssistant;\n  @property() public stateObj?: HassEntity;\n  @property() public overrideIcon?: string;\n  @property() public overrideImage?: string;\n  @query(\"ha-icon\") private _icon!: HaIcon;\n\n  protected render(): TemplateResult | void {\n    const stateObj = this.stateObj;\n\n    if (!stateObj) {\n      return html``;\n    }\n\n    return html`\n      <ha-icon\n        id=\"icon\"\n        data-domain=${computeStateDomain(stateObj)}\n        data-state=${stateObj.state}\n        .icon=${this.overrideIcon || stateIcon(stateObj)}\n      ></ha-icon>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (!changedProps.has(\"stateObj\") || !this.stateObj) {\n      return;\n    }\n    const stateObj = this.stateObj;\n\n    const iconStyle: Partial<CSSStyleDeclaration> = {\n      color: \"\",\n      filter: \"\",\n    };\n    const hostStyle: Partial<CSSStyleDeclaration> = {\n      backgroundImage: \"\",\n    };\n    if (stateObj) {\n      // hide icon if we have entity picture\n      if (\n        (stateObj.attributes.entity_picture && !this.overrideIcon) ||\n        this.overrideImage\n      ) {\n        let imageUrl = this.overrideImage || stateObj.attributes.entity_picture;\n        if (this.hass) {\n          imageUrl = this.hass.hassUrl(imageUrl);\n        }\n        hostStyle.backgroundImage = `url(${imageUrl})`;\n        iconStyle.display = \"none\";\n      } else {\n        if (stateObj.attributes.hs_color) {\n          const hue = stateObj.attributes.hs_color[0];\n          const sat = stateObj.attributes.hs_color[1];\n          if (sat > 10) {\n            iconStyle.color = `hsl(${hue}, 100%, ${100 - sat / 2}%)`;\n          }\n        }\n        if (stateObj.attributes.brightness) {\n          const brightness = stateObj.attributes.brightness;\n          if (typeof brightness !== \"number\") {\n            const errorMessage = `Type error: state-badge expected number, but type of ${\n              stateObj.entity_id\n            }.attributes.brightness is ${typeof brightness} (${brightness})`;\n            // tslint:disable-next-line\n            console.warn(errorMessage);\n          }\n          // lowest brighntess will be around 50% (that's pretty dark)\n          iconStyle.filter = `brightness(${(brightness + 245) / 5}%)`;\n        }\n      }\n    }\n    Object.assign(this._icon.style, iconStyle);\n    Object.assign(this.style, hostStyle);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        position: relative;\n        display: inline-block;\n        width: 40px;\n        color: var(--paper-item-icon-color, #44739e);\n        border-radius: 50%;\n        height: 40px;\n        text-align: center;\n        background-size: cover;\n        line-height: 40px;\n      }\n\n      ha-icon {\n        transition: color 0.3s ease-in-out, filter 0.3s ease-in-out;\n      }\n\n      /* Color the icon if light or sun is on */\n      ha-icon[data-domain=\"light\"][data-state=\"on\"],\n      ha-icon[data-domain=\"switch\"][data-state=\"on\"],\n      ha-icon[data-domain=\"binary_sensor\"][data-state=\"on\"],\n      ha-icon[data-domain=\"fan\"][data-state=\"on\"],\n      ha-icon[data-domain=\"sun\"][data-state=\"above_horizon\"] {\n        color: var(--paper-item-icon-active-color, #fdd835);\n      }\n\n      /* Color the icon if unavailable */\n      ha-icon[data-state=\"unavailable\"] {\n        color: var(--state-icon-unavailable-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"state-badge\": StateBadge;\n  }\n}\n\ncustomElements.define(\"state-badge\", StateBadge);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../ha-relative-time\";\nimport \"./state-badge\";\nimport computeStateName from \"../../common/entity/compute_state_name\";\nimport { computeRTL } from \"../../common/util/compute_rtl\";\n\nclass StateInfo extends PolymerElement {\n  static get template() {\n    return html`\n      ${this.styleTemplate} ${this.stateBadgeTemplate} ${this.infoTemplate}\n    `;\n  }\n\n  static get styleTemplate() {\n    return html`\n      <style>\n        :host {\n          @apply --paper-font-body1;\n          min-width: 120px;\n          white-space: nowrap;\n        }\n\n        state-badge {\n          float: left;\n        }\n\n        :host([rtl]) state-badge {\n          float: right;\n        }\n\n        .info {\n          margin-left: 56px;\n        }\n\n        :host([rtl]) .info {\n          margin-right: 56px;\n          margin-left: 0;\n          text-align: right;\n        }\n\n        .name {\n          @apply --paper-font-common-nowrap;\n          color: var(--primary-text-color);\n          line-height: 40px;\n        }\n\n        .name[in-dialog],\n        :host([secondary-line]) .name {\n          line-height: 20px;\n        }\n\n        .time-ago,\n        .extra-info,\n        .extra-info > * {\n          @apply --paper-font-common-nowrap;\n          color: var(--secondary-text-color);\n        }\n      </style>\n    `;\n  }\n\n  static get stateBadgeTemplate() {\n    return html`\n      <state-badge state-obj=\"[[stateObj]]\"></state-badge>\n    `;\n  }\n\n  static get infoTemplate() {\n    return html`\n      <div class=\"info\">\n        <div class=\"name\" in-dialog$=\"[[inDialog]]\">\n          [[computeStateName(stateObj)]]\n        </div>\n\n        <template is=\"dom-if\" if=\"[[inDialog]]\">\n          <div class=\"time-ago\">\n            <ha-relative-time\n              hass=\"[[hass]]\"\n              datetime=\"[[stateObj.last_changed]]\"\n            ></ha-relative-time>\n          </div>\n        </template>\n        <template is=\"dom-if\" if=\"[[!inDialog]]\">\n          <div class=\"extra-info\"><slot> </slot></div>\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      stateObj: Object,\n      inDialog: {\n        type: Boolean,\n        value: () => false,\n      },\n      rtl: {\n        type: Boolean,\n        reflectToAttribute: true,\n        computed: \"computeRTL(hass)\",\n      },\n    };\n  }\n\n  computeStateName(stateObj) {\n    return computeStateName(stateObj);\n  }\n\n  computeRTL(hass) {\n    return computeRTL(hass);\n  }\n}\n\ncustomElements.define(\"state-info\", StateInfo);\n","/** Compute the object ID of a state. */\nexport default function computeObjectId(entityId: string): string {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n}\n","/** Return an icon representing a sensor state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { UNIT_C, UNIT_F } from \"../const\";\nimport domainIcon from \"./domain_icon\";\n\nconst fixedDeviceClassIcons = {\n  humidity: \"hass:water-percent\",\n  illuminance: \"hass:brightness-5\",\n  temperature: \"hass:thermometer\",\n  pressure: \"hass:gauge\",\n  power: \"hass:flash\",\n  signal_strength: \"hass:wifi\",\n};\n\nexport default function sensorIcon(state: HassEntity) {\n  const dclass = state.attributes.device_class;\n\n  if (dclass && dclass in fixedDeviceClassIcons) {\n    return fixedDeviceClassIcons[dclass];\n  }\n  if (dclass === \"battery\") {\n    const battery = Number(state.state);\n    if (isNaN(battery)) {\n      return \"hass:battery-unknown\";\n    }\n    const batteryRound = Math.round(battery / 10) * 10;\n    if (batteryRound >= 100) {\n      return \"hass:battery\";\n    }\n    if (batteryRound <= 0) {\n      return \"hass:battery-alert\";\n    }\n    // Will return one of the following icons: (listed so extractor picks up)\n    // hass:battery-10\n    // hass:battery-20\n    // hass:battery-30\n    // hass:battery-40\n    // hass:battery-50\n    // hass:battery-60\n    // hass:battery-70\n    // hass:battery-80\n    // hass:battery-90\n    // We obscure 'hass' in iconname so this name does not get picked up\n    return `${\"hass\"}:battery-${batteryRound}`;\n  }\n\n  const unit = state.attributes.unit_of_measurement;\n  if (unit === UNIT_C || unit === UNIT_F) {\n    return \"hass:thermometer\";\n  }\n  return domainIcon(\"sensor\");\n}\n","/** Return an icon representing a state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\n\nimport computeDomain from \"./compute_domain\";\nimport domainIcon from \"./domain_icon\";\n\nimport binarySensorIcon from \"./binary_sensor_icon\";\nimport coverIcon from \"./cover_icon\";\nimport sensorIcon from \"./sensor_icon\";\nimport inputDateTimeIcon from \"./input_dateteime_icon\";\n\nconst domainIcons = {\n  binary_sensor: binarySensorIcon,\n  cover: coverIcon,\n  sensor: sensorIcon,\n  input_datetime: inputDateTimeIcon,\n};\n\nexport default function stateIcon(state: HassEntity) {\n  if (!state) {\n    return DEFAULT_DOMAIN_ICON;\n  }\n  if (state.attributes.icon) {\n    return state.attributes.icon;\n  }\n\n  const domain = computeDomain(state.entity_id);\n\n  if (domain in domainIcons) {\n    return domainIcons[domain](state);\n  }\n  return domainIcon(domain, state.state);\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\n/** Return an icon representing a binary sensor state. */\n\nexport default function binarySensorIcon(state: HassEntity) {\n  const activated = state.state && state.state === \"off\";\n  switch (state.attributes.device_class) {\n    case \"battery\":\n      return activated ? \"hass:battery\" : \"hass:battery-outline\";\n    case \"cold\":\n      return activated ? \"hass:thermometer\" : \"hass:snowflake\";\n    case \"connectivity\":\n      return activated ? \"hass:server-network-off\" : \"hass:server-network\";\n    case \"door\":\n      return activated ? \"hass:door-closed\" : \"hass:door-open\";\n    case \"garage_door\":\n      return activated ? \"hass:garage\" : \"hass:garage-open\";\n    case \"gas\":\n    case \"power\":\n    case \"problem\":\n    case \"safety\":\n    case \"smoke\":\n      return activated ? \"hass:shield-check\" : \"hass:alert\";\n    case \"heat\":\n      return activated ? \"hass:thermometer\" : \"hass:fire\";\n    case \"light\":\n      return activated ? \"hass:brightness-5\" : \"hass:brightness-7\";\n    case \"lock\":\n      return activated ? \"hass:lock\" : \"hass:lock-open\";\n    case \"moisture\":\n      return activated ? \"hass:water-off\" : \"hass:water\";\n    case \"motion\":\n      return activated ? \"hass:walk\" : \"hass:run\";\n    case \"occupancy\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"opening\":\n      return activated ? \"hass:square\" : \"hass:square-outline\";\n    case \"plug\":\n      return activated ? \"hass:power-plug-off\" : \"hass:power-plug\";\n    case \"presence\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"sound\":\n      return activated ? \"hass:music-note-off\" : \"hass:music-note\";\n    case \"vibration\":\n      return activated ? \"hass:crop-portrait\" : \"hass:vibrate\";\n    case \"window\":\n      return activated ? \"hass:window-closed\" : \"hass:window-open\";\n    default:\n      return activated ? \"hass:radiobox-blank\" : \"hass:checkbox-marked-circle\";\n  }\n}\n","/** Return an icon representing a cover state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport domainIcon from \"./domain_icon\";\n\nexport default function coverIcon(state: HassEntity): string {\n  const open = state.state !== \"closed\";\n  switch (state.attributes.device_class) {\n    case \"garage\":\n      return open ? \"hass:garage-open\" : \"hass:garage\";\n    case \"door\":\n      return open ? \"hass:door-open\" : \"hass:door-closed\";\n    case \"window\":\n      return open ? \"hass:window-open\" : \"hass:window-closed\";\n    default:\n      return domainIcon(\"cover\", state.state);\n  }\n}\n","/** Return an icon representing an input datetime state. */\nimport domainIcon from \"./domain_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\nexport default function inputDateTimeIcon(state: HassEntity): string {\n  if (!state.attributes.has_date) {\n    return \"hass:clock\";\n  }\n  if (!state.attributes.has_time) {\n    return \"hass:calendar\";\n  }\n  return domainIcon(\"input_datetime\");\n}\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { dom } from \"@polymer/polymer/lib/legacy/polymer.dom\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport relativeTime from \"../common/datetime/relative_time\";\n\nimport LocalizeMixin from \"../mixins/localize-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaRelativeTime extends LocalizeMixin(PolymerElement) {\n  static get properties() {\n    return {\n      hass: Object,\n      datetime: {\n        type: String,\n        observer: \"datetimeChanged\",\n      },\n\n      datetimeObj: {\n        type: Object,\n        observer: \"datetimeObjChanged\",\n      },\n\n      parsedDateTime: Object,\n    };\n  }\n\n  constructor() {\n    super();\n    this.updateRelative = this.updateRelative.bind(this);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // update every 60 seconds\n    this.updateInterval = setInterval(this.updateRelative, 60000);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    clearInterval(this.updateInterval);\n  }\n\n  datetimeChanged(newVal) {\n    this.parsedDateTime = newVal ? new Date(newVal) : null;\n\n    this.updateRelative();\n  }\n\n  datetimeObjChanged(newVal) {\n    this.parsedDateTime = newVal;\n\n    this.updateRelative();\n  }\n\n  updateRelative() {\n    const root = dom(this);\n    if (!this.parsedDateTime) {\n      root.innerHTML = this.localize(\"ui.components.relative_time.never\");\n    } else {\n      root.innerHTML = relativeTime(this.parsedDateTime, this.localize);\n    }\n  }\n}\n\ncustomElements.define(\"ha-relative-time\", HaRelativeTime);\n","import { LocalizeFunc } from \"../translations/localize\";\n\n/**\n * Calculate a string representing a date object as relative time from now.\n *\n * Example output: 5 minutes ago, in 3 days.\n */\nconst tests = [60, 60, 24, 7];\nconst langKey = [\"second\", \"minute\", \"hour\", \"day\"];\n\nexport default function relativeTime(\n  dateObj: Date,\n  localize: LocalizeFunc,\n  options: {\n    compareTime?: Date;\n    includeTense?: boolean;\n  } = {}\n): string {\n  const compareTime = options.compareTime || new Date();\n  let delta = (compareTime.getTime() - dateObj.getTime()) / 1000;\n  const tense = delta >= 0 ? \"past\" : \"future\";\n  delta = Math.abs(delta);\n\n  let timeDesc;\n\n  for (let i = 0; i < tests.length; i++) {\n    if (delta < tests[i]) {\n      delta = Math.floor(delta);\n      timeDesc = localize(\n        `ui.components.relative_time.duration.${langKey[i]}`,\n        \"count\",\n        delta\n      );\n      break;\n    }\n\n    delta /= tests[i];\n  }\n\n  if (timeDesc === undefined) {\n    delta = Math.floor(delta);\n    timeDesc = localize(\n      \"ui.components.relative_time.duration.week\",\n      \"count\",\n      delta\n    );\n  }\n\n  return options.includeTense === false\n    ? timeDesc\n    : localize(`ui.components.relative_time.${tense}`, \"time\", timeDesc);\n}\n","import computeDomain from \"./compute_domain\";\n\nexport type FilterFunc = (entityId: string) => boolean;\n\nexport interface EntityFilter {\n  include_domains: string[];\n  include_entities: string[];\n  exclude_domains: string[];\n  exclude_entities: string[];\n}\n\nexport const isEmptyFilter = (filter: EntityFilter) =>\n  filter.include_domains.length +\n    filter.include_entities.length +\n    filter.exclude_domains.length +\n    filter.exclude_entities.length ===\n  0;\n\nexport const generateFilter = (\n  includeDomains?: string[],\n  includeEntities?: string[],\n  excludeDomains?: string[],\n  excludeEntities?: string[]\n): FilterFunc => {\n  const includeDomainsSet = new Set(includeDomains);\n  const includeEntitiesSet = new Set(includeEntities);\n  const excludeDomainsSet = new Set(excludeDomains);\n  const excludeEntitiesSet = new Set(excludeEntities);\n\n  const haveInclude = includeDomainsSet.size > 0 || includeEntitiesSet.size > 0;\n  const haveExclude = excludeDomainsSet.size > 0 || excludeEntitiesSet.size > 0;\n\n  // Case 1 - no includes or excludes - pass all entities\n  if (!haveInclude && !haveExclude) {\n    return () => true;\n  }\n\n  // Case 2 - includes, no excludes - only include specified entities\n  if (haveInclude && !haveExclude) {\n    return (entityId) =>\n      includeEntitiesSet.has(entityId) ||\n      includeDomainsSet.has(computeDomain(entityId));\n  }\n\n  // Case 3 - excludes, no includes - only exclude specified entities\n  if (!haveInclude && haveExclude) {\n    return (entityId) =>\n      !excludeEntitiesSet.has(entityId) &&\n      !excludeDomainsSet.has(computeDomain(entityId));\n  }\n\n  // Case 4 - both includes and excludes specified\n  // Case 4a - include domain specified\n  //  - if domain is included, pass if entity not excluded\n  //  - if domain is not included, pass if entity is included\n  // note: if both include and exclude domains specified,\n  //   the exclude domains are ignored\n  if (includeDomainsSet.size) {\n    return (entityId) =>\n      includeDomainsSet.has(computeDomain(entityId))\n        ? !excludeEntitiesSet.has(entityId)\n        : includeEntitiesSet.has(entityId);\n  }\n\n  // Case 4b - exclude domain specified\n  //  - if domain is excluded, pass if entity is included\n  //  - if domain is not excluded, pass if entity not excluded\n  if (excludeDomainsSet.size) {\n    return (entityId) =>\n      excludeDomainsSet.has(computeDomain(entityId))\n        ? includeEntitiesSet.has(entityId)\n        : !excludeEntitiesSet.has(entityId);\n  }\n\n  // Case 4c - neither include or exclude domain specified\n  //  - Only pass if entity is included.  Ignore entity excludes.\n  return (entityId) => includeEntitiesSet.has(entityId);\n};\n","import { fireEvent } from \"../../common/dom/fire_event\";\n\nexport interface HaDomainTogglerDialogParams {\n  domains: string[];\n  toggleDomain: (domain: string, turnOn: boolean) => void;\n}\n\nexport const loadDomainTogglerDialog = () =>\n  import(/* webpackChunkName: \"dialog-domain-toggler\" */ \"./dialog-domain-toggler\");\n\nexport const showDomainTogglerDialog = (\n  element: HTMLElement,\n  dialogParams: HaDomainTogglerDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-domain-toggler\",\n    dialogImport: loadDomainTogglerDialog,\n    dialogParams,\n  });\n};\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-toggle-button\";\nimport \"@polymer/paper-icon-button\";\nimport \"../../../../layouts/hass-subpage\";\nimport \"../../../../layouts/hass-loading-screen\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/entity/state-info\";\nimport { HomeAssistant } from \"../../../../types\";\nimport {\n  CloudStatusLoggedIn,\n  CloudPreferences,\n  updateCloudAlexaEntityConfig,\n  AlexaEntityConfig,\n} from \"../../../../data/cloud\";\nimport memoizeOne from \"memoize-one\";\nimport {\n  generateFilter,\n  isEmptyFilter,\n  EntityFilter,\n} from \"../../../../common/entity/entity_filter\";\nimport { compare } from \"../../../../common/string/compare\";\nimport computeStateName from \"../../../../common/entity/compute_state_name\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { showDomainTogglerDialog } from \"../../../../dialogs/domain-toggler/show-dialog-domain-toggler\";\nimport computeDomain from \"../../../../common/entity/compute_domain\";\nimport { AlexaEntity, fetchCloudAlexaEntities } from \"../../../../data/alexa\";\n\nconst DEFAULT_CONFIG_EXPOSE = true;\nconst IGNORE_INTERFACES = [\"Alexa.EndpointHealth\"];\n\nconst configIsExposed = (config: AlexaEntityConfig) =>\n  config.should_expose === undefined\n    ? DEFAULT_CONFIG_EXPOSE\n    : config.should_expose;\n\n@customElement(\"cloud-alexa\")\nclass CloudAlexa extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property()\n  public cloudStatus!: CloudStatusLoggedIn;\n\n  @property({ type: Boolean }) public narrow!: boolean;\n\n  @property() private _entities?: AlexaEntity[];\n\n  @property()\n  private _entityConfigs: CloudPreferences[\"alexa_entity_configs\"] = {};\n  private _popstateSyncAttached = false;\n  private _popstateReloadStatusAttached = false;\n  private _isInitialExposed?: Set<string>;\n\n  private _getEntityFilterFunc = memoizeOne((filter: EntityFilter) =>\n    generateFilter(\n      filter.include_domains,\n      filter.include_entities,\n      filter.exclude_domains,\n      filter.exclude_entities\n    )\n  );\n\n  protected render(): TemplateResult | void {\n    if (this._entities === undefined) {\n      return html`\n        <hass-loading-screen></hass-loading-screen>\n      `;\n    }\n    const emptyFilter = isEmptyFilter(this.cloudStatus.alexa_entities);\n    const filterFunc = this._getEntityFilterFunc(\n      this.cloudStatus.alexa_entities\n    );\n\n    // We will only generate `isInitialExposed` during first render.\n    // On each subsequent render we will use the same set so that cards\n    // will not jump around when we change the exposed setting.\n    const showInExposed = this._isInitialExposed || new Set();\n    const trackExposed = this._isInitialExposed === undefined;\n\n    let selected = 0;\n\n    // On first render we decide which cards show in which category.\n    // That way cards won't jump around when changing values.\n    const exposedCards: TemplateResult[] = [];\n    const notExposedCards: TemplateResult[] = [];\n\n    this._entities.forEach((entity) => {\n      const stateObj = this.hass.states[entity.entity_id];\n      const config = this._entityConfigs[entity.entity_id] || {};\n      const isExposed = emptyFilter\n        ? configIsExposed(config)\n        : filterFunc(entity.entity_id);\n      if (isExposed) {\n        selected++;\n\n        if (trackExposed) {\n          showInExposed.add(entity.entity_id);\n        }\n      }\n\n      const target = showInExposed.has(entity.entity_id)\n        ? exposedCards\n        : notExposedCards;\n\n      target.push(html`\n        <ha-card>\n          <div class=\"card-content\">\n            <state-info\n              .hass=${this.hass}\n              .stateObj=${stateObj}\n              secondary-line\n              @click=${this._showMoreInfo}\n            >\n              ${entity.interfaces\n                .filter((ifc) => !IGNORE_INTERFACES.includes(ifc))\n                .map((ifc) =>\n                  ifc.replace(\"Alexa.\", \"\").replace(\"Controller\", \"\")\n                )\n                .join(\", \")}\n            </state-info>\n            <paper-toggle-button\n              .entityId=${entity.entity_id}\n              .disabled=${!emptyFilter}\n              .checked=${isExposed}\n              @checked-changed=${this._exposeChanged}\n            >\n              Expose to Alexa\n            </paper-toggle-button>\n          </div>\n        </ha-card>\n      `);\n    });\n\n    if (trackExposed) {\n      this._isInitialExposed = showInExposed;\n    }\n\n    return html`\n      <hass-subpage header=\"Alexa\">\n        <span slot=\"toolbar-icon\">\n          ${selected}${\n      !this.narrow\n        ? html`\n            selected\n          `\n        : \"\"\n    }\n        </span>\n        ${\n          emptyFilter\n            ? html`\n                <paper-icon-button\n                  slot=\"toolbar-icon\"\n                  icon=\"hass:tune\"\n                  @click=${this._openDomainToggler}\n                ></paper-icon-button>\n              `\n            : \"\"\n        }\n        ${\n          !emptyFilter\n            ? html`\n                <div class=\"banner\">\n                  Editing which entities are exposed via this UI is disabled\n                  because you have configured entity filters in\n                  configuration.yaml.\n                </div>\n              `\n            : \"\"\n        }\n          ${\n            exposedCards.length > 0\n              ? html`\n                  <h1>Exposed entities</h1>\n                  <div class=\"content\">${exposedCards}</div>\n                `\n              : \"\"\n          }\n          ${\n            notExposedCards.length > 0\n              ? html`\n                  <h1>Not Exposed entities</h1>\n                  <div class=\"content\">${notExposedCards}</div>\n                `\n              : \"\"\n          }\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchData();\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n    if (changedProps.has(\"cloudStatus\")) {\n      this._entityConfigs = this.cloudStatus.prefs.alexa_entity_configs;\n    }\n  }\n\n  private async _fetchData() {\n    const entities = await fetchCloudAlexaEntities(this.hass);\n    entities.sort((a, b) => {\n      const stateA = this.hass.states[a.entity_id];\n      const stateB = this.hass.states[b.entity_id];\n      return compare(\n        stateA ? computeStateName(stateA) : a.entity_id,\n        stateB ? computeStateName(stateB) : b.entity_id\n      );\n    });\n    this._entities = entities;\n  }\n\n  private _showMoreInfo(ev) {\n    const entityId = ev.currentTarget.stateObj.entity_id;\n    fireEvent(this, \"hass-more-info\", { entityId });\n  }\n\n  private async _exposeChanged(ev: PolymerChangedEvent<boolean>) {\n    const entityId = (ev.currentTarget as any).entityId;\n    const newExposed = ev.detail.value;\n    await this._updateExposed(entityId, newExposed);\n  }\n\n  private async _updateExposed(entityId: string, newExposed: boolean) {\n    const curExposed = configIsExposed(this._entityConfigs[entityId] || {});\n    if (newExposed === curExposed) {\n      return;\n    }\n    await this._updateConfig(entityId, {\n      should_expose: newExposed,\n    });\n    this._ensureEntitySync();\n  }\n\n  private async _updateConfig(entityId: string, values: AlexaEntityConfig) {\n    const updatedConfig = await updateCloudAlexaEntityConfig(\n      this.hass,\n      entityId,\n      values\n    );\n    this._entityConfigs = {\n      ...this._entityConfigs,\n      [entityId]: updatedConfig,\n    };\n    this._ensureStatusReload();\n  }\n\n  private _openDomainToggler() {\n    showDomainTogglerDialog(this, {\n      domains: this._entities!.map((entity) =>\n        computeDomain(entity.entity_id)\n      ).filter((value, idx, self) => self.indexOf(value) === idx),\n      toggleDomain: (domain, turnOn) => {\n        this._entities!.forEach((entity) => {\n          if (computeDomain(entity.entity_id) === domain) {\n            this._updateExposed(entity.entity_id, turnOn);\n          }\n        });\n      },\n    });\n  }\n\n  private _ensureStatusReload() {\n    if (this._popstateReloadStatusAttached) {\n      return;\n    }\n    this._popstateReloadStatusAttached = true;\n    // Cache parent because by the time popstate happens,\n    // this element is detached\n    const parent = this.parentElement!;\n    window.addEventListener(\n      \"popstate\",\n      () => fireEvent(parent, \"ha-refresh-cloud-status\"),\n      { once: true }\n    );\n  }\n\n  private _ensureEntitySync() {\n    if (this._popstateSyncAttached) {\n      return;\n    }\n    this._popstateSyncAttached = true;\n    // Cache parent because by the time popstate happens,\n    // this element is detached\n    // const parent = this.parentElement!;\n    window.addEventListener(\n      \"popstate\",\n      () => {\n        // We don't have anything yet.\n        // showToast(parent, { message: \"Synchronizing changes to Google.\" });\n        // cloudSyncGoogleAssistant(this.hass);\n      },\n      { once: true }\n    );\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .banner {\n        color: var(--primary-text-color);\n        background-color: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        padding: 16px 8px;\n        text-align: center;\n      }\n      h1 {\n        color: var(--primary-text-color);\n        font-size: 24px;\n        letter-spacing: -0.012em;\n        margin-bottom: 0;\n        padding: 0 8px;\n      }\n      .content {\n        display: flex;\n        flex-wrap: wrap;\n        padding: 4px;\n        --paper-toggle-button-label-spacing: 16px;\n      }\n      paper-toggle-button {\n        clear: both;\n      }\n      ha-card {\n        margin: 4px;\n        width: 100%;\n        max-width: 300px;\n      }\n      .card-content {\n        padding-bottom: 12px;\n      }\n      state-info {\n        cursor: pointer;\n      }\n      paper-toggle-button {\n        padding: 8px 0;\n      }\n\n      @media all and (max-width: 450px) {\n        ha-card {\n          max-width: 100%;\n        }\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"cloud-alexa\": CloudAlexa;\n  }\n}\n"],"sourceRoot":""}