# -*- coding: utf-8 -*-
from distutils.core import setup

packages = \
['examples']

package_data = \
{'': ['*']}

install_requires = \
['pydantic>=0.32.2,<0.33.0']

setup_kwargs = {
    'name': 'examples',
    'version': '0.1.0',
    'description': 'Tests and Documentation Done by Example.',
    'long_description': "[![eXamples - Python Tests and Documentation Done by Example.](https://raw.github.com/timothycrosley/examples/master/art/logo_large.png)](https://timothycrosley.github.io/examples/)\n_________________\n\n[![PyPI version](https://badge.fury.io/py/examples.svg)](http://badge.fury.io/py/examples)\n[![Build Status](https://travis-ci.org/timothycrosley/examples.svg?branch=master)](https://travis-ci.org/timothycrosley/examples)\n[![codecov](https://codecov.io/gh/timothycrosley/examples/branch/master/graph/badge.svg)](https://codecov.io/gh/timothycrosley/examples)\n[![Join the chat at https://gitter.im/timothycrosley/examples](https://badges.gitter.im/timothycrosley/examples.svg)](https://gitter.im/timothycrosley/examples?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![License](https://img.shields.io/github/license/mashape/apistatus.svg)](https://pypi.python.org/pypi/examples/)\n[![Downloads](https://pepy.tech/badge/examples)](https://pepy.tech/project/examples)\n_________________\n\n[Read Latest Documentation](https://timothycrosley.github.io/examples/) - [Browse GitHub Code Repository](https://github.com/timothycrosley/examples/)\n_________________\n\n**eXamples** (AKA: xamples for SEO purposes) is a Python3 library enabling interactable, self-documentating, and self-verifying examples to be attached to Python functions using decorators.\n\n[![Example Usage Gif](https://raw.githubusercontent.com/timothycrosley/portray/master/art/example.gif)](https://raw.githubusercontent.com/timothycrosley/portray/master/art/example.gif)\n\nKey Features:\n\n* **Simple and Obvious API**: Simply add `@examples.example(*args, **kwargs)` decorators for each example you want to add to a function.\n* **Statically Generated**: `portray` websites are easy to host on GitHub pages and other similar services as they are outputted as standard static HTML websites.\n* **Markdown Aware**: `portray` will automatically include your projects `.md` files and render them into HTML. It will also find and render Markdown within `__doc__` strings.\n* **Fully Configurable**: While `portray` doesn't have to be configured, you still can fully configure it within the standard `pyproject.toml` file.\n* **Easily Programmable**: `portray` exposes a clean and simple [Python API](https://timothycrosley.github.io/portray/reference/portray/api/).\n* **Searchable**: Out of the box `portray` makes all of your documentation, even autogenerated code references, free-text searchable.\n* **Themeable**: `portray` is compatible with all existing [MkDocs Themes](https://github.com/mkdocs/mkdocs/wiki/MkDocs-Themes).\n\nUnder the hood, portray combines the [Markdown](https://commonmark.org/help/) documentation rendering capabilities provided by [MkDocs](https://www.mkdocs.org/)\nwith the automatic reference documentation generated by [pdocs](https://timothycrosley.github.io/pdocs/).\n\n## Quick Start\n\nThe following guides should get you up and running with a documentation website in no time.\n\n1. [Installation](https://timothycrosley.github.io/portray/docs/quick_start/1.-installation/) - TL;DR: Run `pip3 install portray` within your projects virtual environment.\n2. [Command Line Usage](https://timothycrosley.github.io/portray/docs/quick_start/2.-cli/) - TL;DR: Run `portray in_browser` to test and `portray on_github_pages` to deploy.\n3. [API Usage](https://timothycrosley.github.io/portray/docs/quick_start/3.-api/) - TL;DR: Everything available via the CLI is also easily available programmatically from within Python.\n4. [Configuration](https://timothycrosley.github.io/portray/docs/quick_start/4.-configuration/) - TL;DR: Put all configuration within a `[tool.portray]` section of your `pyproject.toml` file.\n\n## Why Create Examples?\n\nI've always wanted a way to attach examples to functions in a way that would be re-useable for documentation, testing, and API proposes.\nJust like moving Python parameter types from comments into prorammatically specified and easily introspectable entities has made them more braodly useful,\nI hope examples can do the same for example parameters.\n\nI hope you too find `eXamples` useful!\n\n~Timothy Crosley\n",
    'author': 'Timothy Crosley',
    'author_email': 'timothy.crosley@gmail.com',
    'url': None,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
