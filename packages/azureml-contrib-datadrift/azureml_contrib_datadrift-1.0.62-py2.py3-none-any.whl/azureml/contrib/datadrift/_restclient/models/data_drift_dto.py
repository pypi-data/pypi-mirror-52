# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DataDriftDto(Model):
    """DataDriftDto.

    :param frequency:
    :type frequency: str
    :param schedule_start_time:
    :type schedule_start_time: datetime
    :param schedule_id:
    :type schedule_id: str
    :param interval:
    :type interval: int
    :param enabled:
    :type enabled: bool
    :param state: Possible values include: 'Disabled', 'Enabled', 'Disabling',
     'Enabling'
    :type state: str or ~_restclient.models.enum
    :param alert_configuration:
    :type alert_configuration: ~_restclient.models.AlertConfiguration
    :param alert_id:
    :type alert_id: str
    :param id:
    :type id: str
    :param model_name:
    :type model_name: str
    :param model_version:
    :type model_version: int
    :param services:
    :type services: list[str]
    :param compute_target_name:
    :type compute_target_name: str
    :param start_time:
    :type start_time: datetime
    :param end_time:
    :type end_time: datetime
    :param base_line_dataset:
    :type base_line_dataset: str
    :param base_line_dataset_start_time:
    :type base_line_dataset_start_time: datetime
    :param base_line_dataset_end_time:
    :type base_line_dataset_end_time: datetime
    :param features:
    :type features: list[str]
    :param drift_threshold:
    :type drift_threshold: float
    """

    _attribute_map = {
        'frequency': {'key': 'frequency', 'type': 'str'},
        'schedule_start_time': {'key': 'scheduleStartTime', 'type': 'iso-8601'},
        'schedule_id': {'key': 'scheduleId', 'type': 'str'},
        'interval': {'key': 'interval', 'type': 'int'},
        'enabled': {'key': 'enabled', 'type': 'bool'},
        'state': {'key': 'state', 'type': 'str'},
        'alert_configuration': {'key': 'alertConfiguration', 'type': 'AlertConfiguration'},
        'alert_id': {'key': 'alertId', 'type': 'str'},
        'id': {'key': 'id', 'type': 'str'},
        'model_name': {'key': 'modelName', 'type': 'str'},
        'model_version': {'key': 'modelVersion', 'type': 'int'},
        'services': {'key': 'services', 'type': '[str]'},
        'compute_target_name': {'key': 'computeTargetName', 'type': 'str'},
        'start_time': {'key': 'startTime', 'type': 'iso-8601'},
        'end_time': {'key': 'endTime', 'type': 'iso-8601'},
        'base_line_dataset': {'key': 'baseLineDataset', 'type': 'str'},
        'base_line_dataset_start_time': {'key': 'baseLineDatasetStartTime', 'type': 'iso-8601'},
        'base_line_dataset_end_time': {'key': 'baseLineDatasetEndTime', 'type': 'iso-8601'},
        'features': {'key': 'features', 'type': '[str]'},
        'drift_threshold': {'key': 'driftThreshold', 'type': 'float'},
    }

    def __init__(self, frequency=None, schedule_start_time=None, schedule_id=None, interval=None, enabled=None, state=None, alert_configuration=None, alert_id=None, id=None, model_name=None, model_version=None, services=None, compute_target_name=None, start_time=None, end_time=None, base_line_dataset=None, base_line_dataset_start_time=None, base_line_dataset_end_time=None, features=None, drift_threshold=None):
        super(DataDriftDto, self).__init__()
        self.frequency = frequency
        self.schedule_start_time = schedule_start_time
        self.schedule_id = schedule_id
        self.interval = interval
        self.enabled = enabled
        self.state = state
        self.alert_configuration = alert_configuration
        self.alert_id = alert_id
        self.id = id
        self.model_name = model_name
        self.model_version = model_version
        self.services = services
        self.compute_target_name = compute_target_name
        self.start_time = start_time
        self.end_time = end_time
        self.base_line_dataset = base_line_dataset
        self.base_line_dataset_start_time = base_line_dataset_start_time
        self.base_line_dataset_end_time = base_line_dataset_end_time
        self.features = features
        self.drift_threshold = drift_threshold
