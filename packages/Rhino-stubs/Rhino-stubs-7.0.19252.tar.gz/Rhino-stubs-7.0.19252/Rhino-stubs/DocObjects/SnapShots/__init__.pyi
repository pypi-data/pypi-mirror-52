from typing import Tuple, Set, Iterable, List


class SnapShotsClient:
    def __init__(self): ...
    @property
    def CppPointer(self) -> IntPtr: ...
    @property
    def SerialNumber(self) -> int: ...
    @SerialNumber.setter
    def SerialNumber(self, value: int) -> None: ...
    def Dispose(self) -> None: ...
    def RegisterSnapShotClient(client: SnapShotsClient) -> bool: ...
    def ApplicationCategory() -> str: ...
    def DocumentCategory() -> str: ...
    def RenderingCategory() -> str: ...
    def ViewsCategory() -> str: ...
    def ObjectsCategory() -> str: ...
    def LayersCategory() -> str: ...
    def LightsCategory() -> str: ...
    def PlugInId(self) -> Guid: ...
    def ClientId(self) -> Guid: ...
    def Category(self) -> str: ...
    def Name(self) -> str: ...
    def SupportsDocument(self) -> bool: ...
    def SaveDocument(self, doc: RhinoDoc, archive: BinaryArchiveWriter) -> bool: ...
    def RestoreDocument(self, doc: RhinoDoc, archive: BinaryArchiveReader) -> bool: ...
    def SupportsObjects(self) -> bool: ...
    def SupportsObject(self, doc_object: RhinoObject) -> bool: ...
    def SaveObject(self, doc: RhinoDoc, doc_object: RhinoObject, transform: Transform, archive: BinaryArchiveWriter) -> Tuple[bool, Transform]: ...
    def RestoreObject(self, doc: RhinoDoc, doc_object: RhinoObject, transform: Transform, archive: BinaryArchiveReader) -> Tuple[bool, Transform]: ...
    def SnapshotRestored(self, doc: RhinoDoc) -> None: ...
    def SupportsAnimation(self) -> bool: ...
    def AnimationStart(self, doc: RhinoDoc, iFrames: int) -> None: ...
    def PrepareForDocumentAnimation(self, doc: RhinoDoc, archive_start: BinaryArchiveReader, archive_stop: BinaryArchiveReader) -> bool: ...
    def ExtendBoundingBoxForDocumentAnimation(self, doc: RhinoDoc, archive_start: BinaryArchiveReader, archive_stop: BinaryArchiveReader, bbox: BoundingBox) -> Tuple[BoundingBox]: ...
    def AnimateDocument(self, doc: RhinoDoc, dPos: float, archive_start: BinaryArchiveReader, archive_stop: BinaryArchiveReader) -> bool: ...
    def PrepareForObjectAnimation(self, doc: RhinoDoc, doc_object: RhinoObject, transform: Transform, archive_start: BinaryArchiveReader, archive_stop: BinaryArchiveReader) -> Tuple[bool, Transform]: ...
    def ExtendBoundingBoxForObjectAnimation(self, doc: RhinoDoc, doc_object: RhinoObject, transform: Transform, archive_start: BinaryArchiveReader, archive_stop: BinaryArchiveReader, bbox: BoundingBox) -> Tuple[Transform, BoundingBox]: ...
    def AnimateObject(self, doc: RhinoDoc, doc_object: RhinoObject, transform: Transform, dPos: float, archive_start: BinaryArchiveReader, archive_stop: BinaryArchiveReader) -> Tuple[bool, Transform]: ...
    def AnimationStop(self, doc: RhinoDoc) -> bool: ...
    def ObjectTransformNotification(self, doc: RhinoDoc, doc_object: RhinoObject, transform: Transform, archive: BinaryArchiveReader) -> Tuple[bool, Transform]: ...
    @overload
    def IsCurrentModelStateInAnySnapshot(self, doc: RhinoDoc, archive: BinaryArchiveReader, archive_array: SimpleArrayBinaryArchiveReader, text_log: TextLog) -> bool: ...
    @overload
    def IsCurrentModelStateInAnySnapshot(self, doc: RhinoDoc, doc_object: RhinoObject, archive: BinaryArchiveReader, archive_array: SimpleArrayBinaryArchiveReader, text_log: TextLog) -> bool: ...
