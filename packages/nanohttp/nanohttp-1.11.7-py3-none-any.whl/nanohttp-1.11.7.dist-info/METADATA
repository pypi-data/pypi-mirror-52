Metadata-Version: 2.1
Name: nanohttp
Version: 1.11.7
Summary: A very micro http framework.
Home-page: http://github.com/Carrene/nanohttp
Author: Vahid Mardani
Author-email: vahid.mardani@gmail.com
License: MIT
Platform: UNKNOWN
Classifier: Environment :: Console
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Development Status :: 5 - Production/Stable
Classifier: License :: Other/Proprietary License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Software Development
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI :: Application
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/markdown
Requires-Dist: pymlconf (>=1.0.2)
Requires-Dist: ujson

# nanohttp

A very micro HTTP framework. [documentation](http://nanohttp.org)

[![PyPI](http://img.shields.io/pypi/v/nanohttp.svg)](https://pypi.python.org/pypi/nanohttp)
[![Gitter](https://badges.gitter.im/Carrene/nanohttp.svg)](https://gitter.im/Carrene/nanohttp)
[![Build Status](https://travis-ci.org/Carrene/nanohttp.svg?branch=master)](https://travis-ci.org/Carrene/nanohttp)
[![Coverage Status](https://coveralls.io/repos/github/Carrene/nanohttp/badge.svg?branch=master)](https://coveralls.io/github/Carrene/nanohttp?branch=master)


## Contribution


### Branching

A new branching model is applied to this repository, which consists of a 
master branch and release branches.

#### Master branch

The master branch is an integration branch where bug fixes/features are 
gathered for compiling and functional testing.

#### Release branch

The release branch is where releases are maintained and hot fixes 
(with names like release/v2.x.x) are added. Please ensure that all your 
production-related work are tracked with the release branches.

With this new model, we can push out bug fixes more quickly and achieve 
simpler maintenance.



