from typing import Tuple, Set, Iterable, List


class Thread(Widget):
    def __init__(self, action: Action): ...
    @property
    def CurrentThread() -> Thread: ...
    @property
    def MainThread() -> Thread: ...
    def Start(self) -> None: ...
    def Abort(self) -> None: ...
    @property
    def IsAlive(self) -> bool: ...
    @property
    def IsMain(self) -> bool: ...
    @property
    def IsMainThread() -> bool: ...


class ICallback:
    def OnExecuted(self, widget: Thread) -> None: ...


class IHandler:
    def Create(self) -> None: ...
    def CreateCurrent(self) -> None: ...
    def CreateMain(self) -> None: ...
    def Start(self) -> None: ...
    def Abort(self) -> None: ...
    @property
    def IsAlive(self) -> bool: ...
    @property
    def IsMain(self) -> bool: ...
