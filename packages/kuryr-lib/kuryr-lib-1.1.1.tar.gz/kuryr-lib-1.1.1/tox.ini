[tox]
minversion = 2.3.1
envlist = py27,py37,pep8
skipsdist = True

[testenv]
# Note the hash seed is set to 0 until neutron can be tested with a
# random hash seed successfully.
setenv = VIRTUAL_ENV={envdir}
         PYTHONHASHSEED=0
         PYTHONWARNINGS=default::DeprecationWarning
usedevelop = True
install_command = pip install {opts} {packages}
deps =
       -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/train}
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
whitelist_externals = sh
                      find
commands = find . -type f -name "*.py[c|o]" -delete
           stestr run {posargs}
           stestr slowest

[testenv:fullstack]
basepython = python2.7
setenv = OS_TEST_PATH=./kuryr/tests/fullstack

[testenv:debug]
basepython = python3
commands = oslo_debug_helper -t kuryr/tests {posargs}

[testenv:debug-py27]
basepython = python2.7
commands = oslo_debug_helper -t kuryr/tests {posargs}

[testenv:debug-py35]
basepython = python3.5
commands = oslo_debug_helper -t kuryr/tests {posargs}

[testenv:pep8]
basepython = python3
commands = flake8

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:cover]
basepython = python3
setenv =
    VIRTUAL_ENV={envdir}
    PYTHON=coverage run --source kuryr --parallel-mode
commands =
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml
    coverage report

[testenv:docs]
basepython = python3
deps = -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -a -E -W -d doc/build/doctrees -b html doc/source doc/build/html

[flake8]
# E125 continuation line does not distinguish itself from next logical line
# E126 continuation line over-indented for hanging indent
# E129 visually indented line with same indent as next logical line
# E265 block comment should start with '# '
# N530 direct neutron imports not allowed
ignore = E125,E126,E129,E265,H301,N530
show-source = true

exclude = .venv,.git,.tox,dist,doc,*lib/python*,*egg,build,tools,.ropeproject,rally-scenarios,releasenotes

[testenv:pylint]
basepython = python3
deps =
  {[testenv]deps}
  pylint
commands =
  pylint --rcfile=.pylintrc --output-format=colorized {posargs:neutron}

[hacking]
import_exceptions = neutron.i18n
local-check-factory = neutron_lib.hacking.checks.factory

[testenv:genconfig]
basepython = python3
commands = oslo-config-generator --config-file=etc/kuryr-config-generator.conf

[testenv:releasenotes]
basepython = python3
commands = sphinx-build -a -W -E -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
