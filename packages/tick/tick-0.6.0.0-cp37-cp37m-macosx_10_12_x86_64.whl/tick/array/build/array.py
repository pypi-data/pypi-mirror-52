# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.7
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_array', [dirname(__file__)])
        except ImportError:
            import _array
            return _array
        if fp is not None:
            try:
                _mod = imp.load_module('_array', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _array = swig_import_helper()
    del swig_import_helper
else:
    import _array
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



_array.SHARED_PTR_DISOWN_swigconstant(_array)
SHARED_PTR_DISOWN = _array.SHARED_PTR_DISOWN

def tick_float_array_to_file(_file: 'std::string', array: 'ArrayFloat const &') -> "void":
    """tick_float_array_to_file(std::string _file, ArrayFloat const & array)"""
    return _array.tick_float_array_to_file(_file, array)

def tick_double_array_to_file(_file: 'std::string', array: 'ArrayDouble const &') -> "void":
    """tick_double_array_to_file(std::string _file, ArrayDouble const & array)"""
    return _array.tick_double_array_to_file(_file, array)

def tick_float_array_from_file(_file: 'std::string') -> "SArrayFloatPtr":
    """tick_float_array_from_file(std::string _file) -> SArrayFloatPtr"""
    return _array.tick_float_array_from_file(_file)

def tick_double_array_from_file(_file: 'std::string') -> "SArrayDoublePtr":
    """tick_double_array_from_file(std::string _file) -> SArrayDoublePtr"""
    return _array.tick_double_array_from_file(_file)

def tick_float_array2d_to_file(_file: 'std::string', array: 'ArrayFloat2d const &') -> "void":
    """tick_float_array2d_to_file(std::string _file, ArrayFloat2d const & array)"""
    return _array.tick_float_array2d_to_file(_file, array)

def tick_double_array2d_to_file(_file: 'std::string', array: 'ArrayDouble2d const &') -> "void":
    """tick_double_array2d_to_file(std::string _file, ArrayDouble2d const & array)"""
    return _array.tick_double_array2d_to_file(_file, array)

def tick_float_array2d_from_file(_file: 'std::string') -> "SArrayFloat2dPtr":
    """tick_float_array2d_from_file(std::string _file) -> SArrayFloat2dPtr"""
    return _array.tick_float_array2d_from_file(_file)

def tick_double_array2d_from_file(_file: 'std::string') -> "SArrayDouble2dPtr":
    """tick_double_array2d_from_file(std::string _file) -> SArrayDouble2dPtr"""
    return _array.tick_double_array2d_from_file(_file)

def tick_float_sparse2d_to_file(_file: 'std::string', array: 'SparseArrayFloat2d const &') -> "void":
    """tick_float_sparse2d_to_file(std::string _file, SparseArrayFloat2d const & array)"""
    return _array.tick_float_sparse2d_to_file(_file, array)

def tick_double_sparse2d_to_file(_file: 'std::string', array: 'SparseArrayDouble2d const &') -> "void":
    """tick_double_sparse2d_to_file(std::string _file, SparseArrayDouble2d const & array)"""
    return _array.tick_double_sparse2d_to_file(_file, array)

def tick_float_sparse2d_from_file(_file: 'std::string') -> "SSparseArrayFloat2dPtr":
    """tick_float_sparse2d_from_file(std::string _file) -> SSparseArrayFloat2dPtr"""
    return _array.tick_float_sparse2d_from_file(_file)

def tick_double_sparse2d_from_file(_file: 'std::string') -> "SSparseArrayDouble2dPtr":
    """tick_double_sparse2d_from_file(std::string _file) -> SSparseArrayDouble2dPtr"""
    return _array.tick_double_sparse2d_from_file(_file)

def tick_float_colmaj_sparse2d_to_file(_file: 'std::string', array: 'ColMajSparseArrayFloat2d const &') -> "void":
    """tick_float_colmaj_sparse2d_to_file(std::string _file, ColMajSparseArrayFloat2d const & array)"""
    return _array.tick_float_colmaj_sparse2d_to_file(_file, array)

def tick_float_colmaj_sparse2d_from_file(_file: 'std::string') -> "SColMajSparseArrayFloat2dPtr":
    """tick_float_colmaj_sparse2d_from_file(std::string _file) -> SColMajSparseArrayFloat2dPtr"""
    return _array.tick_float_colmaj_sparse2d_from_file(_file)

def tick_double_colmaj_sparse2d_to_file(_file: 'std::string', array: 'ColMajSparseArrayDouble2d const &') -> "void":
    """tick_double_colmaj_sparse2d_to_file(std::string _file, ColMajSparseArrayDouble2d const & array)"""
    return _array.tick_double_colmaj_sparse2d_to_file(_file, array)

def tick_double_colmaj_sparse2d_from_file(_file: 'std::string') -> "SColMajSparseArrayDouble2dPtr":
    """tick_double_colmaj_sparse2d_from_file(std::string _file) -> SColMajSparseArrayDouble2dPtr"""
    return _array.tick_double_colmaj_sparse2d_from_file(_file)

def tick_float_colmaj_array2d_to_file(_file: 'std::string', array: 'ColMajArrayFloat2d const &') -> "void":
    """tick_float_colmaj_array2d_to_file(std::string _file, ColMajArrayFloat2d const & array)"""
    return _array.tick_float_colmaj_array2d_to_file(_file, array)

def tick_float_colmaj_array2d_from_file(_file: 'std::string') -> "SColMajArrayFloat2dPtr":
    """tick_float_colmaj_array2d_from_file(std::string _file) -> SColMajArrayFloat2dPtr"""
    return _array.tick_float_colmaj_array2d_from_file(_file)

def tick_double_colmaj_array2d_to_file(_file: 'std::string', array: 'ColMajArrayDouble2d const &') -> "void":
    """tick_double_colmaj_array2d_to_file(std::string _file, ColMajArrayDouble2d const & array)"""
    return _array.tick_double_colmaj_array2d_to_file(_file, array)

def tick_double_colmaj_array2d_from_file(_file: 'std::string') -> "SColMajArrayDouble2dPtr":
    """tick_double_colmaj_array2d_from_file(std::string _file) -> SColMajArrayDouble2dPtr"""
    return _array.tick_double_colmaj_array2d_from_file(_file)
# This file is compatible with both classic and new-style classes.


