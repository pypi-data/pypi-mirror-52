#! python

import argparse
import os
import re
import subprocess
import sys

from cc import Confluence
from bb2cc import sync_to_confluence

parser = argparse.ArgumentParser(
    description=('Sync a Markdown document from a Bitbucket repo to a '
                 'Confluence page.'))
parser.add_argument('--host', type=str, required=False,
                    default='https://hello.atlassian.net/wiki/',
                    help='the base URL for the Confluence Cloud instance')
parser.add_argument('-u', '--username', type=str, required=True,
                    help='the username to use for API authentication')
parser.add_argument('-p', '--password', type=str, required=True,
                    help='the password to use for API authentication')
parser.add_argument('-r', '--repository', type=str,
                    help=('the full name (workspace/slug) of the Bitbucket '
                          'repository'))
parser.add_argument('--commit', type=str, required=False,
                    help=('the commit hash to sync (used to sync all of the '
                          'files changed in a commit)'))
parser.add_argument('--path', type=str, required=False,
                    help='path to the Markdown file(s) to sync to Confluence')

args = parser.parse_args()


def get_repository_url(repository):
    """Provide a repository URL given its full name (workspace/slug).

    In case a full URL is provided instead, return it directly. (This allows
    a repository hosted in a non-production environment to be specified.)
    """
    if repository.startswith('https://'):
        return repository
    return 'https://bitbucket.org/{}'.format(repository)


def get_files(args):
    """Get the list of files for the given arguments.

    If the `--commit` argument is specified, list the files changed in the
    commit.

    If the `--path` argument is specified and is a file, the list will only
    contain the file. If it's a directory, it will contain all of the files in
    the directory.
    """
    if not ((args.commit is None) ^ (args.path is None)):
        raise TypeError('You must specify one of either --commit or --path '
                        '(but not both).')

    if args.commit:
        diff_tree_output = subprocess.check_output([
            'git', 'diff-tree', '--no-commit-id', '--name-only', '-r',
            args.commit])
        return [line.decode()
                for line in diff_tree_output.splitlines()]

    if os.path.isfile(args.path):
        return [args.path]

    return [os.path.normpath(os.path.join(args.path, file))
            for file in os.listdir(args.path)
            if re.search(r'\.(?:md|markdown)$', file)]

repository_url = (get_repository_url(args.repository)
                  if args.repository else None)
files = get_files(args)

client = Confluence(host=args.host, username=args.username,
                    password=args.password)

for file in files:
    sys.stdout.write('Syncing {}... '.format(file))
    sync_to_confluence(client, file, repository_url=repository_url)
    sys.stdout.write('OK\n')
