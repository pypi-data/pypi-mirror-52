from typing import Tuple, Set, Iterable, List


class GH_UndoRecord:
    @overload
    def __init__(self): ...
    @overload
    def __init__(self, name: str): ...
    @overload
    def __init__(self, name: str, action: IGH_UndoAction): ...
    @overload
    def __init__(self, name: str, actions: Set(IGH_UndoAction)): ...
    @overload
    def __init__(self, name: str, actions: Iterable[IGH_UndoAction]): ...
    @property
    def Name(self) -> str: ...
    @Name.setter
    def Name(self, Value: str) -> None: ...
    @property
    def Guid(self) -> Guid: ...
    @property
    def Time(self) -> DateTime: ...
    @property
    def State(self) -> GH_UndoState: ...
    @property
    def ActionCount(self) -> int: ...
    @property
    def ExpiresDisplay(self) -> bool: ...
    @property
    def ExpiresSolution(self) -> bool: ...
    @property
    def Actions(self) -> List[IGH_UndoAction]: ...
    def AddAction(self, action: IGH_UndoAction) -> None: ...
    def Undo(self, doc: GH_Document) -> None: ...
    def Redo(self, doc: GH_Document) -> None: ...


class GH_UndoServer:
    def __init__(self, owner: GH_Document): ...
    @property
    def MaxRecords(self) -> int: ...
    @MaxRecords.setter
    def MaxRecords(self, Value: int) -> None: ...
    @property
    def UndoCount(self) -> int: ...
    @property
    def RedoCount(self) -> int: ...
    @property
    def FirstUndoName(self) -> str: ...
    @property
    def FirstRedoName(self) -> str: ...
    @property
    def UndoGuids(self) -> List: ...
    @property
    def UndoNames(self) -> List: ...
    @property
    def RedoGuids(self) -> List: ...
    @property
    def RedoNames(self) -> List: ...
    def RemoveRecord(self, id: Guid) -> bool: ...
    def Clear(self) -> None: ...
    def ClearRedo(self) -> None: ...
    def ClearUndo(self) -> None: ...
    def MergeRecords(self, count: int) -> bool: ...
    @overload
    def PushUndoRecord(self, record: GH_UndoRecord) -> None: ...
    @overload
    def PushUndoRecord(self, name: str, action: GH_UndoAction) -> Guid: ...
    def PerformUndo(self) -> None: ...
    def PerformRedo(self) -> None: ...
    def AppendToDebugLog(self, writer: GH_DebugDescriptionWriter) -> None: ...


class GH_UndoException:
    @overload
    def __init__(self, message: str): ...
    @overload
    def __init__(self, message: str, args: Set(Object)): ...


class GH_UndoState:
    undo = 0
    redo = 1


class IGH_UndoAction:
    @property
    def ExpiresSolution(self) -> bool: ...
    @property
    def ExpiresDisplay(self) -> bool: ...
    @property
    def State(self) -> GH_UndoState: ...
    def Undo(self, doc: GH_Document) -> None: ...
    def Redo(self, doc: GH_Document) -> None: ...


class GH_UndoAction:
    @property
    def State(self) -> GH_UndoState: ...
    @property
    def ExpiresDisplay(self) -> bool: ...
    @property
    def ExpiresSolution(self) -> bool: ...
    def Undo(self, doc: GH_Document) -> None: ...
    def Redo(self, doc: GH_Document) -> None: ...
    def Write(self, writer: GH_IWriter) -> bool: ...
    def Read(self, reader: GH_IReader) -> bool: ...


class GH_ObjectUndoAction(GH_UndoAction):


class GH_ArchivedUndoAction(GH_UndoAction):
    def Write(self, writer: GH_IWriter) -> bool: ...
    def Read(self, reader: GH_IReader) -> bool: ...
