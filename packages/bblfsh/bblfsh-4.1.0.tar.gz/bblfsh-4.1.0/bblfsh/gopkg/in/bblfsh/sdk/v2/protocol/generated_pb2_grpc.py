# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import importlib
gopkg_dot_in_dot_bblfsh_dot_sdk_dot_v2_dot_protocol_dot_generated__pb2 = importlib.import_module("bblfsh.gopkg.in.bblfsh.sdk.v2.protocol.generated_pb2")


class DriverStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Parse = channel.unary_unary(
        '/gopkg.in.bblfsh.sdk.v2.protocol.Driver/Parse',
        request_serializer=gopkg_dot_in_dot_bblfsh_dot_sdk_dot_v2_dot_protocol_dot_generated__pb2.ParseRequest.SerializeToString,
        response_deserializer=gopkg_dot_in_dot_bblfsh_dot_sdk_dot_v2_dot_protocol_dot_generated__pb2.ParseResponse.FromString,
        )


class DriverServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Parse(self, request, context):
    """Parse returns an UAST for a given source file.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DriverServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Parse': grpc.unary_unary_rpc_method_handler(
          servicer.Parse,
          request_deserializer=gopkg_dot_in_dot_bblfsh_dot_sdk_dot_v2_dot_protocol_dot_generated__pb2.ParseRequest.FromString,
          response_serializer=gopkg_dot_in_dot_bblfsh_dot_sdk_dot_v2_dot_protocol_dot_generated__pb2.ParseResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'gopkg.in.bblfsh.sdk.v2.protocol.Driver', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
