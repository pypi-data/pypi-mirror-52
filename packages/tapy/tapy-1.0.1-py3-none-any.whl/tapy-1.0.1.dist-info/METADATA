Metadata-Version: 2.1
Name: tapy
Version: 1.0.1
Summary: Technical Indicators for the Pandas' Dataframes
Home-page: https://github.com/dmitriiweb/tapy
Author: Dmitrii Kurlov
Author-email: winston.smith.spb@gmail.com
License: MIT
Keywords: technical analyse indicators pandas forex stocks
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Financial and Insurance Industry
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: Implementation :: CPython
Requires-Dist: pandas (>=0.25.1)
Provides-Extra: dev
Requires-Dist: flake8 (<3.7.0,>=3.6.0) ; extra == 'dev'
Requires-Dist: isort (<4.4.0,>=4.3.4) ; extra == 'dev'
Requires-Dist: coverage ; extra == 'dev'
Requires-Dist: pytest (>=3.10) ; extra == 'dev'
Requires-Dist: readme-renderer ; extra == 'dev'
Requires-Dist: sphinx ; extra == 'dev'
Requires-Dist: sphinx-rtd-theme (>=0.4.0) ; extra == 'dev'
Provides-Extra: dev-docs
Requires-Dist: readme-renderer ; extra == 'dev-docs'
Requires-Dist: sphinx ; extra == 'dev-docs'
Requires-Dist: sphinx-rtd-theme (>=0.4.0) ; extra == 'dev-docs'
Provides-Extra: dev-lint
Requires-Dist: flake8 (<3.7.0,>=3.6.0) ; extra == 'dev-lint'
Requires-Dist: isort (<4.4.0,>=4.3.4) ; extra == 'dev-lint'
Provides-Extra: dev-test
Requires-Dist: coverage ; extra == 'dev-test'
Requires-Dist: pytest (>=3.10) ; extra == 'dev-test'

tapy
====

Technical Indicators for the Pandas' Dataframes

Documentation: https://pandastechindicators.readthedocs.io/en/latest/

Installation
------------

::

    pip install -U tapy

Example
-------

::


	>>> import pandas as pd
	>>> from tapy import Indicators
    >>> df = pd.read_csv('EURUSD60.csv')
    >>> indicators = Indicators(df)
    >>> indicators.sma(period=3, column_name='SMA_3')
    >>> df.tail()
      	  Date   Time     Open     High      Low    Close  Volume     SMA_3
    2019.09.20  16:00  1.10022  1.10105  1.10010  1.10070    2888  1.100667
    2019.09.20  17:00  1.10068  1.10193  1.10054  1.10184    6116  1.100920
    2019.09.20  18:00  1.10186  1.10194  1.10095  1.10144    3757  1.101327
    2019.09.20  19:00  1.10146  1.10215  1.10121  1.10188    3069  1.101720
    2019.09.20  20:00  1.10184  1.10215  1.10147  1.10167    1224  1.101663


Available Indicators
--------------------

1. SMA (Simple Moving Average)



