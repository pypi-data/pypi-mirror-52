Metadata-Version: 2.1
Name: mobypy
Version: 1.0.2
Summary: Python module for searching the Moby thesaurus
Home-page: https://github.com/blainemccarthy/mobypy
Author: Blaine McCarthy
Author-email: 42183028+blainemccarthy@users.noreply.github.com
License: MIT
Keywords: moby,thesaurus,synonyms,language,python
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Python Software Foundation License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python
Classifier: Topic :: Text Processing :: Linguistic
Description-Content-Type: text/markdown

mobypy 
==================================================================


Python module for searching the Moby Thesaurus created by Grady Ward

To Install mobypy:
------------------

>>> pip install mobypy

To Use mobypy:
--------------

>>> import mobypy

>>> synonyms = mobypy.synonyms("abbreviated")
>>> print(synonyms)
['Spartan', 'abridged', 'abstracted', 'aposiopestic', 'bobbed', 'brief', 'brusque', 'capsule', 'capsulized', 'clipped', 'close', 'compact', 'compendious', 'compressed', 'concise', 'condensed', 'contracted', 'crisp', 'cropped', 'curt', 'curtailed', 'cut', 'cut short', 'digested', 'docked', 'elided', 'elliptic', 'epigrammatic', 'gnomic', 'laconic', 'mowed', 'mown', 'nipped', 'pithy', 'pointed', 'pollard', 'polled', 'pruned', 'reaped', 'reserved', 'sententious', 'shaved', 'sheared', 'short', 'short and sweet', 'short-cut', 'shortened', 'snub', 'snubbed', 'succinct', 'summary', 'synopsized', 'taciturn', 'terse', 'tight', 'to the point', 'trimmed', 'truncated']

>>> short_synonyms = mobypy.short_synonyms("abbreviated")
>>> print(short_synonyms)
['brief', 'close', 'crisp', 'curt', 'cut', 'mowed', 'mown', 'pithy', 'short', 'snub', 'terse', 'tight']

>>> long_synonyms = mobypy.long_synonyms("abbreviated")
>>> print(long_synonyms)
['Spartan', 'abridged', 'abstracted', 'aposiopestic', 'bobbed', 'brusque', 'capsule', 'capsulized', 'clipped', 'compact', 'compendious', 'compressed', 'concise', 'condensed', 'contracted', 'cropped', 'curtailed', 'cut short', 'digested', 'docked', 'elided', 'elliptic', 'epigrammatic', 'gnomic', 'laconic', 'nipped', 'pointed', 'pollard', 'polled', 'pruned', 'reaped', 'reserved', 'sententious', 'shaved', 'sheared', 'short and sweet', 'short-cut', 'shortened', 'snubbed', 'succinct', 'summary', 'synopsized', 'taciturn', 'to the point', 'trimmed', 'truncated']

>>> rev_search = mobypy.reverse_search("abbreviate")
>>> print(rev_search)
['compact', 'cut short', 'cut', 'short', 'snub']

If no results are found, an empty list is returned

>>> bad_search = mobypy.synonyms("asdasdasdasd")
>>> bad_search = mobypy.long_synonyms("asdasdasdasd")
>>> bad_search = mobypy.short_synonyms("asdasdasdasd")
>>> bad_search = mobypy.reverse_search("asdasdasdasd")
>>> print(bad_search)
[]


