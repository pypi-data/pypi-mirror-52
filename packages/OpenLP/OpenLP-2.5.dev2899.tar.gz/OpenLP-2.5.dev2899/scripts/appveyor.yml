version: OpenLP-win-ci-b{build}

image:
  - Visual Studio 2017

clone_script:
  - curl -L https://bazaar.launchpad.net/BRANCHPATH/tarball -o sourcecode.tar.gz
  - 7z e sourcecode.tar.gz
  - 7z x sourcecode.tar
  - mv BRANCHPATH openlp-branch

environment:
  matrix:
    - PYTHON: C:\\Python37-x64
      CHOCO_VLC: vlc
    - PYTHON: C:\\Python37
      CHOCO_VLC: vlc --forcex86

install:
  # Install dependencies from pypi
  - "%PYTHON%\\python.exe -m pip install sqlalchemy alembic appdirs chardet beautifulsoup4 lxml Mako mysql-connector-python pytest mock pyodbc psycopg2 pypiwin32 websockets asyncio waitress six webob requests QtAwesome PyQt5 PyQtWebEngine pymediainfo PyMuPDF QDarkStyle python-vlc Pyro4 zeroconf"

build: off

test_script:
  - cd openlp-branch
  # Run the tests
  - "%PYTHON%\\python.exe -m pytest -v tests"
  # Go back to the user root folder
  - cd..

after_test:
  # This is where we create a package using PyInstaller
  # Install PyInstaller 
  - "%PYTHON%\\python.exe -m pip install pyinstaller"
  # Disabled portable installers - can't figure out how to make them silent
  # - curl -L -O http://downloads.sourceforge.net/project/portableapps/PortableApps.com%20Installer/PortableApps.comInstaller_3.4.4.paf.exe
  # - PortableApps.comInstaller_3.4.4.paf.exe /S
  # - curl -L -O http://downloads.sourceforge.net/project/portableapps/PortableApps.com%20Launcher/PortableApps.comLauncher_2.2.1.paf.exe
  # - PortableApps.comLauncher_2.2.1.paf.exe /S
  # - curl -L -O http://downloads.sourceforge.net/project/portableapps/NSIS%20Portable/NSISPortable_3.0_English.paf.exe
  # - NSISPortable_3.0_English.paf.exe /S
  # Download and unpack portable-bundle
  - appveyor DownloadFile https://get.openlp.org/win-sdk/portable-setup.7z
  - 7z x portable-setup.7z
  # Install VLC
  - choco install %CHOCO_VLC%
  # Get the packaging code
  - appveyor DownloadFile http://bazaar.launchpad.net/~openlp-core/openlp/packaging/tarball -FileName packaging.tar.gz
  - 7z e packaging.tar.gz
  - 7z x packaging.tar
  - mv ~openlp-core/openlp/packaging packaging
  # If this is trunk we should also build the manual
  - ps: >-
      If (BUILD_DOCS) {
        &"$env:PYTHON\python.exe" -m pip install sphinx
        Invoke-WebRequest -Uri "http://bazaar.launchpad.net/~openlp-core/openlp/documentation/tarball" -OutFile documentation.tar.gz
        7z e documentation.tar.gz
        7z x documentation.tar
        mv ~openlp-core/openlp/documentation documentation
        cd packaging
        &"$env:PYTHON\python.exe" builders/windows-builder.py --skip-update -c windows/config-appveyor.ini -b ../openlp-branch -d ../documentation --portable --tag-override TAG
      } else {
        cd packaging
        &"$env:PYTHON\python.exe" builders/windows-builder.py --skip-update --skip-translations -c windows/config-appveyor.ini -b ../openlp-branch --portable --tag-override TAG
      }

artifacts:
  - path: openlp-branch\dist\*.exe
    name: Portable-installer
  - path: openlp-branch\dist\*.msi
    name: Installer
