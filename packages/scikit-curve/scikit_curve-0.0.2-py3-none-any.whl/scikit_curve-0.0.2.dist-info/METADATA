Metadata-Version: 2.1
Name: scikit-curve
Version: 0.0.2
Summary: A toolkit to manipulate n-dimensional geometric curves in Python
Home-page: https://github.com/espdev/scikit-curve
Author: Eugene Prilepin
Author-email: esp.home@gmail.com
License: BSD 3-Clause
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Classifier: Topic :: Software Development :: Libraries
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: Implementation :: CPython
Requires-Python: >=3.5,<4
Description-Content-Type: text/markdown
Requires-Dist: numpy
Requires-Dist: scipy
Requires-Dist: csaps (>=0.6.0)
Requires-Dist: cached-property
Requires-Dist: decorator

# scikit-curve

[![PyPI version](https://img.shields.io/pypi/v/scikit-curve.svg)](https://pypi.python.org/pypi/scikit-curve)
[![Build status](https://travis-ci.org/espdev/scikit-curve.svg?branch=master)](https://travis-ci.org/espdev/scikit-curve)
[![Docs status](https://readthedocs.org/projects/scikit-curve/badge/)](https://scikit-curve.readthedocs.io/en/latest/)
[![BSD License](https://img.shields.io/pypi/l/scikit-curve.svg)](https://github.com/espdev/scikit-curve/blob/master/LICENSE)

:warning: :construction: **UNDER DEVELOPMENT** :construction:  :warning:

A toolkit to manipulate n-dimensional geometric curves in Python.

```python
import matplotlib.pyplot as plt

from curve.curves import lissajous
from curve.plot import curveplot
from curve import PreservedSpeedInterpolationGrid

curve = lissajous(p_count=51)

grid = PreservedSpeedInterpolationGrid(301)
curve_i = curve.interpolate(grid, method='hermite')

curveplot(curve_i, param='speed', normals=True, marker='.')

plt.show()
```

![lissajous](assets/lissajous_plot.png)


