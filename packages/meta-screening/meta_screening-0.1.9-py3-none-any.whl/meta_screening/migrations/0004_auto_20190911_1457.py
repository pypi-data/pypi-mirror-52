# Generated by Django 2.2.3 on 2019-09-11 11:57

import _socket
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_audit_fields.fields.hostname_modification_field
import django_audit_fields.fields.userfield
import django_audit_fields.fields.uuid_auto_field
import django_audit_fields.models.audit_model_mixin
import django_revision.revision_field
import edc_sites.models
import edc_utils.date
import simple_history.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("sites", "0002_alter_domain_unique"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("meta_screening", "0003_auto_20190905_1300"),
    ]

    operations = [
        migrations.AddField(
            model_name="historicalscreeningpartone",
            name="eligibility_datetime",
            field=models.DateTimeField(
                editable=False,
                help_text="Date and time eligibility was determined",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="historicalscreeningpartone",
            name="screening_consent",
            field=models.CharField(
                choices=[("Yes", "Yes"), ("No", "No")],
                default="Yes",
                max_length=15,
                verbose_name="Has the subject given his/her verbal consent to be screened for the META trial?",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="historicalscreeningpartthree",
            name="eligibility_datetime",
            field=models.DateTimeField(
                editable=False,
                help_text="Date and time eligibility was determined",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="historicalscreeningpartthree",
            name="screening_consent",
            field=models.CharField(
                choices=[("Yes", "Yes"), ("No", "No")],
                default="Yes",
                max_length=15,
                verbose_name="Has the subject given his/her verbal consent to be screened for the META trial?",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="historicalscreeningparttwo",
            name="eligibility_datetime",
            field=models.DateTimeField(
                editable=False,
                help_text="Date and time eligibility was determined",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="historicalscreeningparttwo",
            name="screening_consent",
            field=models.CharField(
                choices=[("Yes", "Yes"), ("No", "No")],
                default="Yes",
                max_length=15,
                verbose_name="Has the subject given his/her verbal consent to be screened for the META trial?",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="eligibility_datetime",
            field=models.DateTimeField(
                editable=False,
                help_text="Date and time eligibility was determined",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="historicalsubjectscreening",
            name="screening_consent",
            field=models.CharField(
                choices=[("Yes", "Yes"), ("No", "No")],
                default="Yes",
                max_length=15,
                verbose_name="Has the subject given his/her verbal consent to be screened for the META trial?",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="eligibility_datetime",
            field=models.DateTimeField(
                editable=False,
                help_text="Date and time eligibility was determined",
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="subjectscreening",
            name="screening_consent",
            field=models.CharField(
                choices=[("Yes", "Yes"), ("No", "No")],
                default="Yes",
                max_length=15,
                verbose_name="Has the subject given his/her verbal consent to be screened for the META trial?",
            ),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name="IcpReferral",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "screening_identifier",
                    models.CharField(
                        max_length=25,
                        unique=True,
                        verbose_name="META Screening Identifier",
                    ),
                ),
                (
                    "report_datetime",
                    models.DateTimeField(
                        default=edc_utils.date.get_utcnow,
                        help_text="Date and time of report.",
                        verbose_name="Report Date and Time",
                    ),
                ),
                ("hospital_identifier", models.CharField(max_length=25, unique=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=10
                    ),
                ),
                ("age_in_years", models.IntegerField()),
                ("initials", models.CharField(max_length=3)),
                (
                    "ethnicity",
                    models.CharField(
                        choices=[("black", "Black"), ("OTHER", "Other")],
                        help_text="Used for eGFR calculation",
                        max_length=15,
                    ),
                ),
                (
                    "hiv_pos",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=15,
                        verbose_name="HIV positive",
                    ),
                ),
                (
                    "art_six_months",
                    models.CharField(
                        choices=[
                            ("Yes", "Yes"),
                            ("No", "No"),
                            ("N/A", "Not applicable"),
                        ],
                        max_length=15,
                        verbose_name="On anti-retroviral therapy for at least 6 months",
                    ),
                ),
                (
                    "fasting_glucose",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="mmol/L",
                        max_digits=8,
                        null=True,
                        verbose_name="Fasting glucose levels",
                    ),
                ),
                (
                    "hba1c",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="in %",
                        max_digits=8,
                        null=True,
                        verbose_name="HbA1c",
                    ),
                ),
                (
                    "ogtt_two_hr",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="mmol/L",
                        max_digits=8,
                        null=True,
                        verbose_name="Blood glucose levels 2-hours after glucose solution given",
                    ),
                ),
                ("meta_eligible", models.BooleanField(verbose_name="META eligibile")),
                (
                    "meta_eligibility_datetime",
                    models.DateTimeField(
                        help_text="Date and time META eligibility was determined",
                        null=True,
                    ),
                ),
                (
                    "referred",
                    models.DateTimeField(
                        help_text="Date and time of referral", null=True
                    ),
                ),
                ("referral_reasons", models.TextField(null=True)),
                (
                    "site",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="sites.Site",
                    ),
                ),
                (
                    "subject_screening",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="meta_screening.SubjectScreening",
                    ),
                ),
            ],
            managers=[("on_site", edc_sites.models.CurrentSiteManager())],
        ),
        migrations.CreateModel(
            name="HistoricalIcpReferral",
            fields=[
                (
                    "revision",
                    django_revision.revision_field.RevisionField(
                        blank=True,
                        editable=False,
                        help_text="System field. Git repository tag:branch:commit.",
                        max_length=75,
                        null=True,
                        verbose_name="Revision",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=django_audit_fields.models.audit_model_mixin.utcnow,
                    ),
                ),
                (
                    "user_created",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user created",
                    ),
                ),
                (
                    "user_modified",
                    django_audit_fields.fields.userfield.UserField(
                        blank=True,
                        help_text="Updated by admin.save_model",
                        max_length=50,
                        verbose_name="user modified",
                    ),
                ),
                (
                    "hostname_created",
                    models.CharField(
                        blank=True,
                        default=_socket.gethostname,
                        help_text="System field. (modified on create only)",
                        max_length=60,
                    ),
                ),
                (
                    "hostname_modified",
                    django_audit_fields.fields.hostname_modification_field.HostnameModificationField(
                        blank=True,
                        help_text="System field. (modified on every save)",
                        max_length=50,
                    ),
                ),
                ("device_created", models.CharField(blank=True, max_length=10)),
                ("device_modified", models.CharField(blank=True, max_length=10)),
                (
                    "id",
                    django_audit_fields.fields.uuid_auto_field.UUIDAutoField(
                        blank=True,
                        db_index=True,
                        editable=False,
                        help_text="System auto field. UUID primary key.",
                    ),
                ),
                (
                    "screening_identifier",
                    models.CharField(
                        db_index=True,
                        max_length=25,
                        verbose_name="META Screening Identifier",
                    ),
                ),
                (
                    "report_datetime",
                    models.DateTimeField(
                        default=edc_utils.date.get_utcnow,
                        help_text="Date and time of report.",
                        verbose_name="Report Date and Time",
                    ),
                ),
                ("hospital_identifier", models.CharField(db_index=True, max_length=25)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=10
                    ),
                ),
                ("age_in_years", models.IntegerField()),
                ("initials", models.CharField(max_length=3)),
                (
                    "ethnicity",
                    models.CharField(
                        choices=[("black", "Black"), ("OTHER", "Other")],
                        help_text="Used for eGFR calculation",
                        max_length=15,
                    ),
                ),
                (
                    "hiv_pos",
                    models.CharField(
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=15,
                        verbose_name="HIV positive",
                    ),
                ),
                (
                    "art_six_months",
                    models.CharField(
                        choices=[
                            ("Yes", "Yes"),
                            ("No", "No"),
                            ("N/A", "Not applicable"),
                        ],
                        max_length=15,
                        verbose_name="On anti-retroviral therapy for at least 6 months",
                    ),
                ),
                (
                    "fasting_glucose",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="mmol/L",
                        max_digits=8,
                        null=True,
                        verbose_name="Fasting glucose levels",
                    ),
                ),
                (
                    "hba1c",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="in %",
                        max_digits=8,
                        null=True,
                        verbose_name="HbA1c",
                    ),
                ),
                (
                    "ogtt_two_hr",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="mmol/L",
                        max_digits=8,
                        null=True,
                        verbose_name="Blood glucose levels 2-hours after glucose solution given",
                    ),
                ),
                ("meta_eligible", models.BooleanField(verbose_name="META eligibile")),
                (
                    "meta_eligibility_datetime",
                    models.DateTimeField(
                        help_text="Date and time META eligibility was determined",
                        null=True,
                    ),
                ),
                (
                    "referred",
                    models.DateTimeField(
                        help_text="Date and time of referral", null=True
                    ),
                ),
                ("referral_reasons", models.TextField(null=True)),
                (
                    "history_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="sites.Site",
                    ),
                ),
                (
                    "subject_screening",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="meta_screening.SubjectScreening",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical icp referral",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
