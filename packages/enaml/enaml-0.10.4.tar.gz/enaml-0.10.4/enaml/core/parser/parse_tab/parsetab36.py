
# parsetab36.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'enamlALIAS AMPER AMPEREQUAL AND AS ASSERT ASYNC AT ATEQUAL AWAIT BREAK BYTES CIRCUMFLEX CIRCUMFLEXEQUAL CLASS COLON COLONEQUAL COMMA CONST CONTINUE DEDENT DEF DEL DOT DOUBLECOLON DOUBLESLASH DOUBLESLASHEQUAL DOUBLESTAR DOUBLESTAREQUAL ELIF ELLIPSIS ELSE ENAMLDEF ENDMARKER EQEQUAL EQUAL EXCEPT FALSE FINALLY FOR FROM FSTRING GLOBAL GREATER GREATEREQUAL IF IMPORT IN INDENT IS LAMBDA LBRACE LEFTSHIFT LEFTSHIFTEQUAL LESS LESSEQUAL LPAR LSQB MINUS MINUSEQUAL NAME NEWLINE NONE NONLOCAL NOT NOTEQUAL NUMBER OR PASS PERCENT PERCENTEQUAL PLUS PLUSEQUAL PRAGMA RAISE RBRACE RETURN RETURNARROW RIGHTARROW RIGHTSHIFT RIGHTSHIFTEQUAL RPAR RSQB SEMI SLASH SLASHEQUAL STAR STAREQUAL STRING STRING_CONTINUE STRING_END STRING_START_SINGLE STRING_START_TRIPLE TEMPLATE TILDE TRUE TRY VBAR VBAREQUAL WHILE WITH WS YIELD atom : NONE  atom : FALSE  comp_for : FOR exprlist IN or_test  atom : TRUE  comp_for : FOR exprlist IN or_test comp_iter  comp_for : ASYNC FOR exprlist IN or_test  decl_funcdef : NAME NAME parameters RETURNARROW test COLON suite  comp_for : ASYNC FOR exprlist IN or_test comp_iter  expr_stmt : testlist_star_expr annassign  small_stmt : expr_stmt\n                       | del_stmt\n                       | pass_stmt\n                       | flow_stmt\n                       | import_stmt\n                       | global_stmt\n                       | assert_stmt\n                       | nonlocal_stmt test_or_star_new : star_expr  augassign : AMPEREQUAL\n                      | CIRCUMFLEXEQUAL\n                      | DOUBLESLASHEQUAL\n                      | DOUBLESTAREQUAL\n                      | LEFTSHIFTEQUAL\n                      | MINUSEQUAL\n                      | PERCENTEQUAL\n                      | PLUSEQUAL\n                      | RIGHTSHIFTEQUAL\n                      | SLASHEQUAL\n                      | STAREQUAL\n                      | VBAREQUAL\n                      | ATEQUAL  nonlocal_stmt : NONLOCAL NAME global_stmt : NONLOCAL NAME globals_list  annassign : COLON test  raise_stmt : RAISE test FROM test  annassign : COLON test EQUAL test  term_op : AT factor  dosm_colon : DOUBLESTAR expr  test_or_star : star_expr  compound_stmt : if_stmt\n                          | while_stmt\n                          | for_stmt\n                          | try_stmt\n                          | with_stmt\n                          | funcdef\n                          | classdef\n                          | decorated\n                          | async_funcdef\n                          | async_for_stmt\n                          | async_with_stmt  atom : atom_string_list  star_expr : STAR expr  atom_string_list : STRING  yield_expr : YIELD FROM testlist  atom_string_list : atom_string_list STRING  funcdef : DEF NAME parameters RETURNARROW test COLON suite  atom_string_list : FSTRING  decorated : decorators funcdef\n                      | decorators classdef\n                      | decorators async_funcdef atom_string_list : atom_string_list FSTRING  async_funcdef : ASYNC funcdef  parameters : LPAR typedargslist RPAR  classdef : CLASS NAME LPAR arglist RPAR COLON suite  async_for_stmt : ASYNC for_stmt  async_with_stmt : ASYNC with_stmt  atom : ELLIPSIS  atom_expr : AWAIT atom  atom : atom_bytes_list  atom_expr : AWAIT atom trailer_list  atom_bytes_list : BYTES  atom_bytes_list : atom_bytes_list BYTES  enamldef_suite_item : enamldef_simple_item\n                                | decl_funcdef\n                                | async_decl_funcdef\n                                | child_def\n                                | template_inst  child_def_suite_item : child_def_simple_item\n                                 | decl_funcdef\n                                 | async_decl_funcdef\n                                 | child_def\n                                 | template_inst  typedargslist : tfpdef COMMA STAR tfpdef typedkwargslist_list varargslist : fpdef COMMA STAR fpdef kwargslist_list async_decl_funcdef : ASYNC decl_funcdef  typedargslist : tfpdef COMMA STAR typedkwargslist_list varargslist : fpdef COMMA STAR kwargslist_list typedargslist : tfpdef COMMA STAR tfpdef typedkwargslist_list COMMA DOUBLESTAR tfpdef  varargslist : fpdef COMMA STAR fpdef kwargslist_list COMMA DOUBLESTAR fpdef  typedargslist : tfpdef COMMA STAR typedkwargslist_list COMMA DOUBLESTAR tfpdef  varargslist : fpdef COMMA STAR kwargslist_list COMMA DOUBLESTAR fpdef  typedargslist : tfpdef typedargslist_list COMMA STAR tfpdef typedkwargslist_list  varargslist : fpdef varargslist_list COMMA STAR fpdef kwargslist_list  typedargslist : tfpdef typedargslist_list COMMA STAR typedkwargslist_list  varargslist : fpdef varargslist_list COMMA STAR kwargslist_list  typedargslist : tfpdef typedargslist_list COMMA STAR tfpdef typedkwargslist_list COMMA DOUBLESTAR tfpdef  varargslist : fpdef varargslist_list COMMA STAR fpdef kwargslist_list COMMA DOUBLESTAR fpdef  typedargslist : tfpdef typedargslist_list COMMA STAR typedkwargslist_list COMMA DOUBLESTAR tfpdef  varargslist : fpdef varargslist_list COMMA STAR kwargslist_list COMMA DOUBLESTAR fpdef  typedargslist : tfpdef EQUAL test COMMA STAR tfpdef typedkwargslist_list varargslist : fpdef EQUAL test COMMA STAR fpdef kwargslist_list typedargslist : tfpdef EQUAL test COMMA STAR typedkwargslist_list varargslist : fpdef EQUAL test COMMA STAR kwargslist_list typedargslist : tfpdef EQUAL test COMMA STAR tfpdef typedkwargslist_list COMMA DOUBLESTAR tfpdef  varargslist : fpdef EQUAL test COMMA STAR fpdef kwargslist_list COMMA DOUBLESTAR fpdef  typedargslist : tfpdef EQUAL test COMMA STAR typedkwargslist_list COMMA DOUBLESTAR tfpdef  varargslist : fpdef EQUAL test COMMA STAR kwargslist_list COMMA DOUBLESTAR fpdef  enaml : enaml_module NEWLINE ENDMARKER\n                  | enaml_module ENDMARKER  typedargslist : tfpdef EQUAL test typedargslist_list COMMA STAR tfpdef typedkwargslist_list varargslist : fpdef EQUAL test varargslist_list COMMA STAR fpdef kwargslist_list enaml : NEWLINE ENDMARKER\n                  | ENDMARKER  enaml_module : enaml_module_body  typedargslist : tfpdef EQUAL test typedargslist_list COMMA STAR typedkwargslist_list varargslist : fpdef EQUAL test varargslist_list COMMA STAR kwargslist_list enaml_module_body : enaml_module_body enaml_module_item  typedargslist : tfpdef EQUAL test typedargslist_list COMMA STAR tfpdef typedkwargslist_list COMMA DOUBLESTAR tfpdef  varargslist : fpdef EQUAL test varargslist_list COMMA STAR fpdef kwargslist_list COMMA DOUBLESTAR fpdef  enaml_module_body : enaml_module_item  enaml_module_item : stmt\n                              | enamldef\n                              | template  typedargslist : tfpdef EQUAL test typedargslist_list COMMA STAR typedkwargslist_list COMMA DOUBLESTAR tfpdef  varargslist : fpdef EQUAL test varargslist_list COMMA STAR kwargslist_list COMMA DOUBLESTAR fpdef  typedargslist : STAR tfpdef typedkwargslist_list  varargslist : STAR fpdef kwargslist_list  typedargslist : STAR typedkwargslist_list  varargslist : STAR kwargslist_list  typedargslist : STAR tfpdef typedkwargslist_list COMMA DOUBLESTAR tfpdef  varargslist : STAR fpdef kwargslist_list COMMA DOUBLESTAR fpdef  typedargslist : STAR typedkwargslist_list COMMA DOUBLESTAR tfpdef  varargslist : STAR kwargslist_list COMMA DOUBLESTAR fpdef  enamldef : enamldef_impl  enamldef : pragmas enamldef_impl  kwargslist_list : COMMA fpdef  typedkwargslist_list : COMMA tfpdef  kwargslist_list : COMMA fpdef EQUAL test  typedkwargslist_list : COMMA tfpdef EQUAL test  enamldef_impl : ENAMLDEF NAME LPAR NAME RPAR COLON enamldef_suite  kwargslist_list : kwargslist_list COMMA fpdef  typedkwargslist_list : typedkwargslist_list COMMA tfpdef  kwargslist_list : kwargslist_list COMMA fpdef EQUAL test  typedkwargslist_list : typedkwargslist_list COMMA tfpdef EQUAL test  enamldef_impl : ENAMLDEF NAME LPAR NAME RPAR COLON enamldef_simple_item  fpdef : NAME  enamldef_impl : ENAMLDEF NAME LPAR NAME RPAR COLON NAME COLON enamldef_suite  tfpdef : NAME  tfpdef : NAME COLON test enamldef_impl : ENAMLDEF NAME LPAR NAME RPAR COLON NAME COLON enamldef_simple_item  enamldef_suite : NEWLINE INDENT enamldef_suite_items DEDENT  enamldef_suite : NEWLINE INDENT STRING NEWLINE enamldef_suite_items DEDENT  enamldef_suite_items : enamldef_suite_item  enamldef_suite_items : enamldef_suite_items enamldef_suite_item  enamldef_simple_item : binding\n                                 | ex_binding\n                                 | alias_expr\n                                 | storage_expr  enamldef_simple_item : PASS NEWLINE  pragmas : pragma pragmas  pragmas : pragma  pragma : PRAGMA NAME NEWLINE\n                   | PRAGMA NAME LPAR RPAR NEWLINE  pragma : PRAGMA NAME LPAR pragma_args RPAR NEWLINE  pragma_args : pragma_arg COMMA pragma_args  pragma_args : pragma_arg  pragma_arg : NAME  pragma_arg : NUMBER  pragma_arg : STRING  alias_expr : ALIAS NAME NEWLINE  alias_expr : ALIAS NAME COLON NAME NEWLINE  alias_expr : ALIAS NAME COLON NAME ex_dotted_names NEWLINE  const_expr : CONST NAME EQUAL test NEWLINE  const_expr : CONST NAME COLON NAME EQUAL test NEWLINE  storage_expr : NAME NAME NEWLINE  storage_expr : NAME NAME COLON NAME NEWLINE  storage_expr : NAME NAME operator_expr  storage_expr : NAME NAME COLON NAME operator_expr  child_def : NAME COLON child_def_suite  child_def : NAME COLON child_def_simple_item  child_def : NAME COLON NAME COLON child_def_suite  child_def : NAME COLON NAME COLON child_def_simple_item   child_def_suite : NEWLINE INDENT child_def_suite_items DEDENT  child_def_suite_items : child_def_suite_item  child_def_suite_items : child_def_suite_items child_def_suite_item  child_def_simple_item : binding\n                                  | ex_binding\n                                  | alias_expr\n                                  | storage_expr  child_def_simple_item : PASS NEWLINE  binding : NAME operator_expr  ex_binding : NAME ex_dotted_names operator_expr  ex_dotted_names : DOT NAME  ex_dotted_names : DOT NAME ex_dotted_names  operator_expr : EQUAL test NEWLINE\n                          | LEFTSHIFT test NEWLINE  operator_expr : COLONEQUAL test NEWLINE\n                          | RIGHTSHIFT test NEWLINE  operator_expr : DOUBLECOLON suite  decl_funcdef : NAME NAME parameters COLON suite  decl_funcdef : NAME RIGHTARROW parameters COLON suite  template : template_impl  template : pragmas template_impl  template_impl : TEMPLATE NAME template_params COLON template_suite  template_impl : TEMPLATE NAME template_params COLON template_simple_item  template_impl : TEMPLATE NAME template_params COLON template_doc_suite  template_suite : NEWLINE INDENT template_suite_items DEDENT  template_doc_suite : NEWLINE INDENT STRING NEWLINE template_suite_items DEDENT  template_suite_items : template_suite_item  template_suite_items : template_suite_items template_suite_item  template_suite_item : template_simple_item\n                                | child_def\n                                | template_inst  template_simple_item : const_expr  template_simple_item : PASS NEWLINE  template_params : LPAR RPAR  template_params : LPAR template_paramlist RPAR  template_paramlist : template_param  template_paramlist : STAR NAME  template_paramlist : template_param template_paramlist_list  template_paramlist : template_param COMMA STAR NAME  template_paramlist : template_param template_paramlist_list COMMA STAR NAME  template_paramlist_list : COMMA template_param  template_paramlist_list : template_paramlist_list COMMA template_param  template_param : NAME  template_param : NAME COLON test  template_param : NAME EQUAL test  template_inst : template_inst_impl  template_inst : pragmas template_inst_impl  template_inst_impl : NAME template_args COLON template_inst_suite_item  template_inst_impl : NAME template_args COLON template_ids COLON template_inst_suite_item  template_inst_impl : NAME template_args COLON template_inst_suite  template_inst_impl : NAME template_args COLON template_ids COLON template_inst_suite  template_args : LPAR RPAR  template_args : LPAR template_arglist RPAR  template_arglist : template_argument  template_arglist : STAR test  template_arglist : template_argument template_arglist_list  template_arglist : template_argument COMMA STAR test  template_arglist : template_argument template_arglist_list COMMA STAR test  template_arglist_list : COMMA template_argument  template_arglist_list : template_arglist_list COMMA template_argument  template_argument : test  template_argument : test comp_for  template_ids : NAME  template_ids : template_id_list NAME  template_ids : STAR NAME  template_ids : template_id_list STAR NAME  template_id_list : NAME COMMA  template_id_list : template_id_list NAME COMMA  template_inst_suite : NEWLINE INDENT template_inst_suite_items DEDENT  template_inst_suite_items : template_inst_suite_items template_inst_suite_item  template_inst_suite_items : template_inst_suite_item  template_inst_suite_item : template_inst_binding  template_inst_suite_item : PASS NEWLINE  template_inst_binding : NAME ex_dotted_names operator_expr  suite : simple_stmt  suite : NEWLINE INDENT stmt_list DEDENT  stmt_list : stmt stmt_list  stmt_list : stmt  stmt : simple_stmt\n                 | compound_stmt  simple_stmt : small_stmt NEWLINE  simple_stmt : small_stmt_list NEWLINE  small_stmt_list : small_stmt SEMI  small_stmt_list : small_stmt small_stmt_list_list  small_stmt_list : small_stmt small_stmt_list_list SEMI  small_stmt_list_list : SEMI small_stmt  small_stmt_list_list : small_stmt_list_list SEMI small_stmt  del_stmt : DEL exprlist  pass_stmt : PASS  flow_stmt : break_stmt\n                      | continue_stmt\n                      | return_stmt\n                      | raise_stmt\n                      | yield_stmt  break_stmt : BREAK  continue_stmt : CONTINUE  return_stmt : RETURN  return_stmt : RETURN testlist  raise_stmt : RAISE  raise_stmt : RAISE test  yield_stmt : yield_expr  yield_expr : YIELD  yield_expr : YIELD testlist  global_stmt : GLOBAL NAME  global_stmt : GLOBAL NAME globals_list  globals_list : COMMA NAME globals_list  globals_list : COMMA NAME  assert_stmt : ASSERT test  assert_stmt : ASSERT test COMMA test  expr_stmt : testlist_star_expr  expr_stmt : testlist_star_expr augassign testlist\n                      | testlist_star_expr augassign yield_expr  expr_stmt : testlist_star_expr equal_list  equal_list : EQUAL testlist_star_expr\n                       | EQUAL yield_expr  equal_list : EQUAL testlist_star_expr equal_list\n                       | EQUAL yield_expr equal_list  testlist : test  testlist : test COMMA  testlist : test testlist_list  testlist : test testlist_list COMMA  testlist_list : COMMA test  testlist_list : testlist_list COMMA test  test_or_star : test  test_or_star_new : test  testlist_star_expr : test_or_star  testlist_star_expr : test_or_star COMMA  testlist_star_expr : test_or_star testlist_star_expr_list  testlist_star_expr : test_or_star testlist_star_expr_list COMMA  testlist_star_expr_list : COMMA test_or_star  testlist_star_expr_list : testlist_star_expr_list COMMA test_or_star  if_stmt : IF test COLON suite  if_stmt : IF test COLON suite elif_stmts  if_stmt : IF test COLON suite else_stmt  if_stmt : IF test COLON suite elif_stmts else_stmt  elif_stmts : elif_stmt elif_stmts  elif_stmts : elif_stmt  elif_stmt : ELIF test COLON suite  else_stmt : ELSE COLON suite  while_stmt : WHILE test COLON suite  while_stmt : WHILE test COLON suite ELSE COLON suite  for_stmt : FOR exprlist IN testlist COLON suite  for_stmt : FOR exprlist IN testlist COLON suite ELSE COLON suite  try_stmt : TRY COLON suite FINALLY COLON suite  try_stmt : TRY COLON suite except_clauses  try_stmt : TRY COLON suite except_clauses ELSE COLON suite  try_stmt : TRY COLON suite except_clauses FINALLY COLON suite  try_stmt : TRY COLON suite except_clauses ELSE COLON suite FINALLY COLON suite  except_clauses : except_clause except_clauses  except_clauses : except_clause  except_clause : EXCEPT COLON suite  except_clause : EXCEPT test COLON suite  except_clause : EXCEPT test AS test COLON suite\n                          | EXCEPT test COMMA test COLON suite  with_stmt : WITH with_item COLON suite  with_stmt : WITH with_item with_item_list COLON suite  with_item : test  with_item : test AS expr  with_item_list : COMMA with_item with_item_list  with_item_list : COMMA with_item  funcdef : DEF NAME parameters COLON suite  parameters : LPAR RPAR  classdef : CLASS NAME COLON suite  classdef : CLASS NAME LPAR RPAR COLON suite  decorators : decorator decorators  decorators : decorator  decorator : AT dotted_name NEWLINE  decorator : AT dotted_name LPAR RPAR NEWLINE  decorator : AT dotted_name LPAR arglist RPAR NEWLINE  import_stmt : import_name  import_stmt : import_from  import_name : IMPORT dotted_as_names  import_from : FROM dotted_name IMPORT STAR  import_from : FROM dotted_name IMPORT import_as_names  import_from : FROM dotted_name IMPORT LPAR import_as_names RPAR  import_from : FROM import_from_dots dotted_name IMPORT STAR  import_from : FROM import_from_dots dotted_name IMPORT import_as_names  import_from : FROM import_from_dots dotted_name IMPORT LPAR import_as_names RPAR  import_from : FROM import_from_dots IMPORT STAR  import_from : FROM import_from_dots IMPORT import_as_names  import_from : FROM import_from_dots IMPORT LPAR import_as_names RPAR  import_from_dots : DOT  import_from_dots : import_from_dots DOT  import_from_dots : ELLIPSIS  import_from_dots : import_from_dots ELLIPSIS  import_as_name : NAME  import_as_name : NAME AS NAME  dotted_as_name : dotted_name  dotted_as_name : dotted_name AS NAME  import_as_names : import_as_name  import_as_names : import_as_name COMMA  import_as_names : import_as_name import_as_names_list  import_as_names : import_as_name import_as_names_list COMMA  import_as_names_list : COMMA import_as_name  import_as_names_list : import_as_names_list COMMA import_as_name  dotted_as_names : dotted_as_name  dotted_as_names : dotted_as_name dotted_as_names_list  dotted_as_names_list : COMMA dotted_as_name  dotted_as_names_list : dotted_as_names_list COMMA dotted_as_name  dotted_name : NAME  dotted_name : NAME dotted_name_list  dotted_name_list : DOT NAME  dotted_name_list : dotted_name_list DOT NAME  test : or_test  test : or_test IF or_test ELSE test  test : lambdef  or_test : and_test  or_test : and_test or_test_list  or_test_list : OR and_test  or_test_list : or_test_list OR and_test  and_test : not_test  and_test : not_test and_test_list  and_test_list : AND not_test  and_test_list : and_test_list AND not_test  not_test : comparison  not_test : NOT not_test  comparison : expr  comparison : expr comparison_list  comparison_list : comp_op expr  comparison_list : comparison_list comp_op expr  comp_op : LESS  comp_op : GREATER  comp_op : EQEQUAL  comp_op : GREATEREQUAL  comp_op : LESSEQUAL  comp_op : NOTEQUAL  comp_op : IN  comp_op : NOT IN  comp_op : IS  comp_op : IS NOT  expr : xor_expr  expr : xor_expr expr_list  expr_list : VBAR xor_expr  expr_list : expr_list VBAR xor_expr  xor_expr : and_expr  xor_expr : and_expr xor_expr_list  xor_expr_list : CIRCUMFLEX and_expr  xor_expr_list : xor_expr_list CIRCUMFLEX and_expr  and_expr : shift_expr  and_expr : shift_expr and_expr_list  and_expr_list : AMPER shift_expr  and_expr_list : and_expr_list AMPER shift_expr  shift_expr : arith_expr  shift_expr : arith_expr shift_list  shift_list : shift_op  shift_list : shift_list shift_op  shift_op : LEFTSHIFT arith_expr  shift_op : RIGHTSHIFT arith_expr  arith_expr : term  arith_expr : term arith_expr_list  arith_expr_list : arith_op  arith_expr_list : arith_expr_list arith_op  arith_op : PLUS term  arith_op : MINUS term  term : factor  term : factor term_list  term_list : term_op  term_list : term_list term_op  term_op : STAR factor  term_op : SLASH factor  term_op : PERCENT factor  term_op : DOUBLESLASH factor  factor : power  factor : PLUS factor  factor : MINUS factor  factor : TILDE factor  power : atom_expr  power : atom_expr DOUBLESTAR factor  atom_expr : atom  atom_expr : atom trailer_list  trailer_list : trailer  trailer_list : trailer_list trailer  atom : LPAR RPAR  atom : LPAR yield_expr RPAR  atom : LPAR testlist_comp RPAR  atom : LSQB RSQB  atom : LSQB testlist_comp RSQB  atom : LBRACE RBRACE  atom : LBRACE dictorsetmaker RBRACE  atom : NAME  atom : NUMBER  testlist_comp : test_or_star comp_for  testlist_comp : test_or_star  testlist_comp : test_or_star COMMA  testlist_comp : test_or_star testlist_comp_list  testlist_comp : test_or_star testlist_comp_list COMMA  testlist_comp_list : COMMA test_or_star  testlist_comp_list : testlist_comp_list COMMA test_or_star  trailer : LPAR RPAR  trailer : LPAR arglist RPAR  trailer : LSQB subscriptlist RSQB  trailer : DOT NAME  subscriptlist : subscript  subscriptlist : subscript COMMA  subscriptlist : subscript subscriptlist_list  subscriptlist : subscript subscriptlist_list COMMA  subscriptlist_list : COMMA subscript  subscriptlist_list : subscriptlist_list COMMA subscript  subscript : ELLIPSIS  subscript : test  subscript : COLON  subscript : DOUBLECOLON  subscript : test COLON  subscript : test DOUBLECOLON  subscript : COLON test  subscript : COLON test COLON  subscript : DOUBLECOLON test  subscript : test COLON test  subscript : test COLON test COLON  subscript : COLON test COLON test  subscript : test COLON test COLON test  subscript : test DOUBLECOLON test  exprlist : expr  exprlist : expr COMMA  exprlist : expr exprlist_list  exprlist : expr exprlist_list COMMA  exprlist_list : COMMA expr  exprlist_list : exprlist_list COMMA expr  dictorsetmaker : dosm_colon comp_for  dictorsetmaker : dosm_colon  dictorsetmaker : dosm_colon COMMA  dictorsetmaker : dosm_colon dosm_colon_list  dictorsetmaker : dosm_colon dosm_colon_list COMMA  dictorsetmaker : test_or_star_new comp_for  dictorsetmaker : test_or_star_new COMMA  dictorsetmaker : test_or_star_new dosm_comma_list  dictorsetmaker : test_or_star_new dosm_comma_list COMMA  dosm_colon : test COLON test  dosm_colon_list : COMMA dosm_colon  dosm_colon_list : dosm_colon_list COMMA dosm_colon  dosm_comma_list : COMMA test  dosm_comma_list : dosm_comma_list COMMA test  arglist : argument  arglist : argument COMMA  arglist : STAR test  arglist : STAR test COMMA DOUBLESTAR test  arglist : DOUBLESTAR test  arglist : arglist_list argument  arglist : arglist_list argument COMMA  arglist : arglist_list STAR test  arglist : arglist_list STAR test COMMA DOUBLESTAR test  arglist : arglist_list DOUBLESTAR test  arglist : STAR test COMMA argument  arglist : STAR test COMMA argument COMMA DOUBLESTAR test  arglist : STAR test COMMA arglist_list argument  arglist : STAR test COMMA arglist_list argument COMMA DOUBLESTAR test  arglist : arglist_list STAR test COMMA argument arglist : arglist_list STAR test COMMA arglist_list argument arglist : arglist_list STAR test COMMA argument COMMA DOUBLESTAR test  arglist : arglist_list STAR test COMMA arglist_list argument COMMA DOUBLESTAR test  arglist_list : argument COMMA  arglist_list : arglist_list argument COMMA  argument : test  argument : test comp_for  argument : test EQUAL test  comp_iter : comp_for  comp_iter : comp_if  comp_if : IF old_test  comp_if : IF old_test comp_iter  old_test : or_test  old_test : old_lambdef  old_lambdef : LAMBDA COLON old_test  old_lambdef : LAMBDA varargslist COLON old_test  lambdef : LAMBDA COLON test  lambdef : LAMBDA varargslist COLON test  typedargslist : tfpdef COMMA STAR tfpdef  varargslist : fpdef COMMA STAR fpdef  typedargslist : tfpdef COMMA STAR tfpdef COMMA DOUBLESTAR tfpdef  varargslist : fpdef COMMA STAR fpdef COMMA DOUBLESTAR fpdef  typedargslist : tfpdef COMMA DOUBLESTAR tfpdef  varargslist : fpdef COMMA DOUBLESTAR fpdef  typedargslist : tfpdef  varargslist : fpdef  typedargslist : tfpdef COMMA  varargslist : fpdef COMMA  typedargslist : tfpdef typedargslist_list COMMA STAR tfpdef  varargslist : fpdef varargslist_list COMMA STAR fpdef  typedargslist : tfpdef typedargslist_list COMMA STAR tfpdef COMMA DOUBLESTAR tfpdef  varargslist : fpdef varargslist_list COMMA STAR fpdef COMMA DOUBLESTAR fpdef  typedargslist : tfpdef typedargslist_list COMMA DOUBLESTAR tfpdef  varargslist : fpdef varargslist_list COMMA DOUBLESTAR fpdef  typedargslist : tfpdef typedargslist_list  varargslist : fpdef varargslist_list  typedargslist : tfpdef typedargslist_list COMMA  varargslist : fpdef varargslist_list COMMA  typedargslist : tfpdef EQUAL test COMMA STAR tfpdef  varargslist : fpdef EQUAL test COMMA STAR fpdef  typedargslist : tfpdef EQUAL test COMMA STAR tfpdef COMMA DOUBLESTAR tfpdef  varargslist : fpdef EQUAL test COMMA STAR fpdef COMMA DOUBLESTAR fpdef  typedargslist : tfpdef EQUAL test COMMA DOUBLESTAR tfpdef  varargslist : fpdef EQUAL test COMMA DOUBLESTAR fpdef  typedargslist : tfpdef EQUAL test  varargslist : fpdef EQUAL test  typedargslist : tfpdef EQUAL test COMMA  varargslist : fpdef EQUAL test COMMA  typedargslist : tfpdef EQUAL test typedargslist_list COMMA STAR tfpdef  varargslist : fpdef EQUAL test varargslist_list COMMA STAR fpdef  typedargslist : tfpdef EQUAL test typedargslist_list COMMA STAR tfpdef COMMA DOUBLESTAR tfpdef  varargslist : fpdef EQUAL test varargslist_list COMMA STAR fpdef COMMA DOUBLESTAR fpdef  typedargslist : tfpdef EQUAL test typedargslist_list COMMA DOUBLESTAR tfpdef  varargslist : fpdef EQUAL test varargslist_list COMMA DOUBLESTAR fpdef  typedargslist : tfpdef EQUAL test typedargslist_list  varargslist : fpdef EQUAL test varargslist_list  typedargslist : tfpdef EQUAL test typedargslist_list COMMA  varargslist : fpdef EQUAL test varargslist_list COMMA  typedargslist : STAR tfpdef  varargslist : STAR fpdef  typedargslist : STAR tfpdef COMMA DOUBLESTAR tfpdef  varargslist : STAR fpdef COMMA DOUBLESTAR fpdef  typedargslist : DOUBLESTAR tfpdef  varargslist : DOUBLESTAR fpdef  typedargslist_list : COMMA tfpdef  varargslist_list : COMMA fpdef  typedargslist_list : COMMA tfpdef EQUAL test  varargslist_list : COMMA fpdef EQUAL test  typedargslist_list : typedargslist_list COMMA tfpdef  varargslist_list : varargslist_list COMMA fpdef  typedargslist_list : typedargslist_list COMMA tfpdef EQUAL test  varargslist_list : varargslist_list COMMA fpdef EQUAL test '
    
_lr_action_items = {'NEWLINE':([0,2,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,33,34,35,36,37,38,39,40,42,52,53,55,56,57,58,59,60,61,62,67,68,69,70,71,76,77,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,114,115,116,117,118,119,120,122,131,132,137,138,139,141,142,143,144,145,147,163,164,165,166,168,169,170,171,172,175,178,179,180,181,182,184,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,252,253,255,256,264,265,267,268,270,272,279,282,283,284,285,286,287,289,291,292,293,294,301,303,308,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,372,378,384,385,387,388,390,391,394,395,399,408,410,416,417,418,419,420,421,422,423,424,425,427,428,430,431,434,436,437,438,440,442,443,453,454,455,456,457,466,483,484,485,487,488,496,497,498,502,503,504,507,508,512,515,526,528,530,531,532,534,535,537,538,541,542,544,545,572,576,583,584,585,587,588,589,590,591,592,593,596,598,609,610,613,614,615,616,618,644,645,647,648,649,650,651,659,672,673,674,676,677,678,681,696,697,698,720,721,722,728,731,732,738,741,746,749,750,752,753,787,789,791,792,793,794,795,796,797,798,799,801,810,824,825,831,833,834,835,836,865,866,867,868,869,870,871,874,878,881,882,890,899,900,923,924,929,930,943,952,968,970,971,972,1004,],[3,111,-114,-120,-121,-122,-123,-261,-262,-134,-202,117,120,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-462,-10,-11,-12,-13,-14,-15,-16,-17,-306,-292,-283,-271,-272,-273,-274,-275,-276,-352,-353,-308,-277,-278,-279,-281,-39,-284,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-117,-135,-203,-263,-265,-266,-264,-455,-495,271,-58,-59,-60,-62,-65,-66,280,-9,-295,-270,-32,-286,-290,-309,-310,-280,-300,-282,-382,-354,-378,-370,-52,306,-285,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-268,-267,-456,-457,271,271,-496,-497,-257,271,271,-293,-294,-34,-296,-297,-33,-287,-312,-311,-301,-302,-383,-379,-54,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-269,486,-314,-322,-499,-498,-327,-332,-337,271,271,-345,527,-298,-299,-289,-291,-313,-304,-303,-35,-355,-356,-372,-368,-361,-362,-384,-380,-371,543,-402,-392,-547,-396,-416,-420,-424,-472,-473,-204,-205,-206,-214,576,-315,-316,-319,271,-500,271,-331,271,-338,-343,271,611,-36,-288,-305,-373,-374,-358,-359,-385,-381,619,-387,646,-215,-317,-318,271,271,-324,-326,271,271,-333,271,-258,271,271,-346,-357,-376,-375,-369,-363,-140,-145,-155,-156,-157,-158,731,740,-321,271,-323,-328,-329,-334,-56,-64,-377,-360,787,646,-191,271,-159,810,-207,819,831,-320,271,271,271,-175,-177,-147,-150,-192,866,867,868,869,-199,-193,873,-170,884,891,-173,-325,271,-335,-336,923,-195,-196,-197,-198,-194,-151,787,929,-208,819,944,952,-330,-176,-178,-171,972,891,-174,-152,271,271,-172,271,]),'ENDMARKER':([0,2,3,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,111,114,115,116,117,120,137,138,139,141,142,143,270,384,385,390,391,394,408,483,484,485,487,496,497,498,507,512,515,576,583,584,588,589,592,596,610,644,645,647,648,649,650,672,674,676,677,678,681,696,722,731,738,749,787,789,791,792,793,798,810,831,833,835,836,866,867,868,869,871,881,900,923,924,929,952,968,972,],[4,112,113,-114,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,251,-117,-135,-203,-263,-264,-58,-59,-60,-62,-65,-66,-257,-314,-322,-327,-332,-337,-345,-204,-205,-206,-214,-315,-316,-319,-331,-338,-343,-215,-317,-318,-324,-326,-333,-258,-346,-140,-145,-155,-156,-157,-158,-321,-323,-328,-329,-334,-56,-64,-191,-159,-207,-320,-175,-177,-147,-150,-192,-199,-170,-173,-325,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,-172,]),'ENAMLDEF':([0,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,31,114,115,116,117,120,126,137,138,139,141,142,143,270,280,384,385,390,391,394,408,483,484,485,487,496,497,498,507,512,515,527,576,583,584,588,589,592,596,610,611,644,645,647,648,649,650,672,674,676,677,678,681,696,722,731,738,749,787,789,791,792,793,798,810,831,833,835,836,866,867,868,869,871,881,900,923,924,929,952,968,972,],[28,28,-120,-121,-122,-123,-261,-262,-134,28,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-161,-117,-135,-203,-263,-264,-160,-58,-59,-60,-62,-65,-66,-257,-162,-314,-322,-327,-332,-337,-345,-204,-205,-206,-214,-315,-316,-319,-331,-338,-343,-163,-215,-317,-318,-324,-326,-333,-258,-346,-164,-140,-145,-155,-156,-157,-158,-321,-323,-328,-329,-334,-56,-64,-191,-159,-207,-320,-175,-177,-147,-150,-192,-199,-170,-173,-325,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,-172,]),'TEMPLATE':([0,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,23,24,25,26,27,31,114,115,116,117,120,126,137,138,139,141,142,143,270,280,384,385,390,391,394,408,483,484,485,487,496,497,498,507,512,515,527,576,583,584,588,589,592,596,610,611,644,645,647,648,649,650,672,674,676,677,678,681,696,722,731,738,749,787,789,791,792,793,798,810,831,833,835,836,866,867,868,869,871,881,900,923,924,929,952,968,972,],[32,32,-120,-121,-122,-123,-261,-262,-134,32,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-161,-117,-135,-203,-263,-264,-160,-58,-59,-60,-62,-65,-66,-257,-162,-314,-322,-327,-332,-337,-345,-204,-205,-206,-214,-315,-316,-319,-331,-338,-343,-163,-215,-317,-318,-324,-326,-333,-258,-346,-164,-140,-145,-155,-156,-157,-158,-321,-323,-328,-329,-334,-56,-64,-191,-159,-207,-320,-175,-177,-147,-150,-192,-199,-170,-173,-325,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,-172,]),'IF':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,29,78,79,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,114,115,116,117,120,122,137,138,139,141,142,143,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,270,310,315,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,384,385,390,391,393,394,408,440,442,453,454,455,456,457,466,483,484,485,487,496,497,498,507,511,512,515,573,576,583,584,588,589,592,596,610,644,645,647,648,649,650,657,672,674,676,677,678,681,696,722,731,733,734,735,738,749,787,789,791,792,793,798,810,831,833,835,836,866,867,868,869,871,879,881,900,923,924,929,931,952,968,972,],[41,41,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-462,-399,196,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-117,-135,-203,-263,-264,-455,-58,-59,-60,-62,-65,-66,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-257,-401,-391,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-314,-322,-327,-332,41,-337,-345,-402,-392,-396,-416,-420,-424,-472,-473,-204,-205,-206,-214,-315,-316,-319,-331,41,-338,-343,656,-215,-317,-318,-324,-326,-333,-258,-346,-140,-145,-155,-156,-157,-158,656,-321,-323,-328,-329,-334,-56,-64,-191,-159,656,-542,-543,-207,-320,-175,-177,-147,-150,-192,-199,-170,-173,-325,-335,-336,-195,-196,-197,-198,-151,-544,-208,-330,-176,-178,-171,-545,-174,-152,-172,]),'WHILE':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,114,115,116,117,120,137,138,139,141,142,143,270,384,385,390,391,393,394,408,483,484,485,487,496,497,498,507,511,512,515,576,583,584,588,589,592,596,610,644,645,647,648,649,650,672,674,676,677,678,681,696,722,731,738,749,787,789,791,792,793,798,810,831,833,835,836,866,867,868,869,871,881,900,923,924,929,952,968,972,],[43,43,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-117,-135,-203,-263,-264,-58,-59,-60,-62,-65,-66,-257,-314,-322,-327,-332,43,-337,-345,-204,-205,-206,-214,-315,-316,-319,-331,43,-338,-343,-215,-317,-318,-324,-326,-333,-258,-346,-140,-145,-155,-156,-157,-158,-321,-323,-328,-329,-334,-56,-64,-191,-159,-207,-320,-175,-177,-147,-150,-192,-199,-170,-173,-325,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,-172,]),'FOR':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,29,42,50,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,114,115,116,117,120,122,125,137,138,139,141,142,143,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,246,247,249,250,255,256,261,270,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,352,361,362,363,370,384,385,390,391,393,394,408,440,442,443,453,454,455,456,457,466,478,483,484,485,487,496,497,498,507,511,512,515,545,573,576,583,584,588,589,592,596,610,644,645,647,648,649,650,657,672,674,676,677,678,681,696,722,731,733,734,735,738,749,787,789,791,792,793,798,810,830,831,833,835,836,866,867,868,869,871,879,881,900,923,924,929,931,952,968,972,],[44,44,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-462,-306,44,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-117,-135,-203,-263,-264,-455,260,-58,-59,-60,-62,-65,-66,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,260,260,-307,-18,-456,-457,377,-257,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,260,-474,-459,-461,-38,-314,-322,-327,-332,44,-337,-345,-402,-392,-547,-396,-416,-420,-424,-472,-473,-510,-204,-205,-206,-214,-315,-316,-319,-331,44,-338,-343,-387,260,-215,-317,-318,-324,-326,-333,-258,-346,-140,-145,-155,-156,-157,-158,260,-321,-323,-328,-329,-334,-56,-64,-191,-159,260,-542,-543,-207,-320,-175,-177,-147,-150,-192,-199,-170,260,-173,-325,-335,-336,-195,-196,-197,-198,-151,-544,-208,-330,-176,-178,-171,-545,-174,-152,-172,]),'TRY':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,114,115,116,117,120,137,138,139,141,142,143,270,384,385,390,391,393,394,408,483,484,485,487,496,497,498,507,511,512,515,576,583,584,588,589,592,596,610,644,645,647,648,649,650,672,674,676,677,678,681,696,722,731,738,749,787,789,791,792,793,798,810,831,833,835,836,866,867,868,869,871,881,900,923,924,929,952,968,972,],[45,45,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-117,-135,-203,-263,-264,-58,-59,-60,-62,-65,-66,-257,-314,-322,-327,-332,45,-337,-345,-204,-205,-206,-214,-315,-316,-319,-331,45,-338,-343,-215,-317,-318,-324,-326,-333,-258,-346,-140,-145,-155,-156,-157,-158,-321,-323,-328,-329,-334,-56,-64,-191,-159,-207,-320,-175,-177,-147,-150,-192,-199,-170,-173,-325,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,-172,]),'WITH':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,50,114,115,116,117,120,137,138,139,141,142,143,270,384,385,390,391,393,394,408,483,484,485,487,496,497,498,507,511,512,515,576,583,584,588,589,592,596,610,644,645,647,648,649,650,672,674,676,677,678,681,696,722,731,738,749,787,789,791,792,793,798,810,831,833,835,836,866,867,868,869,871,881,900,923,924,929,952,968,972,],[46,46,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,46,-117,-135,-203,-263,-264,-58,-59,-60,-62,-65,-66,-257,-314,-322,-327,-332,46,-337,-345,-204,-205,-206,-214,-315,-316,-319,-331,46,-338,-343,-215,-317,-318,-324,-326,-333,-258,-346,-140,-145,-155,-156,-157,-158,-321,-323,-328,-329,-334,-56,-64,-191,-159,-207,-320,-175,-177,-147,-150,-192,-199,-170,-173,-325,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,-172,]),'DEF':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,49,50,66,114,115,116,117,120,137,138,139,140,141,142,143,167,270,306,384,385,390,391,393,394,408,483,484,485,487,496,497,498,507,511,512,515,543,576,583,584,588,589,592,596,610,619,644,645,647,648,649,650,672,674,676,677,678,681,696,722,731,738,749,787,789,791,792,793,798,810,831,833,835,836,866,867,868,869,871,881,900,923,924,929,952,968,972,],[47,47,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,47,47,-348,-117,-135,-203,-263,-264,-58,-59,-60,47,-62,-65,-66,-347,-257,-349,-314,-322,-327,-332,47,-337,-345,-204,-205,-206,-214,-315,-316,-319,-331,47,-338,-343,-350,-215,-317,-318,-324,-326,-333,-258,-346,-351,-140,-145,-155,-156,-157,-158,-321,-323,-328,-329,-334,-56,-64,-191,-159,-207,-320,-175,-177,-147,-150,-192,-199,-170,-173,-325,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,-172,]),'CLASS':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,49,66,114,115,116,117,120,137,138,139,141,142,143,167,270,306,384,385,390,391,393,394,408,483,484,485,487,496,497,498,507,511,512,515,543,576,583,584,588,589,592,596,610,619,644,645,647,648,649,650,672,674,676,677,678,681,696,722,731,738,749,787,789,791,792,793,798,810,831,833,835,836,866,867,868,869,871,881,900,923,924,929,952,968,972,],[48,48,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,48,-348,-117,-135,-203,-263,-264,-58,-59,-60,-62,-65,-66,-347,-257,-349,-314,-322,-327,-332,48,-337,-345,-204,-205,-206,-214,-315,-316,-319,-331,48,-338,-343,-350,-215,-317,-318,-324,-326,-333,-258,-346,-351,-140,-145,-155,-156,-157,-158,-321,-323,-328,-329,-334,-56,-64,-191,-159,-207,-320,-175,-177,-147,-150,-192,-199,-170,-173,-325,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,-172,]),'ASYNC':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,29,42,49,66,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,114,115,116,117,120,122,125,137,138,139,141,142,143,167,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,246,247,249,250,255,256,270,306,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,352,361,362,363,370,384,385,390,391,393,394,408,440,442,443,453,454,455,456,457,466,478,483,484,485,487,496,497,498,507,511,512,515,543,545,573,576,583,584,588,589,592,596,610,619,644,645,647,648,649,650,657,665,672,674,676,677,678,681,696,722,730,731,733,734,735,738,744,749,787,789,791,792,793,798,800,802,803,804,805,806,807,810,817,818,820,821,822,823,830,831,833,835,836,866,867,868,869,871,872,873,876,879,881,883,884,886,888,889,900,923,924,925,929,931,932,933,934,935,936,937,938,939,940,944,952,968,972,973,974,975,977,978,995,996,997,1006,],[50,50,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-462,-306,140,-348,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-117,-135,-203,-263,-264,-455,261,-58,-59,-60,-62,-65,-66,-347,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,261,261,-307,-18,-456,-457,-257,-349,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,261,-474,-459,-461,-38,-314,-322,-327,-332,50,-337,-345,-402,-392,-547,-396,-416,-420,-424,-472,-473,-510,-204,-205,-206,-214,-315,-316,-319,-331,50,-338,-343,-350,-387,261,-215,-317,-318,-324,-326,-333,-258,-346,-351,-140,-145,-155,-156,-157,-158,261,-228,-321,-323,-328,-329,-334,-56,-64,-191,809,-159,261,-542,-543,-207,-229,-320,-175,-177,-147,-150,-192,-199,809,-153,-73,-74,-75,-76,-77,-170,-179,-180,-186,-187,-188,-189,261,-173,-325,-335,-336,-195,-196,-197,-198,-151,-154,809,-85,-544,-208,809,-190,-230,-232,-254,-330,-176,-178,809,-171,-545,-181,-182,809,-184,-78,-79,-80,-81,-82,-255,-174,-152,-172,-183,-185,-256,-231,-233,-200,-201,-251,-7,]),'PRAGMA':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,31,114,115,116,117,120,137,138,139,141,142,143,270,280,384,385,390,391,394,408,483,484,485,487,496,497,498,507,512,515,527,575,576,583,584,588,589,592,596,610,611,644,645,647,648,649,650,658,660,661,662,663,665,672,674,676,677,678,681,696,722,730,731,738,739,740,744,749,787,789,791,792,793,798,800,802,803,804,805,806,807,810,815,817,818,820,821,822,823,831,833,835,836,866,867,868,869,871,872,873,876,881,883,884,886,888,889,900,923,924,925,929,932,933,934,935,936,937,938,939,940,944,952,968,972,973,974,975,977,978,995,996,997,1006,],[51,51,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,51,-117,-135,-203,-263,-264,-58,-59,-60,-62,-65,-66,-257,-162,-314,-322,-327,-332,-337,-345,-204,-205,-206,-214,-315,-316,-319,-331,-338,-343,-163,51,-215,-317,-318,-324,-326,-333,-258,-346,-164,-140,-145,-155,-156,-157,-158,51,-209,-211,-212,-213,-228,-321,-323,-328,-329,-334,-56,-64,-191,51,-159,-207,-210,51,-229,-320,-175,-177,-147,-150,-192,-199,51,-153,-73,-74,-75,-76,-77,-170,51,-179,-180,-186,-187,-188,-189,-173,-325,-335,-336,-195,-196,-197,-198,-151,-154,51,-85,-208,51,-190,-230,-232,-254,-330,-176,-178,51,-171,-181,-182,51,-184,-78,-79,-80,-81,-82,-255,-174,-152,-172,-183,-185,-256,-231,-233,-200,-201,-251,-7,]),'DEL':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,114,115,116,117,118,120,132,137,138,139,141,142,143,253,264,265,270,272,279,384,385,390,391,393,394,395,399,408,483,484,485,487,496,497,498,502,504,507,508,511,512,515,526,576,583,584,585,587,588,589,590,591,592,593,596,598,609,610,644,645,647,648,649,650,672,673,674,676,677,678,681,696,722,728,731,738,749,750,752,753,787,789,791,792,793,798,810,831,833,834,835,836,866,867,868,869,871,881,900,923,924,929,952,968,970,971,972,1004,],[54,54,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-117,-135,-203,-263,54,-264,54,-58,-59,-60,-62,-65,-66,54,54,54,-257,54,54,-314,-322,-327,-332,54,-337,54,54,-345,-204,-205,-206,-214,-315,-316,-319,54,54,-331,54,54,-338,-343,54,-215,-317,-318,54,54,-324,-326,54,54,-333,54,-258,54,54,-346,-140,-145,-155,-156,-157,-158,-321,54,-323,-328,-329,-334,-56,-64,-191,54,-159,-207,-320,54,54,54,-175,-177,-147,-150,-192,-199,-170,-173,-325,54,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,54,54,-172,54,]),'PASS':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,114,115,116,117,118,120,132,137,138,139,141,142,143,253,264,265,270,272,279,378,384,385,390,391,393,394,395,399,408,483,484,485,487,496,497,498,502,504,507,508,511,512,515,526,572,575,576,583,584,585,587,588,589,590,591,592,593,596,598,609,610,644,645,647,648,649,650,658,660,661,662,663,665,672,673,674,676,677,678,681,696,721,722,728,730,731,738,739,740,741,744,749,750,752,753,787,789,791,792,793,798,800,802,803,804,805,806,807,810,815,817,818,820,821,822,823,825,831,833,834,835,836,866,867,868,869,871,872,873,876,881,882,883,884,886,888,889,900,923,924,925,929,932,933,934,935,936,937,938,939,940,943,944,945,952,968,970,971,972,973,974,975,977,978,979,980,995,996,997,998,1004,1006,],[55,55,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-117,-135,-203,-263,55,-264,55,-58,-59,-60,-62,-65,-66,55,55,55,-257,55,55,488,-314,-322,-327,-332,55,-337,55,55,-345,-204,-205,-206,-214,-315,-316,-319,55,55,-331,55,55,-338,-343,55,651,488,-215,-317,-318,55,55,-324,-326,55,55,-333,55,-258,55,55,-346,-140,-145,-155,-156,-157,-158,488,-209,-211,-212,-213,-228,-321,55,-323,-328,-329,-334,-56,-64,651,-191,55,651,-159,-207,-210,488,824,-229,-320,55,55,55,-175,-177,-147,-150,-192,-199,651,-153,-73,-74,-75,-76,-77,-170,488,-179,-180,-186,-187,-188,-189,890,-173,-325,55,-335,-336,-195,-196,-197,-198,-151,-154,651,-85,-208,824,824,-190,-230,-232,-254,-330,-176,-178,651,-171,-181,-182,824,-184,-78,-79,-80,-81,-82,890,-255,890,-174,-152,55,55,-172,-183,-185,-256,-231,-233,890,-253,-200,-201,-251,-252,55,-7,]),'NONLOCAL':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,114,115,116,117,118,120,132,137,138,139,141,142,143,253,264,265,270,272,279,384,385,390,391,393,394,395,399,408,483,484,485,487,496,497,498,502,504,507,508,511,512,515,526,576,583,584,585,587,588,589,590,591,592,593,596,598,609,610,644,645,647,648,649,650,672,673,674,676,677,678,681,696,722,728,731,738,749,750,752,753,787,789,791,792,793,798,810,831,833,834,835,836,866,867,868,869,871,881,900,923,924,929,952,968,970,971,972,1004,],[63,63,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-117,-135,-203,-263,63,-264,63,-58,-59,-60,-62,-65,-66,63,63,63,-257,63,63,-314,-322,-327,-332,63,-337,63,63,-345,-204,-205,-206,-214,-315,-316,-319,63,63,-331,63,63,-338,-343,63,-215,-317,-318,63,63,-324,-326,63,63,-333,63,-258,63,63,-346,-140,-145,-155,-156,-157,-158,-321,63,-323,-328,-329,-334,-56,-64,-191,63,-159,-207,-320,63,63,63,-175,-177,-147,-150,-192,-199,-170,-173,-325,63,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,63,63,-172,63,]),'GLOBAL':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,114,115,116,117,118,120,132,137,138,139,141,142,143,253,264,265,270,272,279,384,385,390,391,393,394,395,399,408,483,484,485,487,496,497,498,502,504,507,508,511,512,515,526,576,583,584,585,587,588,589,590,591,592,593,596,598,609,610,644,645,647,648,649,650,672,673,674,676,677,678,681,696,722,728,731,738,749,750,752,753,787,789,791,792,793,798,810,831,833,834,835,836,866,867,868,869,871,881,900,923,924,929,952,968,970,971,972,1004,],[64,64,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-117,-135,-203,-263,64,-264,64,-58,-59,-60,-62,-65,-66,64,64,64,-257,64,64,-314,-322,-327,-332,64,-337,64,64,-345,-204,-205,-206,-214,-315,-316,-319,64,64,-331,64,64,-338,-343,64,-215,-317,-318,64,64,-324,-326,64,64,-333,64,-258,64,64,-346,-140,-145,-155,-156,-157,-158,-321,64,-323,-328,-329,-334,-56,-64,-191,64,-159,-207,-320,64,64,64,-175,-177,-147,-150,-192,-199,-170,-173,-325,64,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,64,64,-172,64,]),'ASSERT':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,114,115,116,117,118,120,132,137,138,139,141,142,143,253,264,265,270,272,279,384,385,390,391,393,394,395,399,408,483,484,485,487,496,497,498,502,504,507,508,511,512,515,526,576,583,584,585,587,588,589,590,591,592,593,596,598,609,610,644,645,647,648,649,650,672,673,674,676,677,678,681,696,722,728,731,738,749,750,752,753,787,789,791,792,793,798,810,831,833,834,835,836,866,867,868,869,871,881,900,923,924,929,952,968,970,971,972,1004,],[65,65,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-117,-135,-203,-263,65,-264,65,-58,-59,-60,-62,-65,-66,65,65,65,-257,65,65,-314,-322,-327,-332,65,-337,65,65,-345,-204,-205,-206,-214,-315,-316,-319,65,65,-331,65,65,-338,-343,65,-215,-317,-318,65,65,-324,-326,65,65,-333,65,-258,65,65,-346,-140,-145,-155,-156,-157,-158,-321,65,-323,-328,-329,-334,-56,-64,-191,65,-159,-207,-320,65,65,65,-175,-177,-147,-150,-192,-199,-170,-173,-325,65,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,65,65,-172,65,]),'BREAK':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,114,115,116,117,118,120,132,137,138,139,141,142,143,253,264,265,270,272,279,384,385,390,391,393,394,395,399,408,483,484,485,487,496,497,498,502,504,507,508,511,512,515,526,576,583,584,585,587,588,589,590,591,592,593,596,598,609,610,644,645,647,648,649,650,672,673,674,676,677,678,681,696,722,728,731,738,749,750,752,753,787,789,791,792,793,798,810,831,833,834,835,836,866,867,868,869,871,881,900,923,924,929,952,968,970,971,972,1004,],[68,68,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-117,-135,-203,-263,68,-264,68,-58,-59,-60,-62,-65,-66,68,68,68,-257,68,68,-314,-322,-327,-332,68,-337,68,68,-345,-204,-205,-206,-214,-315,-316,-319,68,68,-331,68,68,-338,-343,68,-215,-317,-318,68,68,-324,-326,68,68,-333,68,-258,68,68,-346,-140,-145,-155,-156,-157,-158,-321,68,-323,-328,-329,-334,-56,-64,-191,68,-159,-207,-320,68,68,68,-175,-177,-147,-150,-192,-199,-170,-173,-325,68,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,68,68,-172,68,]),'CONTINUE':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,114,115,116,117,118,120,132,137,138,139,141,142,143,253,264,265,270,272,279,384,385,390,391,393,394,395,399,408,483,484,485,487,496,497,498,502,504,507,508,511,512,515,526,576,583,584,585,587,588,589,590,591,592,593,596,598,609,610,644,645,647,648,649,650,672,673,674,676,677,678,681,696,722,728,731,738,749,750,752,753,787,789,791,792,793,798,810,831,833,834,835,836,866,867,868,869,871,881,900,923,924,929,952,968,970,971,972,1004,],[69,69,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-117,-135,-203,-263,69,-264,69,-58,-59,-60,-62,-65,-66,69,69,69,-257,69,69,-314,-322,-327,-332,69,-337,69,69,-345,-204,-205,-206,-214,-315,-316,-319,69,69,-331,69,69,-338,-343,69,-215,-317,-318,69,69,-324,-326,69,69,-333,69,-258,69,69,-346,-140,-145,-155,-156,-157,-158,-321,69,-323,-328,-329,-334,-56,-64,-191,69,-159,-207,-320,69,69,69,-175,-177,-147,-150,-192,-199,-170,-173,-325,69,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,69,69,-172,69,]),'RETURN':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,114,115,116,117,118,120,132,137,138,139,141,142,143,253,264,265,270,272,279,384,385,390,391,393,394,395,399,408,483,484,485,487,496,497,498,502,504,507,508,511,512,515,526,576,583,584,585,587,588,589,590,591,592,593,596,598,609,610,644,645,647,648,649,650,672,673,674,676,677,678,681,696,722,728,731,738,749,750,752,753,787,789,791,792,793,798,810,831,833,834,835,836,866,867,868,869,871,881,900,923,924,929,952,968,970,971,972,1004,],[70,70,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-117,-135,-203,-263,70,-264,70,-58,-59,-60,-62,-65,-66,70,70,70,-257,70,70,-314,-322,-327,-332,70,-337,70,70,-345,-204,-205,-206,-214,-315,-316,-319,70,70,-331,70,70,-338,-343,70,-215,-317,-318,70,70,-324,-326,70,70,-333,70,-258,70,70,-346,-140,-145,-155,-156,-157,-158,-321,70,-323,-328,-329,-334,-56,-64,-191,70,-159,-207,-320,70,70,70,-175,-177,-147,-150,-192,-199,-170,-173,-325,70,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,70,70,-172,70,]),'RAISE':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,114,115,116,117,118,120,132,137,138,139,141,142,143,253,264,265,270,272,279,384,385,390,391,393,394,395,399,408,483,484,485,487,496,497,498,502,504,507,508,511,512,515,526,576,583,584,585,587,588,589,590,591,592,593,596,598,609,610,644,645,647,648,649,650,672,673,674,676,677,678,681,696,722,728,731,738,749,750,752,753,787,789,791,792,793,798,810,831,833,834,835,836,866,867,868,869,871,881,900,923,924,929,952,968,970,971,972,1004,],[71,71,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-117,-135,-203,-263,71,-264,71,-58,-59,-60,-62,-65,-66,71,71,71,-257,71,71,-314,-322,-327,-332,71,-337,71,71,-345,-204,-205,-206,-214,-315,-316,-319,71,71,-331,71,71,-338,-343,71,-215,-317,-318,71,71,-324,-326,71,71,-333,71,-258,71,71,-346,-140,-145,-155,-156,-157,-158,-321,71,-323,-328,-329,-334,-56,-64,-191,71,-159,-207,-320,71,71,71,-175,-177,-147,-150,-192,-199,-170,-173,-325,71,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,71,71,-172,71,]),'IMPORT':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,114,115,116,117,118,120,132,137,138,139,141,142,143,173,174,175,176,177,253,264,265,270,272,279,297,299,300,301,384,385,390,391,393,394,395,399,408,434,483,484,485,487,496,497,498,502,504,507,508,511,512,515,526,541,576,583,584,585,587,588,589,590,591,592,593,596,598,609,610,644,645,647,648,649,650,672,673,674,676,677,678,681,696,722,728,731,738,749,750,752,753,787,789,791,792,793,798,810,831,833,834,835,836,866,867,868,869,871,881,900,923,924,929,952,968,970,971,972,1004,],[73,73,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-117,-135,-203,-263,73,-264,73,-58,-59,-60,-62,-65,-66,296,298,-382,-364,-366,73,73,73,-257,73,73,429,-365,-367,-383,-314,-322,-327,-332,73,-337,73,73,-345,-384,-204,-205,-206,-214,-315,-316,-319,73,73,-331,73,73,-338,-343,73,-385,-215,-317,-318,73,73,-324,-326,73,73,-333,73,-258,73,73,-346,-140,-145,-155,-156,-157,-158,-321,73,-323,-328,-329,-334,-56,-64,-191,73,-159,-207,-320,73,73,73,-175,-177,-147,-150,-192,-199,-170,-173,-325,73,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,73,73,-172,73,]),'FROM':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,29,77,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,114,115,116,117,118,120,122,132,137,138,139,141,142,143,172,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,253,255,256,264,265,270,272,279,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,384,385,390,391,393,394,395,399,408,440,442,443,453,454,455,456,457,466,483,484,485,487,496,497,498,502,504,507,508,511,512,515,526,545,576,583,584,585,587,588,589,590,591,592,593,596,598,609,610,644,645,647,648,649,650,672,673,674,676,677,678,681,696,722,728,731,738,749,750,752,753,787,789,791,792,793,798,810,831,833,834,835,836,866,867,868,869,871,881,900,923,924,929,952,968,970,971,972,1004,],[72,72,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-462,183,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-117,-135,-203,-263,72,-264,-455,72,-58,-59,-60,-62,-65,-66,295,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,72,-456,-457,72,72,-257,72,72,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-314,-322,-327,-332,72,-337,72,72,-345,-402,-392,-547,-396,-416,-420,-424,-472,-473,-204,-205,-206,-214,-315,-316,-319,72,72,-331,72,72,-338,-343,72,-387,-215,-317,-318,72,72,-324,-326,72,72,-333,72,-258,72,72,-346,-140,-145,-155,-156,-157,-158,-321,72,-323,-328,-329,-334,-56,-64,-191,72,-159,-207,-320,72,72,72,-175,-177,-147,-150,-192,-199,-170,-173,-325,72,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,72,72,-172,72,]),'AT':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,29,66,91,92,96,98,99,100,101,102,103,104,107,108,109,110,114,115,116,117,120,122,137,138,139,141,142,143,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,270,306,339,340,341,342,343,344,345,346,347,348,357,361,362,363,384,385,390,391,393,394,408,457,466,483,484,485,487,496,497,498,507,511,512,515,543,576,583,584,588,589,592,596,610,619,644,645,647,648,649,650,672,674,676,677,678,681,696,722,731,738,749,787,789,791,792,793,798,810,831,833,835,836,866,867,868,869,871,881,900,923,924,929,952,968,972,],[75,75,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-462,75,224,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-117,-135,-203,-263,-264,-455,-58,-59,-60,-62,-65,-66,224,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-257,-349,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-314,-322,-327,-332,75,-337,-345,-472,-473,-204,-205,-206,-214,-315,-316,-319,-331,75,-338,-343,-350,-215,-317,-318,-324,-326,-333,-258,-346,-351,-140,-145,-155,-156,-157,-158,-321,-323,-328,-329,-334,-56,-64,-191,-159,-207,-320,-175,-177,-147,-150,-192,-199,-170,-173,-325,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,-172,]),'YIELD':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,30,114,115,116,117,118,120,132,137,138,139,141,142,143,146,149,150,151,152,153,154,155,156,157,158,159,160,161,162,253,264,265,270,272,279,384,385,390,391,393,394,395,399,408,483,484,485,487,496,497,498,502,504,507,508,511,512,515,526,576,583,584,585,587,588,589,590,591,592,593,596,598,609,610,644,645,647,648,649,650,672,673,674,676,677,678,681,696,722,728,731,738,749,750,752,753,787,789,791,792,793,798,810,831,833,834,835,836,866,867,868,869,871,881,900,923,924,929,952,968,970,971,972,1004,],[77,77,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,77,-117,-135,-203,-263,77,-264,77,-58,-59,-60,-62,-65,-66,77,77,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,77,77,77,-257,77,77,-314,-322,-327,-332,77,-337,77,77,-345,-204,-205,-206,-214,-315,-316,-319,77,77,-331,77,77,-338,-343,77,-215,-317,-318,77,77,-324,-326,77,77,-333,77,-258,77,77,-346,-140,-145,-155,-156,-157,-158,-321,77,-323,-328,-329,-334,-56,-64,-191,77,-159,-207,-320,77,77,77,-175,-177,-147,-150,-192,-199,-170,-173,-325,77,-335,-336,-195,-196,-197,-198,-151,-208,-330,-176,-178,-171,-174,-152,77,77,-172,77,]),'STAR':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,29,30,82,91,92,96,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,122,132,137,138,139,141,142,143,149,168,222,223,229,230,231,233,234,235,236,239,240,241,242,244,253,255,256,258,263,264,265,270,272,277,278,279,292,296,298,307,318,339,340,341,342,343,344,345,346,347,348,354,357,361,362,363,375,384,385,390,391,393,394,395,399,408,429,447,457,458,466,483,484,485,487,492,496,497,498,502,504,507,508,511,512,515,517,526,553,562,576,578,583,584,585,587,588,589,590,591,592,593,596,598,602,609,610,630,644,645,647,648,649,650,672,673,674,676,677,678,681,689,696,722,728,731,736,738,743,749,750,752,753,764,787,789,791,792,793,798,810,825,831,833,834,835,836,866,867,868,869,871,881,892,896,900,923,924,929,942,949,952,968,970,971,972,981,1004,],[74,74,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-462,74,202,225,-445,-449,-451,-1,-2,-4,-51,-67,-69,74,74,-463,-53,-57,-71,-117,-135,-203,-263,74,-264,-455,74,-58,-59,-60,-62,-65,-66,74,74,225,-439,-446,-447,-448,-68,-452,-453,351,-55,-61,-72,-458,-460,74,-456,-457,74,382,74,74,-257,74,403,351,74,74,424,430,351,445,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,464,-67,-474,-459,-461,74,-314,-322,-327,-332,74,-337,74,74,-345,537,551,-472,-533,-473,-204,-205,-206,-214,580,-315,-316,-319,74,74,-331,74,74,-338,-343,600,74,628,-534,-215,670,-317,-318,74,74,-324,-326,74,74,-333,74,-258,74,687,74,-346,709,-140,-145,-155,-156,-157,-158,-321,74,-323,-328,-329,-334,-56,762,-64,-191,74,-159,202,-207,829,-320,74,74,74,847,-175,-177,-147,-150,-192,-199,-170,893,-173,-325,74,-335,-336,-195,-196,-197,-198,-151,-208,947,951,-330,-176,-178,-171,-249,984,-174,-152,74,74,-172,-250,74,]),'LAMBDA':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,30,41,43,46,65,70,71,77,105,106,114,115,116,117,118,120,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,199,236,237,253,258,264,265,266,270,272,274,278,279,290,292,293,295,307,317,320,351,353,354,359,360,365,368,371,375,384,385,390,391,392,393,394,395,398,399,408,415,422,441,458,461,464,465,467,469,470,475,477,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[82,82,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,82,82,82,82,82,82,82,82,82,82,-117,-135,-203,-263,82,-264,82,-58,-59,-60,-62,-65,-66,82,82,82,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,82,82,82,82,82,82,82,82,82,82,-257,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-314,-322,-327,-332,82,82,-337,82,82,82,-345,82,82,82,-533,82,82,82,82,82,82,82,82,-204,-205,-206,-214,82,82,-315,-316,-319,82,82,82,-331,82,82,-338,-343,82,82,82,82,82,82,-534,82,82,-215,-317,-318,82,82,-324,-326,82,82,-333,82,82,82,-258,82,82,-346,82,82,82,82,82,82,-140,-145,-155,-156,-157,-158,736,82,-321,82,-323,-328,-329,-334,-56,82,82,-64,-533,82,82,-191,82,82,82,82,82,-159,-207,82,-320,82,82,82,82,82,82,-534,-533,-175,-177,-147,-150,-192,-199,-170,736,82,-173,82,-325,82,-335,-336,82,-534,82,-195,-196,-197,-198,-151,736,-208,82,-330,82,-176,-178,-171,82,82,-174,-152,82,82,82,-172,82,82,]),'NOT':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,29,30,41,43,46,65,70,71,77,78,85,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,122,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,185,195,196,198,199,206,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,236,237,239,240,241,242,244,253,255,256,258,264,265,266,270,272,274,278,279,290,292,293,295,307,310,314,317,320,325,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,351,353,354,357,359,360,361,362,363,365,368,371,375,384,385,390,391,392,393,394,395,398,399,408,415,422,440,441,454,455,456,457,458,461,464,465,466,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[85,85,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-462,85,85,85,85,85,85,85,85,194,85,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,85,85,-463,-53,-57,-71,-117,-135,-203,-263,85,-264,-455,85,-58,-59,-60,-62,-65,-66,85,85,85,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,85,85,194,312,85,85,85,85,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,85,85,-55,-61,-72,-458,-460,85,-456,-457,85,85,85,85,-257,85,85,85,85,85,85,85,85,85,-401,85,85,85,85,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,85,85,85,-67,85,85,-474,-459,-461,85,85,85,85,-314,-322,-327,-332,85,85,-337,85,85,85,-345,85,85,-402,85,-416,-420,-424,-472,-533,85,85,85,-473,85,85,85,85,85,85,-204,-205,-206,-214,85,85,-315,-316,-319,85,85,85,-331,85,85,-338,-343,85,85,85,85,85,85,-534,85,85,85,-215,-317,-318,85,85,-324,-326,85,85,-333,85,85,85,-258,85,85,-346,85,85,85,85,85,85,-140,-145,-155,-156,-157,-158,85,85,-321,85,-323,-328,-329,-334,-56,85,85,-64,-533,85,85,-191,85,85,85,85,85,-159,-207,85,-320,85,85,85,85,85,85,-534,-533,-175,-177,-147,-150,-192,-199,-170,85,85,-173,85,-325,85,-335,-336,85,-534,85,-195,-196,-197,-198,-151,85,-208,85,-330,85,-176,-178,-171,85,85,-174,-152,85,85,85,-172,85,85,]),'PLUS':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,29,30,41,43,44,46,54,65,70,71,74,77,85,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,122,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,244,248,253,255,256,258,260,264,265,266,267,270,272,274,275,278,279,290,292,293,295,307,309,311,312,314,317,320,325,327,329,331,336,337,338,339,340,341,342,343,344,345,346,347,348,351,353,354,357,359,360,361,362,363,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,457,458,461,464,465,466,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[93,93,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-462,93,93,93,93,93,93,93,93,93,93,93,93,220,-437,-445,93,93,93,-449,-451,-1,-2,-4,-51,-67,-69,93,93,-463,-53,-57,-71,-117,-135,-203,-263,93,-264,-455,93,-58,-59,-60,-62,-65,-66,93,93,93,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,93,93,93,-403,-404,-405,-406,-407,-408,-409,-411,93,93,93,93,93,93,93,93,93,220,-433,93,93,-438,-439,93,93,93,93,93,-446,-447,-448,93,-68,-452,-453,93,93,-55,-61,-72,-458,-460,93,93,-456,-457,93,93,93,93,93,93,-257,93,93,93,93,93,93,93,93,93,93,93,-410,-412,93,93,93,93,93,93,93,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,93,93,93,-67,93,93,-474,-459,-461,93,93,93,93,93,-314,-322,93,-327,-332,93,93,-337,93,93,93,-345,93,93,93,-472,-533,93,93,93,-473,93,93,93,93,93,93,-204,-205,-206,-214,93,93,-315,-316,-319,93,93,93,-331,93,93,-338,-343,93,93,93,93,93,93,-534,93,93,93,-215,-317,-318,93,93,-324,-326,93,93,-333,93,93,93,-258,93,93,-346,93,93,93,93,93,93,-140,-145,-155,-156,-157,-158,93,93,-321,93,-323,-328,-329,-334,-56,93,93,-64,-533,93,93,-191,93,93,93,93,93,-159,-207,93,-320,93,93,93,93,93,93,-534,-533,-175,-177,-147,-150,-192,-199,-170,93,93,-173,93,-325,93,-335,-336,93,-534,93,-195,-196,-197,-198,-151,93,-208,93,-330,93,-176,-178,-171,93,93,-174,-152,93,93,93,-172,93,93,]),'MINUS':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,29,30,41,43,44,46,54,65,70,71,74,77,85,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,122,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,244,248,253,255,256,258,260,264,265,266,267,270,272,274,275,278,279,290,292,293,295,307,309,311,312,314,317,320,325,327,329,331,336,337,338,339,340,341,342,343,344,345,346,347,348,351,353,354,357,359,360,361,362,363,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,457,458,461,464,465,466,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[94,94,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-462,94,94,94,94,94,94,94,94,94,94,94,94,221,-437,-445,94,94,94,-449,-451,-1,-2,-4,-51,-67,-69,94,94,-463,-53,-57,-71,-117,-135,-203,-263,94,-264,-455,94,-58,-59,-60,-62,-65,-66,94,94,94,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,94,94,94,-403,-404,-405,-406,-407,-408,-409,-411,94,94,94,94,94,94,94,94,94,221,-433,94,94,-438,-439,94,94,94,94,94,-446,-447,-448,94,-68,-452,-453,94,94,-55,-61,-72,-458,-460,94,94,-456,-457,94,94,94,94,94,94,-257,94,94,94,94,94,94,94,94,94,94,94,-410,-412,94,94,94,94,94,94,94,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,94,94,94,-67,94,94,-474,-459,-461,94,94,94,94,94,-314,-322,94,-327,-332,94,94,-337,94,94,94,-345,94,94,94,-472,-533,94,94,94,-473,94,94,94,94,94,94,-204,-205,-206,-214,94,94,-315,-316,-319,94,94,94,-331,94,94,-338,-343,94,94,94,94,94,94,-534,94,94,94,-215,-317,-318,94,94,-324,-326,94,94,-333,94,94,94,-258,94,94,-346,94,94,94,94,94,94,-140,-145,-155,-156,-157,-158,94,94,-321,94,-323,-328,-329,-334,-56,94,94,-64,-533,94,94,-191,94,94,94,94,94,-159,-207,94,-320,94,94,94,94,94,94,-534,-533,-175,-177,-147,-150,-192,-199,-170,94,94,-173,94,-325,94,-335,-336,94,-534,94,-195,-196,-197,-198,-151,94,-208,94,-330,94,-176,-178,-171,94,94,-174,-152,94,94,94,-172,94,94,]),'TILDE':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,105,106,114,115,116,117,118,120,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,270,272,274,275,278,279,290,292,293,295,307,309,311,312,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,458,461,464,465,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[95,95,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-117,-135,-203,-263,95,-264,95,-58,-59,-60,-62,-65,-66,95,95,95,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,95,95,95,-403,-404,-405,-406,-407,-408,-409,-411,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-257,95,95,95,95,95,95,95,95,95,95,95,-410,-412,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-314,-322,95,-327,-332,95,95,-337,95,95,95,-345,95,95,95,-533,95,95,95,95,95,95,95,95,95,-204,-205,-206,-214,95,95,-315,-316,-319,95,95,95,-331,95,95,-338,-343,95,95,95,95,95,95,-534,95,95,95,-215,-317,-318,95,95,-324,-326,95,95,-333,95,95,95,-258,95,95,-346,95,95,95,95,95,95,-140,-145,-155,-156,-157,-158,95,95,-321,95,-323,-328,-329,-334,-56,95,95,-64,-533,95,95,-191,95,95,95,95,95,-159,-207,95,-320,95,95,95,95,95,95,-534,-533,-175,-177,-147,-150,-192,-199,-170,95,95,-173,95,-325,95,-335,-336,95,-534,95,-195,-196,-197,-198,-151,95,-208,95,-330,95,-176,-178,-171,95,95,-174,-152,95,95,95,-172,95,95,]),'AWAIT':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,105,106,114,115,116,117,118,120,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,270,272,274,275,278,279,290,292,293,295,307,309,311,312,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,458,461,464,465,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[97,97,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-117,-135,-203,-263,97,-264,97,-58,-59,-60,-62,-65,-66,97,97,97,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,97,97,97,-403,-404,-405,-406,-407,-408,-409,-411,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-257,97,97,97,97,97,97,97,97,97,97,97,-410,-412,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-314,-322,97,-327,-332,97,97,-337,97,97,97,-345,97,97,97,-533,97,97,97,97,97,97,97,97,97,-204,-205,-206,-214,97,97,-315,-316,-319,97,97,97,-331,97,97,-338,-343,97,97,97,97,97,97,-534,97,97,97,-215,-317,-318,97,97,-324,-326,97,97,-333,97,97,97,-258,97,97,-346,97,97,97,97,97,97,-140,-145,-155,-156,-157,-158,97,97,-321,97,-323,-328,-329,-334,-56,97,97,-64,-533,97,97,-191,97,97,97,97,97,-159,-207,97,-320,97,97,97,97,97,97,-534,-533,-175,-177,-147,-150,-192,-199,-170,97,97,-173,97,-325,97,-335,-336,97,-534,97,-195,-196,-197,-198,-151,97,-208,97,-330,97,-176,-178,-171,97,97,-174,-152,97,97,97,-172,97,97,]),'NONE':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,97,105,106,114,115,116,117,118,120,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,270,272,274,275,278,279,290,292,293,295,307,309,311,312,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,458,461,464,465,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[99,99,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-117,-135,-203,-263,99,-264,99,-58,-59,-60,-62,-65,-66,99,99,99,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,99,99,99,-403,-404,-405,-406,-407,-408,-409,-411,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-257,99,99,99,99,99,99,99,99,99,99,99,-410,-412,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-314,-322,99,-327,-332,99,99,-337,99,99,99,-345,99,99,99,-533,99,99,99,99,99,99,99,99,99,-204,-205,-206,-214,99,99,-315,-316,-319,99,99,99,-331,99,99,-338,-343,99,99,99,99,99,99,-534,99,99,99,-215,-317,-318,99,99,-324,-326,99,99,-333,99,99,99,-258,99,99,-346,99,99,99,99,99,99,-140,-145,-155,-156,-157,-158,99,99,-321,99,-323,-328,-329,-334,-56,99,99,-64,-533,99,99,-191,99,99,99,99,99,-159,-207,99,-320,99,99,99,99,99,99,-534,-533,-175,-177,-147,-150,-192,-199,-170,99,99,-173,99,-325,99,-335,-336,99,-534,99,-195,-196,-197,-198,-151,99,-208,99,-330,99,-176,-178,-171,99,99,-174,-152,99,99,99,-172,99,99,]),'FALSE':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,97,105,106,114,115,116,117,118,120,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,270,272,274,275,278,279,290,292,293,295,307,309,311,312,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,458,461,464,465,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[100,100,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-117,-135,-203,-263,100,-264,100,-58,-59,-60,-62,-65,-66,100,100,100,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,100,100,100,-403,-404,-405,-406,-407,-408,-409,-411,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-257,100,100,100,100,100,100,100,100,100,100,100,-410,-412,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-314,-322,100,-327,-332,100,100,-337,100,100,100,-345,100,100,100,-533,100,100,100,100,100,100,100,100,100,-204,-205,-206,-214,100,100,-315,-316,-319,100,100,100,-331,100,100,-338,-343,100,100,100,100,100,100,-534,100,100,100,-215,-317,-318,100,100,-324,-326,100,100,-333,100,100,100,-258,100,100,-346,100,100,100,100,100,100,-140,-145,-155,-156,-157,-158,100,100,-321,100,-323,-328,-329,-334,-56,100,100,-64,-533,100,100,-191,100,100,100,100,100,-159,-207,100,-320,100,100,100,100,100,100,-534,-533,-175,-177,-147,-150,-192,-199,-170,100,100,-173,100,-325,100,-335,-336,100,-534,100,-195,-196,-197,-198,-151,100,-208,100,-330,100,-176,-178,-171,100,100,-174,-152,100,100,100,-172,100,100,]),'TRUE':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,97,105,106,114,115,116,117,118,120,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,270,272,274,275,278,279,290,292,293,295,307,309,311,312,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,458,461,464,465,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[101,101,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-117,-135,-203,-263,101,-264,101,-58,-59,-60,-62,-65,-66,101,101,101,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,101,101,101,-403,-404,-405,-406,-407,-408,-409,-411,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-257,101,101,101,101,101,101,101,101,101,101,101,-410,-412,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-314,-322,101,-327,-332,101,101,-337,101,101,101,-345,101,101,101,-533,101,101,101,101,101,101,101,101,101,-204,-205,-206,-214,101,101,-315,-316,-319,101,101,101,-331,101,101,-338,-343,101,101,101,101,101,101,-534,101,101,101,-215,-317,-318,101,101,-324,-326,101,101,-333,101,101,101,-258,101,101,-346,101,101,101,101,101,101,-140,-145,-155,-156,-157,-158,101,101,-321,101,-323,-328,-329,-334,-56,101,101,-64,-533,101,101,-191,101,101,101,101,101,-159,-207,101,-320,101,101,101,101,101,101,-534,-533,-175,-177,-147,-150,-192,-199,-170,101,101,-173,101,-325,101,-335,-336,101,-534,101,-195,-196,-197,-198,-151,101,-208,101,-330,101,-176,-178,-171,101,101,-174,-152,101,101,101,-172,101,101,]),'ELLIPSIS':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,30,41,43,44,46,54,65,70,71,72,74,77,85,93,94,95,97,105,106,114,115,116,117,118,120,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,174,176,177,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,270,272,274,275,278,279,290,292,293,295,299,300,307,309,311,312,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,458,461,464,465,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[103,103,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,103,103,103,103,103,103,103,103,103,177,103,103,103,103,103,103,103,103,103,-117,-135,-203,-263,103,-264,103,-58,-59,-60,-62,-65,-66,103,103,103,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,103,300,-364,-366,103,103,-403,-404,-405,-406,-407,-408,-409,-411,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,357,103,103,103,103,103,103,103,103,-257,103,103,103,103,103,103,103,103,103,-365,-367,103,103,-410,-412,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-314,-322,103,-327,-332,103,103,-337,103,103,103,-345,103,103,103,-533,103,103,103,357,103,103,103,103,103,-204,-205,-206,-214,103,103,-315,-316,-319,103,103,103,-331,103,103,-338,-343,103,103,103,103,103,103,-534,357,103,103,-215,-317,-318,103,103,-324,-326,103,103,-333,103,103,103,-258,103,103,-346,103,103,103,103,103,103,-140,-145,-155,-156,-157,-158,103,103,-321,103,-323,-328,-329,-334,-56,103,103,-64,-533,103,103,-191,103,103,103,103,103,-159,-207,103,-320,103,103,103,103,103,103,-534,-533,-175,-177,-147,-150,-192,-199,-170,103,103,-173,103,-325,103,-335,-336,103,-534,103,-195,-196,-197,-198,-151,103,-208,103,-330,103,-176,-178,-171,103,103,-174,-152,103,103,103,-172,103,103,]),'LPAR':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,29,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,121,122,127,132,135,136,137,138,139,141,142,143,144,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,175,182,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,233,234,235,236,237,239,240,241,242,244,248,253,255,256,258,260,264,265,266,267,270,272,274,275,278,279,290,292,293,295,296,298,301,307,309,311,312,314,317,320,325,327,329,331,346,347,348,351,353,354,357,359,360,361,362,363,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,429,434,441,457,458,461,464,465,466,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,541,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,664,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,745,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,808,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,874,875,880,881,896,900,921,923,924,928,929,949,951,952,968,969,970,971,972,984,1004,],[30,30,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-462,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,236,-1,-2,-4,-51,-67,-69,30,30,-463,-53,-57,-71,-117,-135,-203,-263,30,-264,254,-455,263,30,277,278,-58,-59,-60,-62,-65,-66,281,30,30,30,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,30,-382,307,30,30,-403,-404,-405,-406,-407,-408,-409,-411,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,236,236,-453,30,30,-55,-61,-72,-458,-460,30,30,-456,-457,30,30,30,30,30,30,-257,30,30,30,30,30,30,30,30,30,426,432,-383,30,30,-410,-412,30,30,30,30,30,30,30,236,-454,-471,30,30,30,-67,30,30,-474,-459,-461,30,30,30,30,30,-314,-322,30,-327,-332,30,30,-337,30,30,30,-345,30,30,539,-384,30,-472,-533,30,30,30,-473,30,30,30,30,30,30,-204,-205,-206,-214,30,30,-315,-316,-319,30,30,30,-331,30,30,-338,-343,30,30,30,-385,30,30,30,-534,30,30,30,-215,-317,-318,30,30,-324,-326,30,30,-333,30,30,30,-258,30,30,-346,30,30,30,30,30,30,-140,-145,-155,-156,-157,-158,30,743,30,-321,30,-323,-328,-329,-334,-56,30,30,-64,-533,30,30,-191,30,30,30,30,30,-159,-207,30,743,-320,30,30,30,30,30,30,-534,-533,-175,-177,-147,-150,-192,-199,743,-170,30,30,-173,30,-325,30,-335,-336,30,-534,30,-195,-196,-197,-198,-151,277,277,30,-208,30,-330,30,-176,-178,277,-171,30,30,-174,-152,30,30,30,-172,30,30,]),'LSQB':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,29,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,114,115,116,117,118,120,122,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,233,234,235,236,237,239,240,241,242,244,248,253,255,256,258,260,264,265,266,267,270,272,274,275,278,279,290,292,293,295,307,309,311,312,314,317,320,325,327,329,331,346,347,348,351,353,354,357,359,360,361,362,363,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,457,458,461,464,465,466,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[105,105,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-462,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,237,-1,-2,-4,-51,-67,-69,105,105,-463,-53,-57,-71,-117,-135,-203,-263,105,-264,-455,105,-58,-59,-60,-62,-65,-66,105,105,105,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,105,105,105,-403,-404,-405,-406,-407,-408,-409,-411,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,237,237,-453,105,105,-55,-61,-72,-458,-460,105,105,-456,-457,105,105,105,105,105,105,-257,105,105,105,105,105,105,105,105,105,105,105,-410,-412,105,105,105,105,105,105,105,237,-454,-471,105,105,105,-67,105,105,-474,-459,-461,105,105,105,105,105,-314,-322,105,-327,-332,105,105,-337,105,105,105,-345,105,105,105,-472,-533,105,105,105,-473,105,105,105,105,105,105,-204,-205,-206,-214,105,105,-315,-316,-319,105,105,105,-331,105,105,-338,-343,105,105,105,105,105,105,-534,105,105,105,-215,-317,-318,105,105,-324,-326,105,105,-333,105,105,105,-258,105,105,-346,105,105,105,105,105,105,-140,-145,-155,-156,-157,-158,105,105,-321,105,-323,-328,-329,-334,-56,105,105,-64,-533,105,105,-191,105,105,105,105,105,-159,-207,105,-320,105,105,105,105,105,105,-534,-533,-175,-177,-147,-150,-192,-199,-170,105,105,-173,105,-325,105,-335,-336,105,-534,105,-195,-196,-197,-198,-151,105,-208,105,-330,105,-176,-178,-171,105,105,-174,-152,105,105,105,-172,105,105,]),'LBRACE':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,97,105,106,114,115,116,117,118,120,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,270,272,274,275,278,279,290,292,293,295,307,309,311,312,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,458,461,464,465,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[106,106,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-117,-135,-203,-263,106,-264,106,-58,-59,-60,-62,-65,-66,106,106,106,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,106,106,106,-403,-404,-405,-406,-407,-408,-409,-411,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-257,106,106,106,106,106,106,106,106,106,106,106,-410,-412,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-314,-322,106,-327,-332,106,106,-337,106,106,106,-345,106,106,106,-533,106,106,106,106,106,106,106,106,106,-204,-205,-206,-214,106,106,-315,-316,-319,106,106,106,-331,106,106,-338,-343,106,106,106,106,106,106,-534,106,106,106,-215,-317,-318,106,106,-324,-326,106,106,-333,106,106,106,-258,106,106,-346,106,106,106,106,106,106,-140,-145,-155,-156,-157,-158,106,106,-321,106,-323,-328,-329,-334,-56,106,106,-64,-533,106,106,-191,106,106,106,106,106,-159,-207,106,-320,106,106,106,106,106,106,-534,-533,-175,-177,-147,-150,-192,-199,-170,106,106,-173,106,-325,106,-335,-336,106,-534,106,-195,-196,-197,-198,-151,106,-208,106,-330,106,-176,-178,-171,106,106,-174,-152,106,106,106,-172,106,106,]),'NAME':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,41,43,44,46,47,48,51,54,63,64,65,70,71,72,73,74,75,77,82,85,93,94,95,97,105,106,114,115,116,117,118,120,126,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,174,176,177,183,186,187,188,189,190,191,192,193,195,196,198,199,202,203,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,238,248,253,254,258,260,263,264,265,266,267,270,272,274,275,277,278,279,280,281,288,290,292,293,295,296,298,299,300,302,304,305,307,309,311,312,314,317,318,320,323,325,327,329,331,351,353,354,359,360,365,368,371,375,377,382,384,385,388,390,391,392,393,394,395,398,399,403,404,408,415,422,426,429,432,433,435,441,445,446,447,450,451,458,461,464,465,467,469,470,475,477,481,483,484,485,487,489,492,494,495,496,497,498,500,502,504,507,508,511,512,515,517,519,522,524,526,527,529,534,536,539,546,551,552,553,555,556,557,559,560,562,566,569,572,574,575,576,578,580,583,584,585,587,588,589,590,591,592,593,594,595,596,598,600,601,602,605,606,609,610,611,615,621,623,624,628,629,630,631,634,636,638,639,641,643,644,645,647,648,649,650,652,656,658,660,661,662,663,665,666,667,668,670,672,673,674,676,677,678,681,682,687,688,689,691,692,693,695,696,699,700,701,703,705,709,710,714,716,717,721,722,724,725,726,727,728,729,730,731,736,738,739,740,741,743,744,749,750,752,753,755,757,758,762,763,764,765,768,771,773,774,775,776,778,782,783,786,787,788,789,790,791,792,793,798,800,802,803,804,805,806,807,808,809,810,811,813,815,816,817,818,820,821,822,823,825,829,831,832,833,834,835,836,837,838,839,841,843,847,848,853,855,856,857,858,860,862,863,864,866,867,868,869,871,872,873,876,877,880,881,882,883,884,886,888,889,892,893,896,900,902,904,905,906,907,909,915,917,918,919,921,923,924,925,929,932,933,934,935,936,937,938,939,940,942,943,944,945,947,949,951,952,955,957,958,959,960,962,965,968,969,970,971,972,973,974,975,977,978,979,980,981,984,988,990,991,992,995,996,997,998,1002,1004,1006,],[29,29,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,121,29,-161,127,29,29,29,29,135,136,144,29,164,165,29,29,29,175,175,29,175,29,204,29,29,29,29,29,29,29,-117,-135,-203,-263,29,-264,-160,29,-58,-59,-60,-62,-65,-66,29,29,29,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,29,175,-364,-366,29,29,-403,-404,-405,-406,-407,-408,-409,-411,29,29,29,204,204,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,361,29,29,373,29,29,383,29,29,29,29,-257,29,29,29,405,29,29,-162,409,418,29,29,29,29,428,428,-365,-367,434,175,437,29,29,-410,-412,29,29,204,29,204,29,29,29,29,29,29,29,29,29,29,29,29,29,29,493,-314,-322,29,-327,-332,29,29,-337,29,29,29,405,405,-345,29,29,428,428,428,541,175,29,204,204,204,204,204,-533,29,29,29,29,29,29,29,29,29,-204,-205,-206,-214,577,383,29,29,-315,-316,-319,29,29,29,-331,29,29,-338,-343,405,29,405,29,29,-163,409,428,616,428,29,204,204,204,204,204,204,29,29,-534,29,29,643,29,664,-215,383,671,-317,-318,29,29,-324,-326,29,29,-333,29,29,29,-258,29,405,405,405,405,405,29,-346,-164,428,204,204,29,204,204,204,204,29,29,29,29,29,720,-140,-145,-155,-156,-157,-158,732,29,664,-209,-211,-212,-213,-228,745,29,747,748,-321,29,-323,-328,-329,-334,-56,29,405,405,405,405,405,405,29,-64,204,204,204,204,204,204,204,-533,29,29,790,-191,29,29,29,29,29,799,808,-159,204,-207,-210,664,816,29,-229,-320,29,29,29,405,405,29,405,405,405,405,29,204,204,204,204,204,204,29,-534,-533,-175,865,-177,720,-147,-150,-192,-199,808,-153,-73,-74,-75,-76,-77,874,877,-170,878,29,664,720,-179,-180,-186,-187,-188,-189,885,29,-173,29,-325,29,-335,-336,405,405,405,405,405,405,405,204,204,204,204,204,204,29,-534,29,-195,-196,-197,-198,-151,-154,808,-85,928,29,-208,790,808,-190,-230,-232,-254,946,948,29,-330,405,405,405,405,405,405,204,204,204,204,29,-176,-178,808,-171,-181,-182,808,-184,-78,-79,-80,-81,-82,-249,976,-255,976,982,29,29,-174,405,405,405,405,405,405,204,-152,29,29,29,-172,-183,-185,-256,-231,-233,976,-253,-250,29,405,405,405,405,-200,-201,-251,-252,405,29,-7,]),'NUMBER':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,97,105,106,114,115,116,117,118,120,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,270,272,274,275,278,279,281,290,292,293,295,307,309,311,312,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,458,461,464,465,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,529,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[107,107,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-117,-135,-203,-263,107,-264,107,-58,-59,-60,-62,-65,-66,107,107,107,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,107,107,107,-403,-404,-405,-406,-407,-408,-409,-411,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-257,107,107,107,107,107,413,107,107,107,107,107,107,-410,-412,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-314,-322,107,-327,-332,107,107,-337,107,107,107,-345,107,107,107,-533,107,107,107,107,107,107,107,107,107,-204,-205,-206,-214,107,107,-315,-316,-319,107,107,107,-331,107,107,-338,-343,107,107,107,413,107,107,107,-534,107,107,107,-215,-317,-318,107,107,-324,-326,107,107,-333,107,107,107,-258,107,107,-346,107,107,107,107,107,107,-140,-145,-155,-156,-157,-158,107,107,-321,107,-323,-328,-329,-334,-56,107,107,-64,-533,107,107,-191,107,107,107,107,107,-159,-207,107,-320,107,107,107,107,107,107,-534,-533,-175,-177,-147,-150,-192,-199,-170,107,107,-173,107,-325,107,-335,-336,107,-534,107,-195,-196,-197,-198,-151,107,-208,107,-330,107,-176,-178,-171,107,107,-174,-152,107,107,107,-172,107,107,]),'STRING':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,97,102,105,106,108,109,114,115,116,117,118,120,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,239,240,248,253,258,260,264,265,266,267,270,272,274,275,278,279,281,290,292,293,295,307,309,311,312,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,458,461,464,465,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,529,546,559,560,562,566,569,574,575,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,730,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[108,108,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,239,108,108,-53,-57,-117,-135,-203,-263,108,-264,108,-58,-59,-60,-62,-65,-66,108,108,108,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,108,108,108,-403,-404,-405,-406,-407,-408,-409,-411,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-55,-61,108,108,108,108,108,108,108,108,-257,108,108,108,108,108,414,108,108,108,108,108,108,-410,-412,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-314,-322,108,-327,-332,108,108,-337,108,108,108,-345,108,108,108,-533,108,108,108,108,108,108,108,108,108,-204,-205,-206,-214,108,108,-315,-316,-319,108,108,108,-331,108,108,-338,-343,108,108,108,414,108,108,108,-534,108,108,108,659,-215,-317,-318,108,108,-324,-326,108,108,-333,108,108,108,-258,108,108,-346,108,108,108,108,108,108,-140,-145,-155,-156,-157,-158,108,108,-321,108,-323,-328,-329,-334,-56,108,108,-64,-533,108,108,-191,108,108,108,108,108,801,-159,-207,108,-320,108,108,108,108,108,108,-534,-533,-175,-177,-147,-150,-192,-199,-170,108,108,-173,108,-325,108,-335,-336,108,-534,108,-195,-196,-197,-198,-151,108,-208,108,-330,108,-176,-178,-171,108,108,-174,-152,108,108,108,-172,108,108,]),'FSTRING':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,97,102,105,106,108,109,114,115,116,117,118,120,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,239,240,248,253,258,260,264,265,266,267,270,272,274,275,278,279,290,292,293,295,307,309,311,312,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,458,461,464,465,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[109,109,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,240,109,109,-53,-57,-117,-135,-203,-263,109,-264,109,-58,-59,-60,-62,-65,-66,109,109,109,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,109,109,109,-403,-404,-405,-406,-407,-408,-409,-411,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-55,-61,109,109,109,109,109,109,109,109,-257,109,109,109,109,109,109,109,109,109,109,109,-410,-412,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-314,-322,109,-327,-332,109,109,-337,109,109,109,-345,109,109,109,-533,109,109,109,109,109,109,109,109,109,-204,-205,-206,-214,109,109,-315,-316,-319,109,109,109,-331,109,109,-338,-343,109,109,109,109,109,109,-534,109,109,109,-215,-317,-318,109,109,-324,-326,109,109,-333,109,109,109,-258,109,109,-346,109,109,109,109,109,109,-140,-145,-155,-156,-157,-158,109,109,-321,109,-323,-328,-329,-334,-56,109,109,-64,-533,109,109,-191,109,109,109,109,109,-159,-207,109,-320,109,109,109,109,109,109,-534,-533,-175,-177,-147,-150,-192,-199,-170,109,109,-173,109,-325,109,-335,-336,109,-534,109,-195,-196,-197,-198,-151,109,-208,109,-330,109,-176,-178,-171,109,109,-174,-152,109,109,109,-172,109,109,]),'BYTES':([0,5,6,7,8,9,10,11,12,14,17,18,19,20,21,22,23,24,25,26,27,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,97,104,105,106,110,114,115,116,117,118,120,132,137,138,139,141,142,143,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,168,183,186,187,188,189,190,191,192,193,195,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,241,248,253,258,260,264,265,266,267,270,272,274,275,278,279,290,292,293,295,307,309,311,312,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,384,385,388,390,391,392,393,394,395,398,399,408,415,422,441,458,461,464,465,467,469,470,475,477,481,483,484,485,487,494,495,496,497,498,500,502,504,507,508,511,512,515,519,524,526,546,559,560,562,566,569,574,576,583,584,585,587,588,589,590,591,592,593,594,595,596,598,609,610,624,634,636,638,639,641,644,645,647,648,649,650,656,667,672,673,674,676,677,678,681,682,695,696,714,716,717,722,724,725,726,727,728,731,738,743,749,750,752,753,758,768,782,783,786,787,789,791,792,793,798,810,813,829,831,832,833,834,835,836,862,863,864,866,867,868,869,871,880,881,896,900,921,923,924,929,949,951,952,968,969,970,971,972,984,1004,],[110,110,-120,-121,-122,-123,-261,-262,-134,-202,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,241,110,110,-71,-117,-135,-203,-263,110,-264,110,-58,-59,-60,-62,-65,-66,110,110,110,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,110,110,110,-403,-404,-405,-406,-407,-408,-409,-411,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-72,110,110,110,110,110,110,110,110,-257,110,110,110,110,110,110,110,110,110,110,110,-410,-412,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-314,-322,110,-327,-332,110,110,-337,110,110,110,-345,110,110,110,-533,110,110,110,110,110,110,110,110,110,-204,-205,-206,-214,110,110,-315,-316,-319,110,110,110,-331,110,110,-338,-343,110,110,110,110,110,110,-534,110,110,110,-215,-317,-318,110,110,-324,-326,110,110,-333,110,110,110,-258,110,110,-346,110,110,110,110,110,110,-140,-145,-155,-156,-157,-158,110,110,-321,110,-323,-328,-329,-334,-56,110,110,-64,-533,110,110,-191,110,110,110,110,110,-159,-207,110,-320,110,110,110,110,110,110,-534,-533,-175,-177,-147,-150,-192,-199,-170,110,110,-173,110,-325,110,-335,-336,110,-534,110,-195,-196,-197,-198,-151,110,-208,110,-330,110,-176,-178,-171,110,110,-174,-152,110,110,110,-172,110,110,]),'$end':([1,4,112,113,251,],[0,-113,-109,-112,-108,]),'DEDENT':([10,11,17,18,19,20,21,22,23,24,25,26,27,117,120,137,138,139,141,142,143,270,384,385,390,391,394,408,487,496,497,498,507,510,511,512,515,576,583,584,588,589,592,596,597,610,647,648,649,650,658,660,661,662,663,665,672,674,676,677,678,681,696,722,731,739,744,749,787,789,793,798,800,802,803,804,805,806,807,810,815,817,818,820,821,822,823,831,833,835,836,866,867,868,869,872,876,884,886,888,889,900,923,924,925,929,932,933,934,935,936,937,938,939,940,944,952,972,973,974,975,977,978,979,980,995,996,997,998,1006,],[-261,-262,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-263,-264,-58,-59,-60,-62,-65,-66,-257,-314,-322,-327,-332,-337,-345,-214,-315,-316,-319,-331,596,-260,-338,-343,-215,-317,-318,-324,-326,-333,-258,-259,-346,-155,-156,-157,-158,738,-209,-211,-212,-213,-228,-321,-323,-328,-329,-334,-56,-64,-191,-159,-210,-229,-320,-175,-177,-192,-199,871,-153,-73,-74,-75,-76,-77,-170,881,-179,-180,-186,-187,-188,-189,-173,-325,-335,-336,-195,-196,-197,-198,-154,-85,-190,-230,-232,-254,-330,-176,-178,968,-171,-181,-182,973,-184,-78,-79,-80,-81,-82,-255,-174,-172,-183,-185,-256,-231,-233,997,-253,-200,-201,-251,-252,-7,]),'SEMI':([15,29,33,34,35,36,37,38,39,40,42,52,53,55,56,57,58,59,60,61,62,67,68,69,70,71,76,77,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,119,122,131,145,147,163,164,165,166,168,169,170,171,172,175,178,179,180,181,184,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,252,255,256,267,268,282,283,284,285,286,287,289,291,292,293,294,301,303,308,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,372,387,388,416,417,418,419,420,421,422,423,424,425,427,428,430,431,434,436,437,440,442,443,453,454,455,456,457,466,503,530,531,532,534,535,537,538,541,542,545,613,614,615,616,618,697,698,],[118,-462,-10,-11,-12,-13,-14,-15,-16,-17,-306,-292,-283,-271,-272,-273,-274,-275,-276,-352,-353,-308,-277,-278,-279,-281,-39,-284,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,253,-455,-495,-9,-295,-270,-32,-286,-290,-309,-310,-280,-300,-282,-382,-354,-378,-370,-52,-285,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-268,-456,-457,-496,-497,-293,-294,-34,-296,-297,-33,-287,-312,-311,-301,-302,-383,-379,-54,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-269,-499,-498,-298,-299,-289,-291,-313,-304,-303,-35,-355,-356,-372,-368,-361,-362,-384,-380,-371,-402,-392,-547,-396,-416,-420,-424,-472,-473,-500,-36,-288,-305,-373,-374,-358,-359,-385,-381,-387,-357,-376,-375,-369,-363,-377,-360,]),'DOT':([29,72,98,99,100,101,102,103,104,107,108,109,110,122,174,175,176,177,233,234,235,239,240,241,242,244,255,256,299,300,301,346,347,348,357,361,362,363,434,457,466,541,643,790,799,808,816,878,885,976,],[-462,176,238,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,299,302,-364,-366,238,238,-453,-55,-61,-72,-458,-460,-456,-457,-365,-367,433,238,-454,-471,-67,-474,-459,-461,-384,-472,-473,-385,729,729,729,729,729,729,729,729,]),'DOUBLESTAR':([29,82,96,98,99,100,101,102,103,104,106,107,108,109,110,122,233,234,235,236,239,240,241,242,244,255,256,277,278,307,318,346,347,348,354,357,361,362,363,365,447,450,451,457,458,466,475,517,553,555,560,562,602,605,606,621,623,630,639,689,691,700,703,705,714,736,755,757,764,774,776,778,783,786,838,841,843,856,858,860,863,905,907,909,918,958,960,962,991,],[-462,203,232,-451,-1,-2,-4,-51,-67,-69,248,-463,-53,-57,-71,-455,-68,-452,-453,353,-55,-61,-72,-458,-460,-456,-457,404,353,353,446,-70,-454,-471,465,-67,-474,-459,-461,248,552,556,557,-472,-533,-473,248,601,629,631,636,-534,688,692,693,699,701,710,717,763,765,771,773,775,782,203,837,839,848,853,855,857,862,864,902,904,906,915,917,919,921,955,957,959,965,988,990,992,1002,]),'SLASH':([29,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,339,340,341,342,343,344,345,346,347,348,357,361,362,363,457,466,],[-462,226,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,226,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-472,-473,]),'PERCENT':([29,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,339,340,341,342,343,344,345,346,347,348,357,361,362,363,457,466,],[-462,227,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,227,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-472,-473,]),'DOUBLESLASH':([29,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,339,340,341,342,343,344,345,346,347,348,357,361,362,363,457,466,],[-462,228,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,228,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-472,-473,]),'LEFTSHIFT':([29,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,457,466,643,720,723,790,799,808,816,865,870,874,941,],[-462,216,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,216,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-472,-473,725,725,725,725,-193,725,725,725,-194,725,725,]),'RIGHTSHIFT':([29,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,457,466,643,720,723,790,799,808,816,865,870,874,941,],[-462,217,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,217,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-472,-473,727,727,727,727,-193,727,727,727,-194,727,727,]),'AMPER':([29,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,456,457,466,],[-462,213,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,331,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-424,-472,-473,]),'CIRCUMFLEX':([29,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,455,456,457,466,],[-462,211,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,329,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-420,-424,-472,-473,]),'VBAR':([29,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,454,455,456,457,466,],[-462,209,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,327,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-416,-420,-424,-472,-473,]),'LESS':([29,78,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,185,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,310,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,440,454,455,456,457,466,],[-462,187,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,187,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-401,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-402,-416,-420,-424,-472,-473,]),'GREATER':([29,78,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,185,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,310,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,440,454,455,456,457,466,],[-462,188,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,188,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-401,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-402,-416,-420,-424,-472,-473,]),'EQEQUAL':([29,78,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,185,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,310,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,440,454,455,456,457,466,],[-462,189,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,189,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-401,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-402,-416,-420,-424,-472,-473,]),'GREATEREQUAL':([29,78,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,185,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,310,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,440,454,455,456,457,466,],[-462,190,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,190,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-401,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-402,-416,-420,-424,-472,-473,]),'LESSEQUAL':([29,78,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,185,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,310,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,440,454,455,456,457,466,],[-462,191,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,191,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-401,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-402,-416,-420,-424,-472,-473,]),'NOTEQUAL':([29,78,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,185,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,310,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,440,454,455,456,457,466,],[-462,192,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,192,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-401,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-402,-416,-420,-424,-472,-473,]),'IN':([29,78,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,130,131,185,194,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,267,268,310,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,376,387,388,440,454,455,456,457,466,482,503,],[-462,193,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,266,-495,193,311,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-496,-497,-401,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,481,-499,-498,-402,-416,-420,-424,-472,-473,574,-500,]),'IS':([29,78,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,185,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,310,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,440,454,455,456,457,466,],[-462,195,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,195,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-401,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-402,-416,-420,-424,-472,-473,]),'AND':([29,78,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,185,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,310,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,440,453,454,455,456,457,466,],[-462,-399,206,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-400,325,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-401,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-402,-396,-416,-420,-424,-472,-473,]),'OR':([29,78,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,310,315,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,361,362,363,440,442,453,454,455,456,457,466,],[-462,-399,198,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-400,314,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-401,-391,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,-474,-459,-461,-402,-392,-396,-416,-420,-424,-472,-473,]),'COMMA':([29,42,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,125,131,133,134,164,165,166,169,171,175,179,180,181,185,197,201,202,204,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,246,247,249,250,255,256,259,268,291,294,301,303,310,315,316,319,321,322,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,352,356,357,358,359,360,361,362,363,366,369,370,374,381,383,387,396,397,402,403,405,409,412,413,414,418,420,421,427,428,434,436,437,440,442,443,444,445,448,449,452,453,454,455,456,457,459,460,463,466,468,469,470,471,472,473,476,478,480,491,503,509,518,520,521,532,535,541,542,545,547,548,550,551,554,558,561,563,565,567,568,569,570,571,573,579,581,582,599,600,603,604,607,608,614,616,620,622,625,626,628,635,637,640,641,642,653,654,655,657,669,683,684,686,687,690,694,697,702,704,706,707,709,712,715,718,719,733,734,735,737,754,756,759,760,762,769,777,779,780,784,812,828,830,840,842,844,845,847,850,859,879,885,895,898,908,910,911,931,946,950,961,983,],[-462,-306,168,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,258,267,274,-339,288,288,290,292,293,-382,304,-370,-52,-400,-390,318,323,-146,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,365,368,-307,-18,-456,-457,375,388,-312,422,-383,435,-401,-391,-546,447,450,451,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,458,-535,467,-67,-482,-483,-484,-474,-459,-461,475,477,-38,-469,492,-225,-499,274,-340,517,522,-148,-167,529,-168,-169,288,-313,-304,534,-368,-384,-380,-371,-402,-392,-547,-595,323,553,555,-136,-396,-416,-420,-424,-472,560,-536,562,-473,566,-485,-486,-487,-489,-511,-513,-510,-470,578,-500,595,602,605,606,-305,615,-385,-381,-387,621,623,-599,323,630,-141,-537,639,-479,-490,-494,-488,-512,-514,-3,-223,-226,-227,-594,522,689,691,-137,-149,-376,-369,-597,700,703,705,323,-138,714,-480,-491,-492,-5,-538,-539,-6,-224,755,757,-598,522,764,-142,-377,-601,774,776,778,323,-143,783,786,-493,-540,-542,-543,-8,-596,838,841,843,522,-139,856,858,860,863,-541,896,-243,-600,905,907,909,522,-144,918,-544,942,949,-244,958,960,962,-545,981,-241,991,-242,]),'COLON':([29,42,45,52,67,76,78,79,80,81,82,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,128,129,133,134,136,168,169,171,181,185,197,200,201,204,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,237,239,240,241,242,244,249,255,256,262,273,276,291,292,293,294,310,315,316,318,319,321,322,324,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,358,361,362,363,379,383,386,389,392,396,397,401,405,407,420,421,422,440,442,443,444,447,448,449,452,453,454,455,456,457,466,467,471,474,479,490,499,501,505,506,509,513,514,516,525,532,545,547,548,549,550,553,554,558,566,567,577,586,620,622,625,626,627,630,632,633,635,643,664,675,679,680,702,704,706,707,708,711,712,720,732,736,742,751,770,772,777,779,780,781,808,814,816,826,851,852,854,859,874,885,887,894,913,914,916,926,927,946,948,963,964,966,982,993,994,],[-462,-306,132,148,-308,-39,-399,-386,-388,-389,199,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,264,265,272,-339,279,-309,-310,-300,-52,-400,-390,317,-555,-146,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,359,-55,-61,-72,-458,-460,371,-456,-457,378,395,399,-312,-311,-301,-302,-401,-391,-546,-557,-565,-589,-129,-593,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,469,-474,-459,-461,-216,494,502,504,508,-342,-340,-344,524,526,-313,-304,-303,-402,-392,-547,-595,-567,-575,-127,-136,-396,-416,-420,-424,-472,-473,359,569,371,572,-217,585,587,590,591,593,-341,598,-63,609,-305,-387,-549,-87,-553,-599,-577,-585,-141,359,641,668,673,-597,-84,-559,-95,-563,-587,-591,-133,-138,721,741,750,752,753,-601,-93,-569,-103,-573,-131,-143,788,811,813,825,834,-551,-91,-101,-579,-116,-583,741,880,882,-234,-89,-561,-99,-111,788,-245,943,-235,-97,-571,-107,970,971,-246,-247,-105,-581,-125,-248,-119,1004,]),'AMPEREQUAL':([29,42,52,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,291,292,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,420,440,442,443,453,454,455,456,457,466,545,],[-462,-306,150,-308,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-312,-311,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-313,-402,-392,-547,-396,-416,-420,-424,-472,-473,-387,]),'CIRCUMFLEXEQUAL':([29,42,52,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,291,292,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,420,440,442,443,453,454,455,456,457,466,545,],[-462,-306,151,-308,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-312,-311,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-313,-402,-392,-547,-396,-416,-420,-424,-472,-473,-387,]),'DOUBLESLASHEQUAL':([29,42,52,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,291,292,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,420,440,442,443,453,454,455,456,457,466,545,],[-462,-306,152,-308,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-312,-311,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-313,-402,-392,-547,-396,-416,-420,-424,-472,-473,-387,]),'DOUBLESTAREQUAL':([29,42,52,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,291,292,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,420,440,442,443,453,454,455,456,457,466,545,],[-462,-306,153,-308,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-312,-311,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-313,-402,-392,-547,-396,-416,-420,-424,-472,-473,-387,]),'LEFTSHIFTEQUAL':([29,42,52,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,291,292,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,420,440,442,443,453,454,455,456,457,466,545,],[-462,-306,154,-308,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-312,-311,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-313,-402,-392,-547,-396,-416,-420,-424,-472,-473,-387,]),'MINUSEQUAL':([29,42,52,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,291,292,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,420,440,442,443,453,454,455,456,457,466,545,],[-462,-306,155,-308,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-312,-311,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-313,-402,-392,-547,-396,-416,-420,-424,-472,-473,-387,]),'PERCENTEQUAL':([29,42,52,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,291,292,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,420,440,442,443,453,454,455,456,457,466,545,],[-462,-306,156,-308,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-312,-311,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-313,-402,-392,-547,-396,-416,-420,-424,-472,-473,-387,]),'PLUSEQUAL':([29,42,52,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,291,292,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,420,440,442,443,453,454,455,456,457,466,545,],[-462,-306,157,-308,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-312,-311,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-313,-402,-392,-547,-396,-416,-420,-424,-472,-473,-387,]),'RIGHTSHIFTEQUAL':([29,42,52,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,291,292,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,420,440,442,443,453,454,455,456,457,466,545,],[-462,-306,158,-308,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-312,-311,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-313,-402,-392,-547,-396,-416,-420,-424,-472,-473,-387,]),'SLASHEQUAL':([29,42,52,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,291,292,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,420,440,442,443,453,454,455,456,457,466,545,],[-462,-306,159,-308,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-312,-311,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-313,-402,-392,-547,-396,-416,-420,-424,-472,-473,-387,]),'STAREQUAL':([29,42,52,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,291,292,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,420,440,442,443,453,454,455,456,457,466,545,],[-462,-306,160,-308,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-312,-311,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-313,-402,-392,-547,-396,-416,-420,-424,-472,-473,-387,]),'VBAREQUAL':([29,42,52,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,291,292,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,420,440,442,443,453,454,455,456,457,466,545,],[-462,-306,161,-308,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-312,-311,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-313,-402,-392,-547,-396,-416,-420,-424,-472,-473,-387,]),'ATEQUAL':([29,42,52,67,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,291,292,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,420,440,442,443,453,454,455,456,457,466,545,],[-462,-306,162,-308,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-312,-311,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-313,-402,-392,-547,-396,-416,-420,-424,-472,-473,-387,]),'EQUAL':([29,42,52,67,76,77,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,168,169,171,181,184,185,197,201,204,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,284,285,286,291,292,293,294,308,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,352,361,362,363,383,402,405,420,421,422,440,442,443,444,452,453,454,455,456,457,466,532,545,550,558,577,599,607,608,643,686,694,720,723,747,790,799,808,816,865,870,874,941,],[-462,-306,149,-308,-39,-284,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-309,-310,-300,-52,-285,-400,-390,320,-146,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,415,149,149,-312,-311,-301,-302,-54,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,461,-474,-459,-461,495,519,-148,-313,-304,-303,-402,-392,-547,546,559,-396,-416,-420,-424,-472,-473,-305,-387,624,634,667,682,695,-149,724,758,768,724,724,832,724,-193,724,724,724,-194,724,724,]),'RPAR':([29,30,42,76,77,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,123,124,125,171,181,184,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,236,239,240,241,242,244,255,256,257,258,259,263,277,278,281,293,294,307,308,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,361,362,363,373,374,375,380,381,383,400,402,405,406,409,411,412,413,414,421,422,427,428,439,440,442,443,453,454,455,456,457,458,459,460,462,463,466,480,491,493,517,518,520,521,523,532,533,534,535,540,545,561,562,563,564,573,579,581,582,599,602,603,604,607,608,612,614,615,616,617,637,653,654,655,657,669,671,683,684,685,686,689,690,694,697,713,715,718,733,734,735,737,743,748,754,756,759,760,761,764,766,767,769,784,785,812,827,828,830,840,842,844,845,846,849,850,861,879,895,897,898,901,903,908,910,911,912,920,922,931,950,953,954,956,961,967,983,985,986,987,989,999,1000,1001,1003,1005,],[-462,122,-306,-39,-284,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,255,256,-465,-300,-52,-285,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,348,-55,-61,-72,-458,-460,-456,-457,-464,-466,-467,379,401,407,410,-301,-302,438,-54,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,457,-515,-535,-474,-459,-461,479,-469,-468,490,-218,-225,516,-554,-148,525,-167,528,-166,-168,-169,-304,-303,-372,-368,544,-402,-392,-547,-396,-416,-420,-424,-472,-516,-517,-536,-519,-520,-473,-470,-220,-219,-556,-564,-588,-128,-592,-305,613,-373,-374,618,-387,-537,-521,-522,-524,-3,-223,-226,-227,-594,-566,-574,-126,-137,-149,-165,-376,-375,-369,698,-525,-5,-538,-539,-6,-224,-221,-548,-86,-552,-598,-576,-584,-142,-377,-518,-527,-529,-540,-542,-543,-8,826,-222,-596,-83,-558,-94,-562,-586,-590,-132,-139,-530,-523,-541,894,-236,-243,-600,-92,-568,-102,-572,-130,-144,-526,-544,-238,-237,-244,-550,-90,-100,-578,-115,-582,-528,-531,-545,-241,-88,-560,-98,-110,-532,-242,-239,-96,-570,-106,-240,-104,-580,-124,-118,]),'AS':([29,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,134,175,180,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,301,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,428,434,440,442,443,453,454,455,456,457,466,509,541,545,],[-462,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,275,-382,305,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-383,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,536,-384,-402,-392,-547,-396,-416,-420,-424,-472,-473,594,-385,-387,]),'RSQB':([29,42,76,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,105,107,108,109,110,122,125,181,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,243,244,255,256,257,258,259,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,355,356,357,358,359,360,361,362,363,374,375,440,442,443,453,454,455,456,457,466,467,468,469,470,471,472,480,545,565,566,567,568,569,573,640,641,642,653,654,655,657,719,733,734,735,737,812,879,931,],[-462,-306,-39,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,242,-463,-53,-57,-71,-455,-465,-52,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,362,-460,-456,-457,-464,-466,-467,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,466,-475,-67,-482,-483,-484,-474,-459,-461,-469,-468,-402,-392,-547,-396,-416,-420,-424,-472,-473,-476,-477,-485,-486,-487,-489,-470,-387,-479,-478,-490,-494,-488,-3,-480,-491,-492,-5,-538,-539,-6,-493,-540,-542,-543,-8,-541,-544,-545,]),'ELSE':([29,78,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,117,120,122,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,255,256,270,310,313,315,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,384,385,390,391,440,442,453,454,455,456,457,466,496,498,507,584,588,592,596,678,749,835,836,],[-462,-399,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-263,-264,-455,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,-456,-457,-257,-401,441,-391,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,499,501,505,-332,-402,-392,-396,-416,-420,-424,-472,-473,499,-319,-331,-318,675,-333,-258,-334,-320,-335,-336,]),'DOUBLECOLON':([29,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,107,108,109,110,122,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,237,239,240,241,242,244,255,256,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,357,358,361,362,363,440,442,443,453,454,455,456,457,466,467,545,566,643,720,723,790,799,808,816,865,870,874,941,],[-462,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,-463,-53,-57,-71,-455,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,360,-55,-61,-72,-458,-460,-456,-457,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-67,470,-474,-459,-461,-402,-392,-547,-396,-416,-420,-424,-472,-473,360,-387,360,728,728,728,728,-193,728,728,728,-194,728,728,]),'RBRACE':([29,78,79,80,81,83,84,86,87,88,89,90,91,92,96,98,99,100,101,102,103,104,106,107,108,109,110,122,185,197,205,207,208,210,212,214,215,218,219,222,223,229,230,231,233,234,235,239,240,241,242,244,245,246,255,256,310,315,316,326,328,330,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,361,362,363,364,365,366,367,368,369,370,440,442,443,453,454,455,456,457,466,473,475,476,477,478,545,570,571,573,653,654,655,657,733,734,735,737,812,879,931,],[-462,-399,-386,-388,-389,-393,-397,-413,-417,-421,-425,-431,-437,-445,-449,-451,-1,-2,-4,-51,-67,-69,244,-463,-53,-57,-71,-455,-400,-390,-394,-398,-414,-418,-422,-426,-427,-432,-433,-438,-439,-446,-447,-448,-68,-452,-453,-55,-61,-72,-458,-460,363,-502,-456,-457,-401,-391,-546,-395,-415,-419,-423,-428,-429,-430,-434,-435,-436,-440,-37,-441,-442,-443,-444,-450,-70,-454,-471,-474,-459,-461,-501,-503,-504,-506,-507,-508,-38,-402,-392,-547,-396,-416,-420,-424,-472,-473,-511,-505,-513,-509,-510,-387,-512,-514,-3,-5,-538,-539,-6,-540,-542,-543,-8,-541,-544,-545,]),'FINALLY':([117,120,269,270,390,391,507,592,596,676,678,835,836,],[-263,-264,389,-257,506,-332,-331,-333,-258,751,-334,-335,-336,]),'EXCEPT':([117,120,269,270,391,592,596,678,835,836,],[-263,-264,392,-257,392,-333,-258,-334,-335,-336,]),'ELIF':([117,120,270,384,498,596,749,],[-263,-264,-257,500,500,-258,-320,]),'CONST':([117,120,270,378,487,575,576,596,658,660,661,662,663,665,722,739,740,744,787,789,793,798,810,815,817,818,820,821,822,823,831,866,867,868,869,884,886,888,889,923,924,929,932,933,944,952,972,973,975,977,978,997,],[-263,-264,-257,489,-214,489,-215,-258,489,-209,-211,-212,-213,-228,-191,-210,489,-229,-175,-177,-192,-199,-170,489,-179,-180,-186,-187,-188,-189,-173,-195,-196,-197,-198,-190,-230,-232,-254,-176,-178,-171,-181,-182,-255,-174,-172,-183,-256,-231,-233,-251,]),'ALIAS':([117,120,270,572,596,647,648,649,650,665,721,722,730,731,741,744,787,789,793,798,800,802,803,804,805,806,807,810,817,818,820,821,822,823,866,867,868,869,872,873,876,882,883,884,886,888,889,923,924,925,929,932,933,934,935,936,937,938,939,940,944,972,973,974,975,977,978,995,996,997,1006,],[-263,-264,-257,652,-258,-155,-156,-157,-158,-228,652,-191,652,-159,652,-229,-175,-177,-192,-199,652,-153,-73,-74,-75,-76,-77,-170,-179,-180,-186,-187,-188,-189,-195,-196,-197,-198,-154,652,-85,652,652,-190,-230,-232,-254,-176,-178,652,-171,-181,-182,652,-184,-78,-79,-80,-81,-82,-255,-172,-183,-185,-256,-231,-233,-200,-201,-251,-7,]),'INDENT':([271,486,646,819,891,],[393,575,730,883,945,]),'RETURNARROW':([276,401,516,926,],[398,-344,-63,969,]),'COLONEQUAL':([643,720,723,790,799,808,816,865,870,874,941,],[726,726,726,726,-193,726,726,726,-194,726,726,]),'RIGHTARROW':([808,877,],[875,875,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'enaml':([0,],[1,]),'enaml_module':([0,],[2,]),'enaml_module_body':([0,],[5,]),'enaml_module_item':([0,5,],[6,114,]),'stmt':([0,5,393,511,],[7,7,511,511,]),'enamldef':([0,5,],[8,8,]),'template':([0,5,],[9,9,]),'simple_stmt':([0,5,132,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[10,10,270,270,270,270,270,10,270,270,270,270,270,10,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,]),'compound_stmt':([0,5,393,511,],[11,11,11,11,]),'enamldef_impl':([0,5,13,],[12,12,115,]),'pragmas':([0,5,31,575,658,730,740,800,815,873,883,925,934,],[13,13,126,666,666,666,666,666,666,666,666,666,666,]),'template_impl':([0,5,13,],[14,14,116,]),'small_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[15,15,252,15,372,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'small_stmt_list':([0,5,132,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'if_stmt':([0,5,393,511,],[17,17,17,17,]),'while_stmt':([0,5,393,511,],[18,18,18,18,]),'for_stmt':([0,5,50,393,511,],[19,19,142,19,19,]),'try_stmt':([0,5,393,511,],[20,20,20,20,]),'with_stmt':([0,5,50,393,511,],[21,21,143,21,21,]),'funcdef':([0,5,49,50,140,393,511,],[22,22,137,141,141,22,22,]),'classdef':([0,5,49,393,511,],[23,23,138,23,23,]),'decorated':([0,5,393,511,],[24,24,24,24,]),'async_funcdef':([0,5,49,393,511,],[25,25,139,25,25,]),'async_for_stmt':([0,5,393,511,],[26,26,26,26,]),'async_with_stmt':([0,5,393,511,],[27,27,27,27,]),'pragma':([0,5,31,575,658,730,740,800,815,873,883,925,934,],[31,31,31,31,31,31,31,31,31,31,31,31,31,]),'expr_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'del_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'pass_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'flow_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'import_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'global_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'assert_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'nonlocal_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'test':([0,5,30,41,43,46,65,70,71,77,105,106,118,132,146,148,149,168,183,199,236,237,253,258,264,265,266,272,274,278,279,290,292,293,295,307,317,320,351,353,354,359,360,365,368,371,375,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,829,832,834,862,864,896,921,949,951,969,970,971,984,1004,],[42,42,42,128,129,134,166,171,172,171,42,249,42,42,171,284,42,42,171,316,352,358,42,42,42,42,171,42,134,352,42,419,42,421,423,352,443,448,459,462,352,471,472,474,476,478,42,509,42,42,514,42,530,532,545,561,563,564,358,567,568,474,571,581,582,586,42,42,42,42,603,608,42,620,635,352,358,642,42,42,42,42,42,679,680,42,42,702,712,713,352,352,719,746,42,754,769,352,785,794,795,796,797,42,830,42,42,42,840,850,861,897,899,42,920,922,830,967,830,985,994,42,42,999,42,]),'decorators':([0,5,66,393,511,],[49,49,167,49,49,]),'testlist_star_expr':([0,5,118,132,149,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[52,52,52,52,285,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'yield_expr':([0,5,30,118,132,146,149,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[53,53,123,53,53,283,286,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'break_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'continue_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'return_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'raise_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'yield_stmt':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'import_name':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'import_from':([0,5,118,132,253,264,265,272,279,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'decorator':([0,5,66,393,511,],[66,66,66,66,66,]),'test_or_star':([0,5,30,105,118,132,149,168,253,258,264,265,272,279,292,375,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[67,67,125,125,67,67,67,291,67,374,67,67,67,67,420,480,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'star_expr':([0,5,30,105,106,118,132,149,168,253,258,264,265,272,279,292,375,393,395,399,502,504,508,511,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[76,76,76,76,250,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'expr':([0,5,30,41,43,44,46,54,65,70,71,74,77,85,105,106,118,132,146,148,149,168,183,186,196,198,199,206,236,237,248,253,258,260,264,265,266,267,272,274,275,278,279,290,292,293,295,307,309,314,317,320,325,351,353,354,359,360,365,368,371,375,377,388,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[78,78,78,78,78,131,78,131,78,78,78,181,78,78,78,78,78,78,78,78,78,78,78,310,78,78,78,78,78,78,370,78,78,131,78,78,78,387,78,78,397,78,78,78,78,78,78,78,440,78,78,78,78,78,78,78,78,78,78,78,78,78,131,503,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'or_test':([0,5,30,41,43,46,65,70,71,77,105,106,118,132,146,148,149,168,183,196,199,236,237,253,258,264,265,266,272,274,278,279,290,292,293,295,307,317,320,351,353,354,359,360,365,368,371,375,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,313,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,573,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,657,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,734,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,734,79,79,79,79,79,734,79,79,79,79,79,79,79,79,79,]),'lambdef':([0,5,30,41,43,46,65,70,71,77,105,106,118,132,146,148,149,168,183,199,236,237,253,258,264,265,266,272,274,278,279,290,292,293,295,307,317,320,351,353,354,359,360,365,368,371,375,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,829,832,834,862,864,896,921,949,951,969,970,971,984,1004,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'and_test':([0,5,30,41,43,46,65,70,71,77,105,106,118,132,146,148,149,168,183,196,198,199,236,237,253,258,264,265,266,272,274,278,279,290,292,293,295,307,314,317,320,351,353,354,359,360,365,368,371,375,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,315,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,442,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'not_test':([0,5,30,41,43,46,65,70,71,77,85,105,106,118,132,146,148,149,168,183,196,198,199,206,236,237,253,258,264,265,266,272,274,278,279,290,292,293,295,307,314,317,320,325,351,353,354,359,360,365,368,371,375,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[83,83,83,83,83,83,83,83,83,83,207,83,83,83,83,83,83,83,83,83,83,83,83,326,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,453,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'comparison':([0,5,30,41,43,46,65,70,71,77,85,105,106,118,132,146,148,149,168,183,196,198,199,206,236,237,253,258,264,265,266,272,274,278,279,290,292,293,295,307,314,317,320,325,351,353,354,359,360,365,368,371,375,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'xor_expr':([0,5,30,41,43,44,46,54,65,70,71,74,77,85,105,106,118,132,146,148,149,168,183,186,196,198,199,206,209,236,237,248,253,258,260,264,265,266,267,272,274,275,278,279,290,292,293,295,307,309,314,317,320,325,327,351,353,354,359,360,365,368,371,375,377,388,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,328,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,454,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'and_expr':([0,5,30,41,43,44,46,54,65,70,71,74,77,85,105,106,118,132,146,148,149,168,183,186,196,198,199,206,209,211,236,237,248,253,258,260,264,265,266,267,272,274,275,278,279,290,292,293,295,307,309,314,317,320,325,327,329,351,353,354,359,360,365,368,371,375,377,388,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,330,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,455,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'shift_expr':([0,5,30,41,43,44,46,54,65,70,71,74,77,85,105,106,118,132,146,148,149,168,183,186,196,198,199,206,209,211,213,236,237,248,253,258,260,264,265,266,267,272,274,275,278,279,290,292,293,295,307,309,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,388,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,332,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,456,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'arith_expr':([0,5,30,41,43,44,46,54,65,70,71,74,77,85,105,106,118,132,146,148,149,168,183,186,196,198,199,206,209,211,213,216,217,236,237,248,253,258,260,264,265,266,267,272,274,275,278,279,290,292,293,295,307,309,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,388,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,334,335,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'term':([0,5,30,41,43,44,46,54,65,70,71,74,77,85,105,106,118,132,146,148,149,168,183,186,196,198,199,206,209,211,213,216,217,220,221,236,237,248,253,258,260,264,265,266,267,272,274,275,278,279,290,292,293,295,307,309,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,388,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,337,338,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'factor':([0,5,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,105,106,118,132,146,148,149,168,183,186,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,272,274,275,278,279,290,292,293,295,307,309,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,388,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,229,230,231,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,340,341,342,343,344,345,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'power':([0,5,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,105,106,118,132,146,148,149,168,183,186,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,272,274,275,278,279,290,292,293,295,307,309,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,388,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'atom_expr':([0,5,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,105,106,118,132,146,148,149,168,183,186,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,272,274,275,278,279,290,292,293,295,307,309,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,388,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'atom':([0,5,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,97,105,106,118,132,146,148,149,168,183,186,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,272,274,275,278,279,290,292,293,295,307,309,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,388,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,233,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'atom_string_list':([0,5,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,97,105,106,118,132,146,148,149,168,183,186,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,272,274,275,278,279,290,292,293,295,307,309,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,388,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'atom_bytes_list':([0,5,30,41,43,44,46,54,65,70,71,74,77,85,93,94,95,97,105,106,118,132,146,148,149,168,183,186,196,198,199,206,209,211,213,216,217,220,221,224,225,226,227,228,232,236,237,248,253,258,260,264,265,266,267,272,274,275,278,279,290,292,293,295,307,309,314,317,320,325,327,329,331,351,353,354,359,360,365,368,371,375,377,388,392,393,395,398,399,415,422,441,461,464,465,467,469,470,475,477,481,494,495,500,502,504,508,511,519,524,526,546,559,560,566,569,574,585,587,590,591,593,594,595,598,609,624,634,636,638,639,641,656,667,673,682,695,716,717,724,725,726,727,728,743,750,752,753,758,768,782,813,829,832,834,862,864,880,896,921,949,951,969,970,971,984,1004,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'small_stmt_list_list':([15,],[119,]),'testlist_comp':([30,105,],[124,243,]),'exprlist':([44,54,260,377,],[130,163,376,482,]),'with_item':([46,274,],[133,396,]),'annassign':([52,],[145,]),'augassign':([52,],[146,]),'equal_list':([52,285,286,],[147,416,417,]),'testlist_star_expr_list':([67,],[169,]),'testlist':([70,77,146,183,266,],[170,184,282,308,386,]),'dotted_name':([72,73,75,174,304,435,],[173,180,182,297,180,180,]),'import_from_dots':([72,],[174,]),'dotted_as_names':([73,],[178,]),'dotted_as_name':([73,304,435,],[179,436,542,]),'comparison_list':([78,],[185,]),'comp_op':([78,185,],[186,309,]),'or_test_list':([81,],[197,]),'varargslist':([82,736,],[200,814,]),'fpdef':([82,202,203,318,323,445,446,447,450,451,551,552,553,555,556,557,621,623,628,629,630,631,699,700,701,703,705,709,710,736,771,773,774,775,776,778,853,855,856,857,858,860,915,917,918,919,965,],[201,321,324,444,452,547,549,550,452,558,625,627,444,558,632,633,452,558,706,708,550,711,770,558,772,452,558,779,781,201,851,852,558,854,452,558,913,914,558,916,452,558,963,964,558,966,993,]),'and_test_list':([83,],[205,]),'expr_list':([86,],[208,]),'xor_expr_list':([87,],[210,]),'and_expr_list':([88,],[212,]),'shift_list':([89,],[214,]),'shift_op':([89,214,],[215,333,]),'arith_expr_list':([90,],[218,]),'arith_op':([90,218,],[219,336,]),'term_list':([91,],[222,]),'term_op':([91,222,],[223,339,]),'trailer_list':([98,233,],[234,346,]),'trailer':([98,233,234,346,],[235,235,347,347,]),'dictorsetmaker':([106,],[245,]),'dosm_colon':([106,365,475,],[246,473,570,]),'test_or_star_new':([106,],[247,]),'comp_for':([125,246,247,352,573,657,733,830,],[257,364,367,460,654,654,654,898,]),'testlist_comp_list':([125,],[259,]),'template_params':([127,],[262,]),'exprlist_list':([131,],[268,]),'suite':([132,264,265,272,279,395,399,502,504,508,526,585,587,590,591,593,598,609,673,728,750,752,753,834,970,971,1004,],[269,384,385,394,408,512,515,588,589,592,610,672,674,676,677,678,681,696,749,798,833,835,836,900,995,996,1006,]),'with_item_list':([133,396,],[273,513,]),'parameters':([135,874,875,928,],[276,926,927,926,]),'globals_list':([164,165,418,],[287,289,531,]),'testlist_list':([171,],[294,]),'dotted_name_list':([175,],[301,]),'dotted_as_names_list':([179,],[303,]),'varargslist_list':([201,448,],[319,554,]),'kwargslist_list':([202,321,445,547,551,625,628,706,709,779,],[322,449,548,622,626,704,707,777,780,859,]),'arglist':([236,278,307,],[349,406,439,]),'argument':([236,278,307,354,560,638,639,716,],[350,350,350,463,637,715,718,784,]),'arglist_list':([236,278,307,560,639,],[354,354,354,638,716,]),'subscriptlist':([237,],[355,]),'subscript':([237,467,566,],[356,565,640,]),'dosm_colon_list':([246,],[366,]),'dosm_comma_list':([247,],[369,]),'template_paramlist':([263,],[380,]),'template_param':([263,492,578,],[381,579,669,]),'except_clauses':([269,391,],[390,507,]),'except_clause':([269,391,],[391,391,]),'typedargslist':([277,],[400,]),'tfpdef':([277,403,404,517,522,600,601,602,605,606,687,688,689,691,692,693,755,757,762,763,764,765,837,838,839,841,843,847,848,902,904,905,906,907,909,955,957,958,959,960,962,988,990,991,992,1002,],[402,520,523,599,607,683,685,686,607,694,759,761,599,694,766,767,607,694,844,846,686,849,901,694,903,607,694,910,912,953,954,694,956,607,694,986,987,694,989,607,694,1000,1001,694,1003,1005,]),'pragma_args':([281,529,],[411,612,]),'pragma_arg':([281,529,],[412,412,]),'import_as_names':([296,298,426,429,432,539,],[425,431,533,538,540,617,]),'import_as_name':([296,298,426,429,432,534,539,615,],[427,427,427,427,427,614,427,697,]),'subscriptlist_list':([356,],[468,]),'template_suite':([378,],[483,]),'template_simple_item':([378,575,658,740,815,],[484,661,661,661,661,]),'template_doc_suite':([378,],[485,]),'const_expr':([378,575,658,740,815,],[487,487,487,487,487,]),'template_paramlist_list':([381,],[491,]),'elif_stmts':([384,498,],[496,584,]),'else_stmt':([384,496,],[497,583,]),'elif_stmt':([384,498,],[498,498,]),'stmt_list':([393,511,],[510,597,]),'typedargslist_list':([402,603,],[518,690,]),'typedkwargslist_list':([403,520,600,683,687,759,762,844,847,910,],[521,604,684,756,760,842,845,908,911,961,]),'import_as_names_list':([427,],[535,]),'enamldef_suite':([572,721,],[644,791,]),'enamldef_simple_item':([572,721,730,800,873,925,],[645,792,803,803,803,803,]),'binding':([572,721,730,741,800,873,882,883,925,934,],[647,647,647,820,647,647,820,820,647,820,]),'ex_binding':([572,721,730,741,800,873,882,883,925,934,],[648,648,648,821,648,648,821,821,648,821,]),'alias_expr':([572,721,730,741,800,873,882,883,925,934,],[649,649,649,822,649,649,822,822,649,822,]),'storage_expr':([572,721,730,741,800,873,882,883,925,934,],[650,650,650,823,650,650,823,823,650,823,]),'comp_iter':([573,657,733,],[653,737,812,]),'comp_if':([573,657,733,],[655,655,655,]),'template_suite_items':([575,740,],[658,815,]),'template_suite_item':([575,658,740,815,],[660,739,660,739,]),'child_def':([575,658,730,740,800,815,873,883,925,934,],[662,662,806,662,806,662,806,939,806,939,]),'template_inst':([575,658,730,740,800,815,873,883,925,934,],[663,663,807,663,807,663,807,940,807,940,]),'template_inst_impl':([575,658,666,730,740,800,815,873,883,925,934,],[665,665,744,665,665,665,665,665,665,665,665,]),'operator_expr':([643,720,723,790,808,816,865,874,941,],[722,789,793,722,722,722,924,789,975,]),'ex_dotted_names':([643,790,799,808,816,878,885,976,],[723,723,870,723,723,930,941,941,]),'old_test':([656,813,880,],[733,879,931,]),'old_lambdef':([656,813,880,],[735,735,735,]),'template_args':([664,745,808,],[742,742,742,]),'enamldef_suite_items':([730,873,],[800,925,]),'enamldef_suite_item':([730,800,873,925,],[802,872,802,872,]),'decl_funcdef':([730,800,809,873,883,925,934,],[804,804,876,804,937,804,937,]),'async_decl_funcdef':([730,800,873,883,925,934,],[805,805,805,938,805,938,]),'child_def_suite':([741,882,],[817,932,]),'child_def_simple_item':([741,882,883,934,],[818,933,936,936,]),'template_arglist':([743,],[827,]),'template_argument':([743,896,949,],[828,950,983,]),'template_inst_suite_item':([825,943,945,979,],[886,977,980,998,]),'template_ids':([825,],[887,]),'template_inst_suite':([825,943,],[888,978,]),'template_inst_binding':([825,943,945,979,],[889,889,889,889,]),'template_id_list':([825,],[892,]),'template_arglist_list':([828,],[895,]),'child_def_suite_items':([883,],[934,]),'child_def_suite_item':([883,934,],[935,974,]),'template_inst_suite_items':([945,],[979,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> enaml","S'",1,None,None,None),
  ('atom -> NONE','atom',1,'p_atom13','parser34.py',23),
  ('atom -> FALSE','atom',1,'p_atom14','parser34.py',27),
  ('comp_for -> FOR exprlist IN or_test','comp_for',4,'p_comp_for1','parser36.py',30),
  ('atom -> TRUE','atom',1,'p_atom15','parser34.py',31),
  ('comp_for -> FOR exprlist IN or_test comp_iter','comp_for',5,'p_comp_for2','parser36.py',35),
  ('comp_for -> ASYNC FOR exprlist IN or_test','comp_for',5,'p_comp_async_for1','parser36.py',41),
  ('decl_funcdef -> NAME NAME parameters RETURNARROW test COLON suite','decl_funcdef',7,'p_decl_funcdef3','parser3.py',44),
  ('comp_for -> ASYNC FOR exprlist IN or_test comp_iter','comp_for',6,'p_comp_async_for2','parser36.py',48),
  ('expr_stmt -> testlist_star_expr annassign','expr_stmt',2,'p_expr_stmt4','parser36.py',62),
  ('small_stmt -> expr_stmt','small_stmt',1,'p_small_stmt1','parser3.py',64),
  ('small_stmt -> del_stmt','small_stmt',1,'p_small_stmt1','parser3.py',65),
  ('small_stmt -> pass_stmt','small_stmt',1,'p_small_stmt1','parser3.py',66),
  ('small_stmt -> flow_stmt','small_stmt',1,'p_small_stmt1','parser3.py',67),
  ('small_stmt -> import_stmt','small_stmt',1,'p_small_stmt1','parser3.py',68),
  ('small_stmt -> global_stmt','small_stmt',1,'p_small_stmt1','parser3.py',69),
  ('small_stmt -> assert_stmt','small_stmt',1,'p_small_stmt1','parser3.py',70),
  ('small_stmt -> nonlocal_stmt','small_stmt',1,'p_small_stmt1','parser3.py',71),
  ('test_or_star_new -> star_expr','test_or_star_new',1,'p_test_or_star_new2','parser35.py',70),
  ('augassign -> AMPEREQUAL','augassign',1,'p_augassign','parser35.py',74),
  ('augassign -> CIRCUMFLEXEQUAL','augassign',1,'p_augassign','parser35.py',75),
  ('augassign -> DOUBLESLASHEQUAL','augassign',1,'p_augassign','parser35.py',76),
  ('augassign -> DOUBLESTAREQUAL','augassign',1,'p_augassign','parser35.py',77),
  ('augassign -> LEFTSHIFTEQUAL','augassign',1,'p_augassign','parser35.py',78),
  ('augassign -> MINUSEQUAL','augassign',1,'p_augassign','parser35.py',79),
  ('augassign -> PERCENTEQUAL','augassign',1,'p_augassign','parser35.py',80),
  ('augassign -> PLUSEQUAL','augassign',1,'p_augassign','parser35.py',81),
  ('augassign -> RIGHTSHIFTEQUAL','augassign',1,'p_augassign','parser35.py',82),
  ('augassign -> SLASHEQUAL','augassign',1,'p_augassign','parser35.py',83),
  ('augassign -> STAREQUAL','augassign',1,'p_augassign','parser35.py',84),
  ('augassign -> VBAREQUAL','augassign',1,'p_augassign','parser35.py',85),
  ('augassign -> ATEQUAL','augassign',1,'p_augassign','parser35.py',86),
  ('nonlocal_stmt -> NONLOCAL NAME','nonlocal_stmt',2,'p_nonlocal_stmt1','parser3.py',75),
  ('global_stmt -> NONLOCAL NAME globals_list','global_stmt',3,'p_nonlocal_stmt2','parser3.py',82),
  ('annassign -> COLON test','annassign',2,'p_annassign1','parser36.py',85),
  ('raise_stmt -> RAISE test FROM test','raise_stmt',4,'p_raise_stmt3','parser3.py',89),
  ('annassign -> COLON test EQUAL test','annassign',4,'p_annassign','parser36.py',89),
  ('term_op -> AT factor','term_op',2,'p_term_op5','parser35.py',90),
  ('dosm_colon -> DOUBLESTAR expr','dosm_colon',2,'p_dosm_colon','parser35.py',94),
  ('test_or_star -> star_expr','test_or_star',1,'p_test_or_star2','parser3.py',97),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','parser35.py',98),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','parser35.py',99),
  ('compound_stmt -> for_stmt','compound_stmt',1,'p_compound_stmt','parser35.py',100),
  ('compound_stmt -> try_stmt','compound_stmt',1,'p_compound_stmt','parser35.py',101),
  ('compound_stmt -> with_stmt','compound_stmt',1,'p_compound_stmt','parser35.py',102),
  ('compound_stmt -> funcdef','compound_stmt',1,'p_compound_stmt','parser35.py',103),
  ('compound_stmt -> classdef','compound_stmt',1,'p_compound_stmt','parser35.py',104),
  ('compound_stmt -> decorated','compound_stmt',1,'p_compound_stmt','parser35.py',105),
  ('compound_stmt -> async_funcdef','compound_stmt',1,'p_compound_stmt','parser35.py',106),
  ('compound_stmt -> async_for_stmt','compound_stmt',1,'p_compound_stmt','parser35.py',107),
  ('compound_stmt -> async_with_stmt','compound_stmt',1,'p_compound_stmt','parser35.py',108),
  ('atom -> atom_string_list','atom',1,'p_atom10','parser36.py',98),
  ('star_expr -> STAR expr','star_expr',2,'p_star_expr','parser3.py',101),
  ('atom_string_list -> STRING','atom_string_list',1,'p_atom_string_list1','parser36.py',103),
  ('yield_expr -> YIELD FROM testlist','yield_expr',3,'p_yield_expr3','parser3.py',106),
  ('atom_string_list -> atom_string_list STRING','atom_string_list',2,'p_atom_string_list2','parser36.py',107),
  ('funcdef -> DEF NAME parameters RETURNARROW test COLON suite','funcdef',7,'p_funcdef2','parser3.py',111),
  ('atom_string_list -> FSTRING','atom_string_list',1,'p_atom_string_list3','parser36.py',111),
  ('decorated -> decorators funcdef','decorated',2,'p_decorated','parser35.py',112),
  ('decorated -> decorators classdef','decorated',2,'p_decorated','parser35.py',113),
  ('decorated -> decorators async_funcdef','decorated',2,'p_decorated','parser35.py',114),
  ('atom_string_list -> atom_string_list FSTRING','atom_string_list',2,'p_atom_string_list4','parser36.py',115),
  ('async_funcdef -> ASYNC funcdef','async_funcdef',2,'p_async_funcdef1','parser35.py',121),
  ('parameters -> LPAR typedargslist RPAR','parameters',3,'p_parameters2','parser3.py',123),
  ('classdef -> CLASS NAME LPAR arglist RPAR COLON suite','classdef',7,'p_classdef3','parser3.py',127),
  ('async_for_stmt -> ASYNC for_stmt','async_for_stmt',2,'p_async_for_stmt','parser35.py',129),
  ('async_with_stmt -> ASYNC with_stmt','async_with_stmt',2,'p_async_with_stmt','parser35.py',137),
  ('atom -> ELLIPSIS','atom',1,'p_atom11','parser3.py',144),
  ('atom_expr -> AWAIT atom','atom_expr',2,'p_atom_expr3','parser35.py',145),
  ('atom -> atom_bytes_list','atom',1,'p_atom12','parser3.py',148),
  ('atom_expr -> AWAIT atom trailer_list','atom_expr',3,'p_atom_expr4','parser35.py',149),
  ('atom_bytes_list -> BYTES','atom_bytes_list',1,'p_atom_bytes_list1','parser3.py',153),
  ('atom_bytes_list -> atom_bytes_list BYTES','atom_bytes_list',2,'p_atom_bytes_list2','parser3.py',157),
  ('enamldef_suite_item -> enamldef_simple_item','enamldef_suite_item',1,'p_enamldef_suite_item','parser35.py',164),
  ('enamldef_suite_item -> decl_funcdef','enamldef_suite_item',1,'p_enamldef_suite_item','parser35.py',165),
  ('enamldef_suite_item -> async_decl_funcdef','enamldef_suite_item',1,'p_enamldef_suite_item','parser35.py',166),
  ('enamldef_suite_item -> child_def','enamldef_suite_item',1,'p_enamldef_suite_item','parser35.py',167),
  ('enamldef_suite_item -> template_inst','enamldef_suite_item',1,'p_enamldef_suite_item','parser35.py',168),
  ('child_def_suite_item -> child_def_simple_item','child_def_suite_item',1,'p_child_def_suite_item','parser35.py',172),
  ('child_def_suite_item -> decl_funcdef','child_def_suite_item',1,'p_child_def_suite_item','parser35.py',173),
  ('child_def_suite_item -> async_decl_funcdef','child_def_suite_item',1,'p_child_def_suite_item','parser35.py',174),
  ('child_def_suite_item -> child_def','child_def_suite_item',1,'p_child_def_suite_item','parser35.py',175),
  ('child_def_suite_item -> template_inst','child_def_suite_item',1,'p_child_def_suite_item','parser35.py',176),
  ('typedargslist -> tfpdef COMMA STAR tfpdef typedkwargslist_list','typedargslist',5,'p_typedargslist24','parser3.py',177),
  ('varargslist -> fpdef COMMA STAR fpdef kwargslist_list','varargslist',5,'p_varargslist24','parser3.py',177),
  ('async_decl_funcdef -> ASYNC decl_funcdef','async_decl_funcdef',2,'p_async_decl_funcdef','parser35.py',180),
  ('typedargslist -> tfpdef COMMA STAR typedkwargslist_list','typedargslist',4,'p_typedargslist25','parser3.py',184),
  ('varargslist -> fpdef COMMA STAR kwargslist_list','varargslist',4,'p_varargslist25','parser3.py',184),
  ('typedargslist -> tfpdef COMMA STAR tfpdef typedkwargslist_list COMMA DOUBLESTAR tfpdef','typedargslist',8,'p_typedargslist26','parser3.py',191),
  ('varargslist -> fpdef COMMA STAR fpdef kwargslist_list COMMA DOUBLESTAR fpdef','varargslist',8,'p_varargslist26','parser3.py',191),
  ('typedargslist -> tfpdef COMMA STAR typedkwargslist_list COMMA DOUBLESTAR tfpdef','typedargslist',7,'p_typedargslist27','parser3.py',198),
  ('varargslist -> fpdef COMMA STAR kwargslist_list COMMA DOUBLESTAR fpdef','varargslist',7,'p_varargslist27','parser3.py',198),
  ('typedargslist -> tfpdef typedargslist_list COMMA STAR tfpdef typedkwargslist_list','typedargslist',6,'p_typedargslist28','parser3.py',205),
  ('varargslist -> fpdef varargslist_list COMMA STAR fpdef kwargslist_list','varargslist',6,'p_varargslist28','parser3.py',205),
  ('typedargslist -> tfpdef typedargslist_list COMMA STAR typedkwargslist_list','typedargslist',5,'p_typedargslist29','parser3.py',214),
  ('varargslist -> fpdef varargslist_list COMMA STAR kwargslist_list','varargslist',5,'p_varargslist29','parser3.py',214),
  ('typedargslist -> tfpdef typedargslist_list COMMA STAR tfpdef typedkwargslist_list COMMA DOUBLESTAR tfpdef','typedargslist',9,'p_typedargslist30','parser3.py',223),
  ('varargslist -> fpdef varargslist_list COMMA STAR fpdef kwargslist_list COMMA DOUBLESTAR fpdef','varargslist',9,'p_varargslist30','parser3.py',223),
  ('typedargslist -> tfpdef typedargslist_list COMMA STAR typedkwargslist_list COMMA DOUBLESTAR tfpdef','typedargslist',8,'p_typedargslist31','parser3.py',233),
  ('varargslist -> fpdef varargslist_list COMMA STAR kwargslist_list COMMA DOUBLESTAR fpdef','varargslist',8,'p_varargslist31','parser3.py',233),
  ('typedargslist -> tfpdef EQUAL test COMMA STAR tfpdef typedkwargslist_list','typedargslist',7,'p_typedargslist32','parser3.py',243),
  ('varargslist -> fpdef EQUAL test COMMA STAR fpdef kwargslist_list','varargslist',7,'p_varargslist32','parser3.py',243),
  ('typedargslist -> tfpdef EQUAL test COMMA STAR typedkwargslist_list','typedargslist',6,'p_typedargslist33','parser3.py',250),
  ('varargslist -> fpdef EQUAL test COMMA STAR kwargslist_list','varargslist',6,'p_varargslist33','parser3.py',250),
  ('typedargslist -> tfpdef EQUAL test COMMA STAR tfpdef typedkwargslist_list COMMA DOUBLESTAR tfpdef','typedargslist',10,'p_typedargslist34','parser3.py',257),
  ('varargslist -> fpdef EQUAL test COMMA STAR fpdef kwargslist_list COMMA DOUBLESTAR fpdef','varargslist',10,'p_varargslist34','parser3.py',257),
  ('typedargslist -> tfpdef EQUAL test COMMA STAR typedkwargslist_list COMMA DOUBLESTAR tfpdef','typedargslist',9,'p_typedargslist35','parser3.py',265),
  ('varargslist -> fpdef EQUAL test COMMA STAR kwargslist_list COMMA DOUBLESTAR fpdef','varargslist',9,'p_varargslist35','parser3.py',265),
  ('enaml -> enaml_module NEWLINE ENDMARKER','enaml',3,'p_enaml1','base_parser.py',269),
  ('enaml -> enaml_module ENDMARKER','enaml',2,'p_enaml1','base_parser.py',270),
  ('typedargslist -> tfpdef EQUAL test typedargslist_list COMMA STAR tfpdef typedkwargslist_list','typedargslist',8,'p_typedargslist36','parser3.py',273),
  ('varargslist -> fpdef EQUAL test varargslist_list COMMA STAR fpdef kwargslist_list','varargslist',8,'p_varargslist36','parser3.py',273),
  ('enaml -> NEWLINE ENDMARKER','enaml',2,'p_enaml2','base_parser.py',274),
  ('enaml -> ENDMARKER','enaml',1,'p_enaml2','base_parser.py',275),
  ('enaml_module -> enaml_module_body','enaml_module',1,'p_enaml_module','base_parser.py',279),
  ('typedargslist -> tfpdef EQUAL test typedargslist_list COMMA STAR typedkwargslist_list','typedargslist',7,'p_typedargslist37','parser3.py',287),
  ('varargslist -> fpdef EQUAL test varargslist_list COMMA STAR kwargslist_list','varargslist',7,'p_varargslist37','parser3.py',287),
  ('enaml_module_body -> enaml_module_body enaml_module_item','enaml_module_body',2,'p_enaml_module_body1','base_parser.py',300),
  ('typedargslist -> tfpdef EQUAL test typedargslist_list COMMA STAR tfpdef typedkwargslist_list COMMA DOUBLESTAR tfpdef','typedargslist',11,'p_typedargslist38','parser3.py',301),
  ('varargslist -> fpdef EQUAL test varargslist_list COMMA STAR fpdef kwargslist_list COMMA DOUBLESTAR fpdef','varargslist',11,'p_varargslist38','parser3.py',301),
  ('enaml_module_body -> enaml_module_item','enaml_module_body',1,'p_enaml_module_body2','base_parser.py',307),
  ('enaml_module_item -> stmt','enaml_module_item',1,'p_enaml_module_item','base_parser.py',314),
  ('enaml_module_item -> enamldef','enaml_module_item',1,'p_enaml_module_item','base_parser.py',315),
  ('enaml_module_item -> template','enaml_module_item',1,'p_enaml_module_item','base_parser.py',316),
  ('typedargslist -> tfpdef EQUAL test typedargslist_list COMMA STAR typedkwargslist_list COMMA DOUBLESTAR tfpdef','typedargslist',10,'p_typedargslist39','parser3.py',316),
  ('varargslist -> fpdef EQUAL test varargslist_list COMMA STAR kwargslist_list COMMA DOUBLESTAR fpdef','varargslist',10,'p_varargslist39','parser3.py',316),
  ('typedargslist -> STAR tfpdef typedkwargslist_list','typedargslist',3,'p_typedargslist40','parser3.py',331),
  ('varargslist -> STAR fpdef kwargslist_list','varargslist',3,'p_varargslist40','parser3.py',331),
  ('typedargslist -> STAR typedkwargslist_list','typedargslist',2,'p_typedargslist41','parser3.py',338),
  ('varargslist -> STAR kwargslist_list','varargslist',2,'p_varargslist41','parser3.py',338),
  ('typedargslist -> STAR tfpdef typedkwargslist_list COMMA DOUBLESTAR tfpdef','typedargslist',6,'p_typedargslist42','parser3.py',345),
  ('varargslist -> STAR fpdef kwargslist_list COMMA DOUBLESTAR fpdef','varargslist',6,'p_varargslist42','parser3.py',345),
  ('typedargslist -> STAR typedkwargslist_list COMMA DOUBLESTAR tfpdef','typedargslist',5,'p_typedargslist43','parser3.py',352),
  ('varargslist -> STAR kwargslist_list COMMA DOUBLESTAR fpdef','varargslist',5,'p_varargslist43','parser3.py',352),
  ('enamldef -> enamldef_impl','enamldef',1,'p_enamldef1','base_parser.py',356),
  ('enamldef -> pragmas enamldef_impl','enamldef',2,'p_enamldef2','base_parser.py',360),
  ('kwargslist_list -> COMMA fpdef','kwargslist_list',2,'p_kwargslist_list1','parser3.py',360),
  ('typedkwargslist_list -> COMMA tfpdef','typedkwargslist_list',2,'p_typedkwargslist_list1','parser3.py',360),
  ('kwargslist_list -> COMMA fpdef EQUAL test','kwargslist_list',4,'p_kwargslist_list2','parser3.py',364),
  ('typedkwargslist_list -> COMMA tfpdef EQUAL test','typedkwargslist_list',4,'p_typedkwargslist_list2','parser3.py',364),
  ('enamldef_impl -> ENAMLDEF NAME LPAR NAME RPAR COLON enamldef_suite','enamldef_impl',7,'p_enamldef_impl1','base_parser.py',366),
  ('kwargslist_list -> kwargslist_list COMMA fpdef','kwargslist_list',3,'p_kwargslist_list3','parser3.py',368),
  ('typedkwargslist_list -> typedkwargslist_list COMMA tfpdef','typedkwargslist_list',3,'p_typedkwargslist_list3','parser3.py',368),
  ('kwargslist_list -> kwargslist_list COMMA fpdef EQUAL test','kwargslist_list',5,'p_kwargslist_list4','parser3.py',375),
  ('typedkwargslist_list -> typedkwargslist_list COMMA tfpdef EQUAL test','typedkwargslist_list',5,'p_typedkwargslist_list4','parser3.py',375),
  ('enamldef_impl -> ENAMLDEF NAME LPAR NAME RPAR COLON enamldef_simple_item','enamldef_impl',7,'p_enamldef_impl2','base_parser.py',376),
  ('fpdef -> NAME','fpdef',1,'p_fpdef','parser3.py',382),
  ('enamldef_impl -> ENAMLDEF NAME LPAR NAME RPAR COLON NAME COLON enamldef_suite','enamldef_impl',9,'p_enamldef_impl3','base_parser.py',385),
  ('tfpdef -> NAME','tfpdef',1,'p_tfpdef1','parser3.py',386),
  ('tfpdef -> NAME COLON test','tfpdef',3,'p_tfpdef2','parser3.py',390),
  ('enamldef_impl -> ENAMLDEF NAME LPAR NAME RPAR COLON NAME COLON enamldef_simple_item','enamldef_impl',9,'p_enamldef_impl4','base_parser.py',395),
  ('enamldef_suite -> NEWLINE INDENT enamldef_suite_items DEDENT','enamldef_suite',4,'p_enamldef_suite1','base_parser.py',405),
  ('enamldef_suite -> NEWLINE INDENT STRING NEWLINE enamldef_suite_items DEDENT','enamldef_suite',6,'p_enamldef_suite2','base_parser.py',411),
  ('enamldef_suite_items -> enamldef_suite_item','enamldef_suite_items',1,'p_enamldef_suite_items1','base_parser.py',417),
  ('enamldef_suite_items -> enamldef_suite_items enamldef_suite_item','enamldef_suite_items',2,'p_enamldef_suite_items2','base_parser.py',421),
  ('enamldef_simple_item -> binding','enamldef_simple_item',1,'p_enamldef_simple_item1','base_parser.py',432),
  ('enamldef_simple_item -> ex_binding','enamldef_simple_item',1,'p_enamldef_simple_item1','base_parser.py',433),
  ('enamldef_simple_item -> alias_expr','enamldef_simple_item',1,'p_enamldef_simple_item1','base_parser.py',434),
  ('enamldef_simple_item -> storage_expr','enamldef_simple_item',1,'p_enamldef_simple_item1','base_parser.py',435),
  ('enamldef_simple_item -> PASS NEWLINE','enamldef_simple_item',2,'p_enamldef_simple_item2','base_parser.py',439),
  ('pragmas -> pragma pragmas','pragmas',2,'p_pragmas1','base_parser.py',446),
  ('pragmas -> pragma','pragmas',1,'p_pragmas2','base_parser.py',450),
  ('pragma -> PRAGMA NAME NEWLINE','pragma',3,'p_pragma1','base_parser.py',454),
  ('pragma -> PRAGMA NAME LPAR RPAR NEWLINE','pragma',5,'p_pragma1','base_parser.py',455),
  ('pragma -> PRAGMA NAME LPAR pragma_args RPAR NEWLINE','pragma',6,'p_pragma2','base_parser.py',462),
  ('pragma_args -> pragma_arg COMMA pragma_args','pragma_args',3,'p_pragma_args1','base_parser.py',470),
  ('pragma_args -> pragma_arg','pragma_args',1,'p_pragma_args2','base_parser.py',474),
  ('pragma_arg -> NAME','pragma_arg',1,'p_pragma_arg','base_parser.py',478),
  ('pragma_arg -> NUMBER','pragma_arg',1,'p_pragma_arg2','base_parser.py',482),
  ('pragma_arg -> STRING','pragma_arg',1,'p_pragma_arg3','base_parser.py',486),
  ('alias_expr -> ALIAS NAME NEWLINE','alias_expr',3,'p_alias_expr1','base_parser.py',493),
  ('alias_expr -> ALIAS NAME COLON NAME NEWLINE','alias_expr',5,'p_alias_expr2','base_parser.py',501),
  ('alias_expr -> ALIAS NAME COLON NAME ex_dotted_names NEWLINE','alias_expr',6,'p_alias_expr3','base_parser.py',509),
  ('const_expr -> CONST NAME EQUAL test NEWLINE','const_expr',5,'p_const_expr1','base_parser.py',521),
  ('const_expr -> CONST NAME COLON NAME EQUAL test NEWLINE','const_expr',7,'p_const_expr2','base_parser.py',535),
  ('storage_expr -> NAME NAME NEWLINE','storage_expr',3,'p_storage_expr1','base_parser.py',557),
  ('storage_expr -> NAME NAME COLON NAME NEWLINE','storage_expr',5,'p_storage_expr2','base_parser.py',568),
  ('storage_expr -> NAME NAME operator_expr','storage_expr',3,'p_storage_expr3','base_parser.py',580),
  ('storage_expr -> NAME NAME COLON NAME operator_expr','storage_expr',5,'p_storage_expr4','base_parser.py',592),
  ('child_def -> NAME COLON child_def_suite','child_def',3,'p_child_def1','base_parser.py',608),
  ('child_def -> NAME COLON child_def_simple_item','child_def',3,'p_child_def2','base_parser.py',615),
  ('child_def -> NAME COLON NAME COLON child_def_suite','child_def',5,'p_child_def3','base_parser.py',620),
  ('child_def -> NAME COLON NAME COLON child_def_simple_item','child_def',5,'p_child_def4','base_parser.py',627),
  ('child_def_suite -> NEWLINE INDENT child_def_suite_items DEDENT','child_def_suite',4,'p_child_def_suite','base_parser.py',635),
  ('child_def_suite_items -> child_def_suite_item','child_def_suite_items',1,'p_child_def_suite_items1','base_parser.py',641),
  ('child_def_suite_items -> child_def_suite_items child_def_suite_item','child_def_suite_items',2,'p_child_def_suite_items2','base_parser.py',645),
  ('child_def_simple_item -> binding','child_def_simple_item',1,'p_child_def_simple_item1','base_parser.py',656),
  ('child_def_simple_item -> ex_binding','child_def_simple_item',1,'p_child_def_simple_item1','base_parser.py',657),
  ('child_def_simple_item -> alias_expr','child_def_simple_item',1,'p_child_def_simple_item1','base_parser.py',658),
  ('child_def_simple_item -> storage_expr','child_def_simple_item',1,'p_child_def_simple_item1','base_parser.py',659),
  ('child_def_simple_item -> PASS NEWLINE','child_def_simple_item',2,'p_child_def_simple_item2','base_parser.py',663),
  ('binding -> NAME operator_expr','binding',2,'p_binding','base_parser.py',670),
  ('ex_binding -> NAME ex_dotted_names operator_expr','ex_binding',3,'p_ex_binding','base_parser.py',677),
  ('ex_dotted_names -> DOT NAME','ex_dotted_names',2,'p_ex_dotted_names1','base_parser.py',685),
  ('ex_dotted_names -> DOT NAME ex_dotted_names','ex_dotted_names',3,'p_ex_dotted_names2','base_parser.py',689),
  ('operator_expr -> EQUAL test NEWLINE','operator_expr',3,'p_operator_expr1','base_parser.py',696),
  ('operator_expr -> LEFTSHIFT test NEWLINE','operator_expr',3,'p_operator_expr1','base_parser.py',697),
  ('operator_expr -> COLONEQUAL test NEWLINE','operator_expr',3,'p_operator_expr2','base_parser.py',711),
  ('operator_expr -> RIGHTSHIFT test NEWLINE','operator_expr',3,'p_operator_expr2','base_parser.py',712),
  ('operator_expr -> DOUBLECOLON suite','operator_expr',2,'p_operator_expr3','base_parser.py',734),
  ('decl_funcdef -> NAME NAME parameters COLON suite','decl_funcdef',5,'p_decl_funcdef1','base_parser.py',780),
  ('decl_funcdef -> NAME RIGHTARROW parameters COLON suite','decl_funcdef',5,'p_decl_funcdef2','base_parser.py',801),
  ('template -> template_impl','template',1,'p_template1','base_parser.py',889),
  ('template -> pragmas template_impl','template',2,'p_template2','base_parser.py',893),
  ('template_impl -> TEMPLATE NAME template_params COLON template_suite','template_impl',5,'p_template_impl1','base_parser.py',899),
  ('template_impl -> TEMPLATE NAME template_params COLON template_simple_item','template_impl',5,'p_template_impl2','base_parser.py',909),
  ('template_impl -> TEMPLATE NAME template_params COLON template_doc_suite','template_impl',5,'p_template_impl3','base_parser.py',919),
  ('template_suite -> NEWLINE INDENT template_suite_items DEDENT','template_suite',4,'p_template_suite','base_parser.py',931),
  ('template_doc_suite -> NEWLINE INDENT STRING NEWLINE template_suite_items DEDENT','template_doc_suite',6,'p_template_doc_suite','base_parser.py',936),
  ('template_suite_items -> template_suite_item','template_suite_items',1,'p_template_suite_items1','base_parser.py',941),
  ('template_suite_items -> template_suite_items template_suite_item','template_suite_items',2,'p_template_suite_items2','base_parser.py',945),
  ('template_suite_item -> template_simple_item','template_suite_item',1,'p_template_suite_item','base_parser.py',949),
  ('template_suite_item -> child_def','template_suite_item',1,'p_template_suite_item','base_parser.py',950),
  ('template_suite_item -> template_inst','template_suite_item',1,'p_template_suite_item','base_parser.py',951),
  ('template_simple_item -> const_expr','template_simple_item',1,'p_template_simple_item1','base_parser.py',955),
  ('template_simple_item -> PASS NEWLINE','template_simple_item',2,'p_template_simple_item2','base_parser.py',959),
  ('template_params -> LPAR RPAR','template_params',2,'p_template_params1','base_parser.py',963),
  ('template_params -> LPAR template_paramlist RPAR','template_params',3,'p_template_params2','base_parser.py',987),
  ('template_paramlist -> template_param','template_paramlist',1,'p_template_paramlist1','base_parser.py',998),
  ('template_paramlist -> STAR NAME','template_paramlist',2,'p_template_paramlist2','base_parser.py',1002),
  ('template_paramlist -> template_param template_paramlist_list','template_paramlist',2,'p_template_paramlist3','base_parser.py',1006),
  ('template_paramlist -> template_param COMMA STAR NAME','template_paramlist',4,'p_template_paramlist4','base_parser.py',1010),
  ('template_paramlist -> template_param template_paramlist_list COMMA STAR NAME','template_paramlist',5,'p_template_paramlist5','base_parser.py',1014),
  ('template_paramlist_list -> COMMA template_param','template_paramlist_list',2,'p_template_paramlist_list1','base_parser.py',1018),
  ('template_paramlist_list -> template_paramlist_list COMMA template_param','template_paramlist_list',3,'p_template_paramlist_list2','base_parser.py',1022),
  ('template_param -> NAME','template_param',1,'p_template_param1','base_parser.py',1026),
  ('template_param -> NAME COLON test','template_param',3,'p_template_param2','base_parser.py',1033),
  ('template_param -> NAME EQUAL test','template_param',3,'p_template_param3','base_parser.py',1047),
  ('template_inst -> template_inst_impl','template_inst',1,'p_template_inst1','base_parser.py',1080),
  ('template_inst -> pragmas template_inst_impl','template_inst',2,'p_template_inst2','base_parser.py',1084),
  ('template_inst_impl -> NAME template_args COLON template_inst_suite_item','template_inst_impl',4,'p_template_inst_impl1','base_parser.py',1090),
  ('template_inst_impl -> NAME template_args COLON template_ids COLON template_inst_suite_item','template_inst_impl',6,'p_template_inst_impl2','base_parser.py',1100),
  ('template_inst_impl -> NAME template_args COLON template_inst_suite','template_inst_impl',4,'p_template_inst_impl3','base_parser.py',1111),
  ('template_inst_impl -> NAME template_args COLON template_ids COLON template_inst_suite','template_inst_impl',6,'p_template_inst_impl4','base_parser.py',1121),
  ('template_args -> LPAR RPAR','template_args',2,'p_template_args1','base_parser.py',1132),
  ('template_args -> LPAR template_arglist RPAR','template_args',3,'p_template_args2','base_parser.py',1148),
  ('template_arglist -> template_argument','template_arglist',1,'p_template_arglist1','base_parser.py',1158),
  ('template_arglist -> STAR test','template_arglist',2,'p_template_arglist2','base_parser.py',1162),
  ('template_arglist -> template_argument template_arglist_list','template_arglist',2,'p_template_arglist3','base_parser.py',1172),
  ('template_arglist -> template_argument COMMA STAR test','template_arglist',4,'p_template_arglist4','base_parser.py',1176),
  ('template_arglist -> template_argument template_arglist_list COMMA STAR test','template_arglist',5,'p_template_arglist5','base_parser.py',1186),
  ('template_arglist_list -> COMMA template_argument','template_arglist_list',2,'p_template_arglist_list1','base_parser.py',1196),
  ('template_arglist_list -> template_arglist_list COMMA template_argument','template_arglist_list',3,'p_template_arglist_list2','base_parser.py',1203),
  ('template_argument -> test','template_argument',1,'p_template_argument1','base_parser.py',1210),
  ('template_argument -> test comp_for','template_argument',2,'p_template_argument2','base_parser.py',1216),
  ('template_ids -> NAME','template_ids',1,'p_template_ids1','base_parser.py',1222),
  ('template_ids -> template_id_list NAME','template_ids',2,'p_template_ids2','base_parser.py',1229),
  ('template_ids -> STAR NAME','template_ids',2,'p_template_ids3','base_parser.py',1236),
  ('template_ids -> template_id_list STAR NAME','template_ids',3,'p_template_ids4','base_parser.py',1243),
  ('template_id_list -> NAME COMMA','template_id_list',2,'p_template_id_list1','base_parser.py',1251),
  ('template_id_list -> template_id_list NAME COMMA','template_id_list',3,'p_template_id_list2','base_parser.py',1255),
  ('template_inst_suite -> NEWLINE INDENT template_inst_suite_items DEDENT','template_inst_suite',4,'p_template_inst_suite','base_parser.py',1259),
  ('template_inst_suite_items -> template_inst_suite_items template_inst_suite_item','template_inst_suite_items',2,'p_template_inst_suite_items1','base_parser.py',1263),
  ('template_inst_suite_items -> template_inst_suite_item','template_inst_suite_items',1,'p_template_inst_suite_items2','base_parser.py',1267),
  ('template_inst_suite_item -> template_inst_binding','template_inst_suite_item',1,'p_template_inst_suite_item1','base_parser.py',1271),
  ('template_inst_suite_item -> PASS NEWLINE','template_inst_suite_item',2,'p_template_inst_suite_item2','base_parser.py',1275),
  ('template_inst_binding -> NAME ex_dotted_names operator_expr','template_inst_binding',3,'p_template_inst_binding','base_parser.py',1279),
  ('suite -> simple_stmt','suite',1,'p_suite1','base_parser.py',1291),
  ('suite -> NEWLINE INDENT stmt_list DEDENT','suite',4,'p_suite2','base_parser.py',1302),
  ('stmt_list -> stmt stmt_list','stmt_list',2,'p_stmt_list1','base_parser.py',1306),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list2','base_parser.py',1317),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','base_parser.py',1328),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','base_parser.py',1329),
  ('simple_stmt -> small_stmt NEWLINE','simple_stmt',2,'p_simple_stmt1','base_parser.py',1333),
  ('simple_stmt -> small_stmt_list NEWLINE','simple_stmt',2,'p_simple_stmt2','base_parser.py',1340),
  ('small_stmt_list -> small_stmt SEMI','small_stmt_list',2,'p_small_stmt_list1','base_parser.py',1349),
  ('small_stmt_list -> small_stmt small_stmt_list_list','small_stmt_list',2,'p_small_stmt_list2','base_parser.py',1353),
  ('small_stmt_list -> small_stmt small_stmt_list_list SEMI','small_stmt_list',3,'p_small_stmt_list3','base_parser.py',1357),
  ('small_stmt_list_list -> SEMI small_stmt','small_stmt_list_list',2,'p_small_stmt_list_list1','base_parser.py',1361),
  ('small_stmt_list_list -> small_stmt_list_list SEMI small_stmt','small_stmt_list_list',3,'p_small_stmt_list_list2','base_parser.py',1365),
  ('del_stmt -> DEL exprlist','del_stmt',2,'p_del_stmt','base_parser.py',1379),
  ('pass_stmt -> PASS','pass_stmt',1,'p_pass_stmt','base_parser.py',1387),
  ('flow_stmt -> break_stmt','flow_stmt',1,'p_flow_stmt','base_parser.py',1393),
  ('flow_stmt -> continue_stmt','flow_stmt',1,'p_flow_stmt','base_parser.py',1394),
  ('flow_stmt -> return_stmt','flow_stmt',1,'p_flow_stmt','base_parser.py',1395),
  ('flow_stmt -> raise_stmt','flow_stmt',1,'p_flow_stmt','base_parser.py',1396),
  ('flow_stmt -> yield_stmt','flow_stmt',1,'p_flow_stmt','base_parser.py',1397),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','base_parser.py',1401),
  ('continue_stmt -> CONTINUE','continue_stmt',1,'p_continue_stmt','base_parser.py',1407),
  ('return_stmt -> RETURN','return_stmt',1,'p_return_stmt1','base_parser.py',1413),
  ('return_stmt -> RETURN testlist','return_stmt',2,'p_return_stmt2','base_parser.py',1419),
  ('raise_stmt -> RAISE','raise_stmt',1,'p_raise_stmt1','base_parser.py',1426),
  ('raise_stmt -> RAISE test','raise_stmt',2,'p_raise_stmt2','base_parser.py',1438),
  ('yield_stmt -> yield_expr','yield_stmt',1,'p_yield_stmt','base_parser.py',1450),
  ('yield_expr -> YIELD','yield_expr',1,'p_yield_expr1','base_parser.py',1454),
  ('yield_expr -> YIELD testlist','yield_expr',2,'p_yield_expr2','base_parser.py',1458),
  ('global_stmt -> GLOBAL NAME','global_stmt',2,'p_global_stmt1','base_parser.py',1463),
  ('global_stmt -> GLOBAL NAME globals_list','global_stmt',3,'p_global_stmt2','base_parser.py',1470),
  ('globals_list -> COMMA NAME globals_list','globals_list',3,'p_globals_list1','base_parser.py',1477),
  ('globals_list -> COMMA NAME','globals_list',2,'p_globals_list2','base_parser.py',1481),
  ('assert_stmt -> ASSERT test','assert_stmt',2,'p_assert_stmt1','base_parser.py',1485),
  ('assert_stmt -> ASSERT test COMMA test','assert_stmt',4,'p_assert_stmt2','base_parser.py',1492),
  ('expr_stmt -> testlist_star_expr','expr_stmt',1,'p_expr_stmt1','base_parser.py',1499),
  ('expr_stmt -> testlist_star_expr augassign testlist','expr_stmt',3,'p_expr_stmt2','base_parser.py',1505),
  ('expr_stmt -> testlist_star_expr augassign yield_expr','expr_stmt',3,'p_expr_stmt2','base_parser.py',1506),
  ('expr_stmt -> testlist_star_expr equal_list','expr_stmt',2,'p_expr_stmt3','base_parser.py',1521),
  ('equal_list -> EQUAL testlist_star_expr','equal_list',2,'p_equal_list1','base_parser.py',1553),
  ('equal_list -> EQUAL yield_expr','equal_list',2,'p_equal_list1','base_parser.py',1554),
  ('equal_list -> EQUAL testlist_star_expr equal_list','equal_list',3,'p_equal_list2','base_parser.py',1558),
  ('equal_list -> EQUAL yield_expr equal_list','equal_list',3,'p_equal_list2','base_parser.py',1559),
  ('testlist -> test','testlist',1,'p_testlist1','base_parser.py',1563),
  ('testlist -> test COMMA','testlist',2,'p_testlist2','base_parser.py',1567),
  ('testlist -> test testlist_list','testlist',2,'p_testlist3','base_parser.py',1571),
  ('testlist -> test testlist_list COMMA','testlist',3,'p_testlist4','base_parser.py',1575),
  ('testlist_list -> COMMA test','testlist_list',2,'p_testlist_list1','base_parser.py',1579),
  ('testlist_list -> testlist_list COMMA test','testlist_list',3,'p_testlist_list2','base_parser.py',1583),
  ('test_or_star -> test','test_or_star',1,'p_test_or_star1','base_parser.py',1590),
  ('test_or_star_new -> test','test_or_star_new',1,'p_test_or_star_new1','base_parser.py',1595),
  ('testlist_star_expr -> test_or_star','testlist_star_expr',1,'p_testlist_star_expr1','base_parser.py',1599),
  ('testlist_star_expr -> test_or_star COMMA','testlist_star_expr',2,'p_test_list_star_expr2','base_parser.py',1603),
  ('testlist_star_expr -> test_or_star testlist_star_expr_list','testlist_star_expr',2,'p_test_list_star_expr3','base_parser.py',1607),
  ('testlist_star_expr -> test_or_star testlist_star_expr_list COMMA','testlist_star_expr',3,'p_test_list_star_expr4','base_parser.py',1611),
  ('testlist_star_expr_list -> COMMA test_or_star','testlist_star_expr_list',2,'p_test_list_star_expr_list1','base_parser.py',1615),
  ('testlist_star_expr_list -> testlist_star_expr_list COMMA test_or_star','testlist_star_expr_list',3,'p_test_list_star_expr_list2','base_parser.py',1619),
  ('if_stmt -> IF test COLON suite','if_stmt',4,'p_if_stmt1','base_parser.py',1634),
  ('if_stmt -> IF test COLON suite elif_stmts','if_stmt',5,'p_if_stmt2','base_parser.py',1644),
  ('if_stmt -> IF test COLON suite else_stmt','if_stmt',5,'p_if_stmt3','base_parser.py',1654),
  ('if_stmt -> IF test COLON suite elif_stmts else_stmt','if_stmt',6,'p_if_stmt4','base_parser.py',1664),
  ('elif_stmts -> elif_stmt elif_stmts','elif_stmts',2,'p_elif_stmts1','base_parser.py',1679),
  ('elif_stmts -> elif_stmt','elif_stmts',1,'p_elif_stmts2','base_parser.py',1685),
  ('elif_stmt -> ELIF test COLON suite','elif_stmt',4,'p_elif_stmt','base_parser.py',1689),
  ('else_stmt -> ELSE COLON suite','else_stmt',3,'p_else_stmt','base_parser.py',1699),
  ('while_stmt -> WHILE test COLON suite','while_stmt',4,'p_while_stmt1','base_parser.py',1703),
  ('while_stmt -> WHILE test COLON suite ELSE COLON suite','while_stmt',7,'p_while_stmt2','base_parser.py',1713),
  ('for_stmt -> FOR exprlist IN testlist COLON suite','for_stmt',6,'p_for_stmt1','base_parser.py',1723),
  ('for_stmt -> FOR exprlist IN testlist COLON suite ELSE COLON suite','for_stmt',9,'p_for_stmt2','base_parser.py',1736),
  ('try_stmt -> TRY COLON suite FINALLY COLON suite','try_stmt',6,'p_try_stmt1','base_parser.py',1749),
  ('try_stmt -> TRY COLON suite except_clauses','try_stmt',4,'p_try_stmt2','base_parser.py',1763),
  ('try_stmt -> TRY COLON suite except_clauses ELSE COLON suite','try_stmt',7,'p_try_stmt3','base_parser.py',1777),
  ('try_stmt -> TRY COLON suite except_clauses FINALLY COLON suite','try_stmt',7,'p_try_stmt4','base_parser.py',1791),
  ('try_stmt -> TRY COLON suite except_clauses ELSE COLON suite FINALLY COLON suite','try_stmt',10,'p_try_stmt5','base_parser.py',1812),
  ('except_clauses -> except_clause except_clauses','except_clauses',2,'p_except_clauses1','base_parser.py',1834),
  ('except_clauses -> except_clause','except_clauses',1,'p_except_clauses2','base_parser.py',1838),
  ('except_clause -> EXCEPT COLON suite','except_clause',3,'p_except_clause1','base_parser.py',1842),
  ('except_clause -> EXCEPT test COLON suite','except_clause',4,'p_except_clause2','base_parser.py',1852),
  ('except_clause -> EXCEPT test AS test COLON suite','except_clause',6,'p_except_clause3','base_parser.py',1862),
  ('except_clause -> EXCEPT test COMMA test COLON suite','except_clause',6,'p_except_clause3','base_parser.py',1863),
  ('with_stmt -> WITH with_item COLON suite','with_stmt',4,'p_with_stmt1','base_parser.py',1878),
  ('with_stmt -> WITH with_item with_item_list COLON suite','with_stmt',5,'p_with_stmt2','base_parser.py',1893),
  ('with_item -> test','with_item',1,'p_with_item1','base_parser.py',1922),
  ('with_item -> test AS expr','with_item',3,'p_with_item2','base_parser.py',1926),
  ('with_item_list -> COMMA with_item with_item_list','with_item_list',3,'p_with_item_list1','base_parser.py',1932),
  ('with_item_list -> COMMA with_item','with_item_list',2,'p_with_item_list2','base_parser.py',1936),
  ('funcdef -> DEF NAME parameters COLON suite','funcdef',5,'p_funcdef','base_parser.py',1940),
  ('parameters -> LPAR RPAR','parameters',2,'p_parameters1','base_parser.py',1953),
  ('classdef -> CLASS NAME COLON suite','classdef',4,'p_classdef1','base_parser.py',1961),
  ('classdef -> CLASS NAME LPAR RPAR COLON suite','classdef',6,'p_classdef2','base_parser.py',1972),
  ('decorators -> decorator decorators','decorators',2,'p_decorators1','base_parser.py',1991),
  ('decorators -> decorator','decorators',1,'p_decorators2','base_parser.py',1995),
  ('decorator -> AT dotted_name NEWLINE','decorator',3,'p_decorator1','base_parser.py',1999),
  ('decorator -> AT dotted_name LPAR RPAR NEWLINE','decorator',5,'p_decorator2','base_parser.py',2006),
  ('decorator -> AT dotted_name LPAR arglist RPAR NEWLINE','decorator',6,'p_decorator3','base_parser.py',2015),
  ('import_stmt -> import_name','import_stmt',1,'p_import_stmt1','base_parser.py',2025),
  ('import_stmt -> import_from','import_stmt',1,'p_import_stmt2','base_parser.py',2029),
  ('import_name -> IMPORT dotted_as_names','import_name',2,'p_import_name','base_parser.py',2033),
  ('import_from -> FROM dotted_name IMPORT STAR','import_from',4,'p_import_from1','base_parser.py',2039),
  ('import_from -> FROM dotted_name IMPORT import_as_names','import_from',4,'p_import_from2','base_parser.py',2046),
  ('import_from -> FROM dotted_name IMPORT LPAR import_as_names RPAR','import_from',6,'p_import_from3','base_parser.py',2052),
  ('import_from -> FROM import_from_dots dotted_name IMPORT STAR','import_from',5,'p_import_from4','base_parser.py',2058),
  ('import_from -> FROM import_from_dots dotted_name IMPORT import_as_names','import_from',5,'p_import_from5','base_parser.py',2065),
  ('import_from -> FROM import_from_dots dotted_name IMPORT LPAR import_as_names RPAR','import_from',7,'p_import_from6','base_parser.py',2071),
  ('import_from -> FROM import_from_dots IMPORT STAR','import_from',4,'p_import_from7','base_parser.py',2077),
  ('import_from -> FROM import_from_dots IMPORT import_as_names','import_from',4,'p_import_from8','base_parser.py',2084),
  ('import_from -> FROM import_from_dots IMPORT LPAR import_as_names RPAR','import_from',6,'p_import_from9','base_parser.py',2090),
  ('import_from_dots -> DOT','import_from_dots',1,'p_import_from_dots1','base_parser.py',2096),
  ('import_from_dots -> import_from_dots DOT','import_from_dots',2,'p_import_from_dots2','base_parser.py',2100),
  ('import_from_dots -> ELLIPSIS','import_from_dots',1,'p_import_from_dots3','base_parser.py',2104),
  ('import_from_dots -> import_from_dots ELLIPSIS','import_from_dots',2,'p_import_from_dots4','base_parser.py',2108),
  ('import_as_name -> NAME','import_as_name',1,'p_import_as_name1','base_parser.py',2112),
  ('import_as_name -> NAME AS NAME','import_as_name',3,'p_import_as_name2','base_parser.py',2116),
  ('dotted_as_name -> dotted_name','dotted_as_name',1,'p_dotted_as_name1','base_parser.py',2120),
  ('dotted_as_name -> dotted_name AS NAME','dotted_as_name',3,'p_dotted_as_name2','base_parser.py',2125),
  ('import_as_names -> import_as_name','import_as_names',1,'p_import_as_names1','base_parser.py',2130),
  ('import_as_names -> import_as_name COMMA','import_as_names',2,'p_import_as_names2','base_parser.py',2134),
  ('import_as_names -> import_as_name import_as_names_list','import_as_names',2,'p_import_as_names3','base_parser.py',2138),
  ('import_as_names -> import_as_name import_as_names_list COMMA','import_as_names',3,'p_import_as_names4','base_parser.py',2142),
  ('import_as_names_list -> COMMA import_as_name','import_as_names_list',2,'p_import_as_names_list1','base_parser.py',2146),
  ('import_as_names_list -> import_as_names_list COMMA import_as_name','import_as_names_list',3,'p_import_as_names_list2','base_parser.py',2150),
  ('dotted_as_names -> dotted_as_name','dotted_as_names',1,'p_dotted_as_names1','base_parser.py',2154),
  ('dotted_as_names -> dotted_as_name dotted_as_names_list','dotted_as_names',2,'p_dotted_as_names2','base_parser.py',2158),
  ('dotted_as_names_list -> COMMA dotted_as_name','dotted_as_names_list',2,'p_dotted_as_names_list1','base_parser.py',2162),
  ('dotted_as_names_list -> dotted_as_names_list COMMA dotted_as_name','dotted_as_names_list',3,'p_dotted_as_names_star_list2','base_parser.py',2166),
  ('dotted_name -> NAME','dotted_name',1,'p_dotted_name1','base_parser.py',2170),
  ('dotted_name -> NAME dotted_name_list','dotted_name',2,'p_dotted_name2','base_parser.py',2174),
  ('dotted_name_list -> DOT NAME','dotted_name_list',2,'p_dotted_name_list1','base_parser.py',2178),
  ('dotted_name_list -> dotted_name_list DOT NAME','dotted_name_list',3,'p_dotted_name_list2','base_parser.py',2182),
  ('test -> or_test','test',1,'p_test1','base_parser.py',2186),
  ('test -> or_test IF or_test ELSE test','test',5,'p_test2','base_parser.py',2190),
  ('test -> lambdef','test',1,'p_test3','base_parser.py',2195),
  ('or_test -> and_test','or_test',1,'p_or_test1','base_parser.py',2199),
  ('or_test -> and_test or_test_list','or_test',2,'p_or_test2','base_parser.py',2203),
  ('or_test_list -> OR and_test','or_test_list',2,'p_or_test_list1','base_parser.py',2209),
  ('or_test_list -> or_test_list OR and_test','or_test_list',3,'p_or_test_list2','base_parser.py',2213),
  ('and_test -> not_test','and_test',1,'p_and_test1','base_parser.py',2217),
  ('and_test -> not_test and_test_list','and_test',2,'p_and_test2','base_parser.py',2221),
  ('and_test_list -> AND not_test','and_test_list',2,'p_and_test_list1','base_parser.py',2227),
  ('and_test_list -> and_test_list AND not_test','and_test_list',3,'p_and_test_list2','base_parser.py',2231),
  ('not_test -> comparison','not_test',1,'p_not_test','base_parser.py',2235),
  ('not_test -> NOT not_test','not_test',2,'p_not_test2','base_parser.py',2239),
  ('comparison -> expr','comparison',1,'p_comparison1','base_parser.py',2244),
  ('comparison -> expr comparison_list','comparison',2,'p_comparison2','base_parser.py',2248),
  ('comparison_list -> comp_op expr','comparison_list',2,'p_comparison_list1','base_parser.py',2256),
  ('comparison_list -> comparison_list comp_op expr','comparison_list',3,'p_comparison_list2','base_parser.py',2260),
  ('comp_op -> LESS','comp_op',1,'p_comp_op1','base_parser.py',2264),
  ('comp_op -> GREATER','comp_op',1,'p_comp_op2','base_parser.py',2268),
  ('comp_op -> EQEQUAL','comp_op',1,'p_comp_op3','base_parser.py',2272),
  ('comp_op -> GREATEREQUAL','comp_op',1,'p_comp_op4','base_parser.py',2276),
  ('comp_op -> LESSEQUAL','comp_op',1,'p_comp_op5','base_parser.py',2280),
  ('comp_op -> NOTEQUAL','comp_op',1,'p_comp_op6','base_parser.py',2284),
  ('comp_op -> IN','comp_op',1,'p_comp_op7','base_parser.py',2288),
  ('comp_op -> NOT IN','comp_op',2,'p_comp_op8','base_parser.py',2292),
  ('comp_op -> IS','comp_op',1,'p_comp_op9','base_parser.py',2296),
  ('comp_op -> IS NOT','comp_op',2,'p_comp_op10','base_parser.py',2300),
  ('expr -> xor_expr','expr',1,'p_expr1','base_parser.py',2304),
  ('expr -> xor_expr expr_list','expr',2,'p_expr2','base_parser.py',2308),
  ('expr_list -> VBAR xor_expr','expr_list',2,'p_expr_list1','base_parser.py',2315),
  ('expr_list -> expr_list VBAR xor_expr','expr_list',3,'p_expr_list2','base_parser.py',2319),
  ('xor_expr -> and_expr','xor_expr',1,'p_xor_expr1','base_parser.py',2323),
  ('xor_expr -> and_expr xor_expr_list','xor_expr',2,'p_xor_expr2','base_parser.py',2327),
  ('xor_expr_list -> CIRCUMFLEX and_expr','xor_expr_list',2,'p_xor_expr_list1','base_parser.py',2334),
  ('xor_expr_list -> xor_expr_list CIRCUMFLEX and_expr','xor_expr_list',3,'p_xor_expr_list2','base_parser.py',2338),
  ('and_expr -> shift_expr','and_expr',1,'p_and_expr1','base_parser.py',2342),
  ('and_expr -> shift_expr and_expr_list','and_expr',2,'p_and_expr2','base_parser.py',2346),
  ('and_expr_list -> AMPER shift_expr','and_expr_list',2,'p_and_expr_list1','base_parser.py',2353),
  ('and_expr_list -> and_expr_list AMPER shift_expr','and_expr_list',3,'p_and_expr_list2','base_parser.py',2357),
  ('shift_expr -> arith_expr','shift_expr',1,'p_shift_expr1','base_parser.py',2361),
  ('shift_expr -> arith_expr shift_list','shift_expr',2,'p_shift_expr2','base_parser.py',2365),
  ('shift_list -> shift_op','shift_list',1,'p_shift_list1','base_parser.py',2372),
  ('shift_list -> shift_list shift_op','shift_list',2,'p_shift_list2','base_parser.py',2376),
  ('shift_op -> LEFTSHIFT arith_expr','shift_op',2,'p_shift_op1','base_parser.py',2380),
  ('shift_op -> RIGHTSHIFT arith_expr','shift_op',2,'p_shift_op2','base_parser.py',2384),
  ('arith_expr -> term','arith_expr',1,'p_arith_expr1','base_parser.py',2388),
  ('arith_expr -> term arith_expr_list','arith_expr',2,'p_arith_expr2','base_parser.py',2392),
  ('arith_expr_list -> arith_op','arith_expr_list',1,'p_arith_expr_list1','base_parser.py',2399),
  ('arith_expr_list -> arith_expr_list arith_op','arith_expr_list',2,'p_arith_expr_list2','base_parser.py',2403),
  ('arith_op -> PLUS term','arith_op',2,'p_arith_op1','base_parser.py',2407),
  ('arith_op -> MINUS term','arith_op',2,'p_arith_op2','base_parser.py',2412),
  ('term -> factor','term',1,'p_term1','base_parser.py',2416),
  ('term -> factor term_list','term',2,'p_term2','base_parser.py',2420),
  ('term_list -> term_op','term_list',1,'p_term_list1','base_parser.py',2427),
  ('term_list -> term_list term_op','term_list',2,'p_term_list2','base_parser.py',2431),
  ('term_op -> STAR factor','term_op',2,'p_term_op1','base_parser.py',2435),
  ('term_op -> SLASH factor','term_op',2,'p_term_op2','base_parser.py',2439),
  ('term_op -> PERCENT factor','term_op',2,'p_term_op3','base_parser.py',2443),
  ('term_op -> DOUBLESLASH factor','term_op',2,'p_term_op4','base_parser.py',2447),
  ('factor -> power','factor',1,'p_factor1','base_parser.py',2451),
  ('factor -> PLUS factor','factor',2,'p_factor2','base_parser.py',2455),
  ('factor -> MINUS factor','factor',2,'p_factor3','base_parser.py',2462),
  ('factor -> TILDE factor','factor',2,'p_factor4','base_parser.py',2469),
  ('power -> atom_expr','power',1,'p_power1','base_parser.py',2476),
  ('power -> atom_expr DOUBLESTAR factor','power',3,'p_power2','base_parser.py',2480),
  ('atom_expr -> atom','atom_expr',1,'p_atom_expr1','base_parser.py',2485),
  ('atom_expr -> atom trailer_list','atom_expr',2,'p_atom_expr2','base_parser.py',2489),
  ('trailer_list -> trailer','trailer_list',1,'p_trailer_list1','base_parser.py',2504),
  ('trailer_list -> trailer_list trailer','trailer_list',2,'p_trailer_list2','base_parser.py',2508),
  ('atom -> LPAR RPAR','atom',2,'p_atom1','base_parser.py',2512),
  ('atom -> LPAR yield_expr RPAR','atom',3,'p_atom2','base_parser.py',2516),
  ('atom -> LPAR testlist_comp RPAR','atom',3,'p_atom3','base_parser.py',2520),
  ('atom -> LSQB RSQB','atom',2,'p_atom4','base_parser.py',2533),
  ('atom -> LSQB testlist_comp RSQB','atom',3,'p_atom5','base_parser.py',2537),
  ('atom -> LBRACE RBRACE','atom',2,'p_atom6','base_parser.py',2548),
  ('atom -> LBRACE dictorsetmaker RBRACE','atom',3,'p_atom7','base_parser.py',2552),
  ('atom -> NAME','atom',1,'p_atom8','base_parser.py',2572),
  ('atom -> NUMBER','atom',1,'p_atom9','base_parser.py',2576),
  ('testlist_comp -> test_or_star comp_for','testlist_comp',2,'p_testlist_comp1','base_parser.py',2598),
  ('testlist_comp -> test_or_star','testlist_comp',1,'p_testlist_comp2','base_parser.py',2602),
  ('testlist_comp -> test_or_star COMMA','testlist_comp',2,'p_testlist_comp3','base_parser.py',2606),
  ('testlist_comp -> test_or_star testlist_comp_list','testlist_comp',2,'p_testlist_comp4','base_parser.py',2610),
  ('testlist_comp -> test_or_star testlist_comp_list COMMA','testlist_comp',3,'p_testlist_comp5','base_parser.py',2615),
  ('testlist_comp_list -> COMMA test_or_star','testlist_comp_list',2,'p_testlist_comp_list1','base_parser.py',2620),
  ('testlist_comp_list -> testlist_comp_list COMMA test_or_star','testlist_comp_list',3,'p_testlist_comp_list2','base_parser.py',2624),
  ('trailer -> LPAR RPAR','trailer',2,'p_trailer1','base_parser.py',2628),
  ('trailer -> LPAR arglist RPAR','trailer',3,'p_trailer2','base_parser.py',2632),
  ('trailer -> LSQB subscriptlist RSQB','trailer',3,'p_trailer3','base_parser.py',2639),
  ('trailer -> DOT NAME','trailer',2,'p_trailer4','base_parser.py',2643),
  ('subscriptlist -> subscript','subscriptlist',1,'p_subscriptlist1','base_parser.py',2647),
  ('subscriptlist -> subscript COMMA','subscriptlist',2,'p_subscriptlist2','base_parser.py',2651),
  ('subscriptlist -> subscript subscriptlist_list','subscriptlist',2,'p_subscriptlist3','base_parser.py',2656),
  ('subscriptlist -> subscript subscriptlist_list COMMA','subscriptlist',3,'p_subscriptlist4','base_parser.py',2661),
  ('subscriptlist_list -> COMMA subscript','subscriptlist_list',2,'p_subscriptlist_list1','base_parser.py',2666),
  ('subscriptlist_list -> subscriptlist_list COMMA subscript','subscriptlist_list',3,'p_subscript_list2','base_parser.py',2670),
  ('subscript -> ELLIPSIS','subscript',1,'p_subscript1','base_parser.py',2674),
  ('subscript -> test','subscript',1,'p_subcript2','base_parser.py',2678),
  ('subscript -> COLON','subscript',1,'p_subscript3','base_parser.py',2682),
  ('subscript -> DOUBLECOLON','subscript',1,'p_subscript4','base_parser.py',2686),
  ('subscript -> test COLON','subscript',2,'p_subscript5','base_parser.py',2691),
  ('subscript -> test DOUBLECOLON','subscript',2,'p_subscrip6','base_parser.py',2695),
  ('subscript -> COLON test','subscript',2,'p_subscript7','base_parser.py',2700),
  ('subscript -> COLON test COLON','subscript',3,'p_subscript8','base_parser.py',2704),
  ('subscript -> DOUBLECOLON test','subscript',2,'p_subscript9','base_parser.py',2709),
  ('subscript -> test COLON test','subscript',3,'p_subscript10','base_parser.py',2713),
  ('subscript -> test COLON test COLON','subscript',4,'p_subscript11','base_parser.py',2717),
  ('subscript -> COLON test COLON test','subscript',4,'p_subscript12','base_parser.py',2722),
  ('subscript -> test COLON test COLON test','subscript',5,'p_subscript13','base_parser.py',2726),
  ('subscript -> test DOUBLECOLON test','subscript',3,'p_subscript14','base_parser.py',2730),
  ('exprlist -> expr','exprlist',1,'p_exprlist1','base_parser.py',2734),
  ('exprlist -> expr COMMA','exprlist',2,'p_exprlist2','base_parser.py',2738),
  ('exprlist -> expr exprlist_list','exprlist',2,'p_exprlist3','base_parser.py',2744),
  ('exprlist -> expr exprlist_list COMMA','exprlist',3,'p_exprlist4','base_parser.py',2750),
  ('exprlist_list -> COMMA expr','exprlist_list',2,'p_exprlist_list1','base_parser.py',2756),
  ('exprlist_list -> exprlist_list COMMA expr','exprlist_list',3,'p_exprlist_list2','base_parser.py',2760),
  ('dictorsetmaker -> dosm_colon comp_for','dictorsetmaker',2,'p_dictorsetmaker1','base_parser.py',2764),
  ('dictorsetmaker -> dosm_colon','dictorsetmaker',1,'p_dictorsetmaker2','base_parser.py',2768),
  ('dictorsetmaker -> dosm_colon COMMA','dictorsetmaker',2,'p_dictorsetmaker3','base_parser.py',2773),
  ('dictorsetmaker -> dosm_colon dosm_colon_list','dictorsetmaker',2,'p_dictorsetmaker4','base_parser.py',2777),
  ('dictorsetmaker -> dosm_colon dosm_colon_list COMMA','dictorsetmaker',3,'p_dictorsetmaker5','base_parser.py',2782),
  ('dictorsetmaker -> test_or_star_new comp_for','dictorsetmaker',2,'p_dictorsetmaker6','base_parser.py',2787),
  ('dictorsetmaker -> test_or_star_new COMMA','dictorsetmaker',2,'p_dictorsetmaker7','base_parser.py',2791),
  ('dictorsetmaker -> test_or_star_new dosm_comma_list','dictorsetmaker',2,'p_dictorsetmaker8','base_parser.py',2796),
  ('dictorsetmaker -> test_or_star_new dosm_comma_list COMMA','dictorsetmaker',3,'p_dictorsetmaker9','base_parser.py',2801),
  ('dosm_colon -> test COLON test','dosm_colon',3,'p_dosm_colon1','base_parser.py',2806),
  ('dosm_colon_list -> COMMA dosm_colon','dosm_colon_list',2,'p_dosm_colon_list1','base_parser.py',2810),
  ('dosm_colon_list -> dosm_colon_list COMMA dosm_colon','dosm_colon_list',3,'p_dosm_colon_list2','base_parser.py',2814),
  ('dosm_comma_list -> COMMA test','dosm_comma_list',2,'p_dosm_comma_list1','base_parser.py',2818),
  ('dosm_comma_list -> dosm_comma_list COMMA test','dosm_comma_list',3,'p_dosm_comma_list2','base_parser.py',2822),
  ('arglist -> argument','arglist',1,'p_arglist1','base_parser.py',2826),
  ('arglist -> argument COMMA','arglist',2,'p_arglist2','base_parser.py',2833),
  ('arglist -> STAR test','arglist',2,'p_arglist3','base_parser.py',2840),
  ('arglist -> STAR test COMMA DOUBLESTAR test','arglist',5,'p_arglist4','base_parser.py',2844),
  ('arglist -> DOUBLESTAR test','arglist',2,'p_arglist5','base_parser.py',2848),
  ('arglist -> arglist_list argument','arglist',2,'p_arglist6','base_parser.py',2868),
  ('arglist -> arglist_list argument COMMA','arglist',3,'p_arglist7','base_parser.py',2885),
  ('arglist -> arglist_list STAR test','arglist',3,'p_arglist8','base_parser.py',2901),
  ('arglist -> arglist_list STAR test COMMA DOUBLESTAR test','arglist',6,'p_arglist9','base_parser.py',2914),
  ('arglist -> arglist_list DOUBLESTAR test','arglist',3,'p_arglist10','base_parser.py',2927),
  ('arglist -> STAR test COMMA argument','arglist',4,'p_arglist11','base_parser.py',2940),
  ('arglist -> STAR test COMMA argument COMMA DOUBLESTAR test','arglist',7,'p_arglist12','base_parser.py',2950),
  ('arglist -> STAR test COMMA arglist_list argument','arglist',5,'p_arglist13','base_parser.py',2960),
  ('arglist -> STAR test COMMA arglist_list argument COMMA DOUBLESTAR test','arglist',8,'p_arglist14','base_parser.py',2976),
  ('arglist -> arglist_list STAR test COMMA argument','arglist',5,'p_arglist15','base_parser.py',3022),
  ('arglist -> arglist_list STAR test COMMA arglist_list argument','arglist',6,'p_arglist16','base_parser.py',3027),
  ('arglist -> arglist_list STAR test COMMA argument COMMA DOUBLESTAR test','arglist',8,'p_arglist17','base_parser.py',3033),
  ('arglist -> arglist_list STAR test COMMA arglist_list argument COMMA DOUBLESTAR test','arglist',9,'p_arglist18','base_parser.py',3039),
  ('arglist_list -> argument COMMA','arglist_list',2,'p_arglist_list1','base_parser.py',3046),
  ('arglist_list -> arglist_list argument COMMA','arglist_list',3,'p_arglist_list2','base_parser.py',3052),
  ('argument -> test','argument',1,'p_argument1','base_parser.py',3058),
  ('argument -> test comp_for','argument',2,'p_argument2','base_parser.py',3062),
  ('argument -> test EQUAL test','argument',3,'p_argument3','base_parser.py',3068),
  ('comp_iter -> comp_for','comp_iter',1,'p_comp_iter1','base_parser.py',3097),
  ('comp_iter -> comp_if','comp_iter',1,'p_comp_iter2','base_parser.py',3101),
  ('comp_if -> IF old_test','comp_if',2,'p_comp_if1','base_parser.py',3105),
  ('comp_if -> IF old_test comp_iter','comp_if',3,'p_comp_if2','base_parser.py',3109),
  ('old_test -> or_test','old_test',1,'p_old_test1','base_parser.py',3113),
  ('old_test -> old_lambdef','old_test',1,'p_old_test2','base_parser.py',3117),
  ('old_lambdef -> LAMBDA COLON old_test','old_lambdef',3,'p_old_lambdef1','base_parser.py',3121),
  ('old_lambdef -> LAMBDA varargslist COLON old_test','old_lambdef',4,'p_old_lambdef2','base_parser.py',3127),
  ('lambdef -> LAMBDA COLON test','lambdef',3,'p_lambdef1','base_parser.py',3133),
  ('lambdef -> LAMBDA varargslist COLON test','lambdef',4,'p_lambdef2','base_parser.py',3139),
  ('typedargslist -> tfpdef COMMA STAR tfpdef','typedargslist',4,'p_typedargslist1','base_parser.py',3164),
  ('varargslist -> fpdef COMMA STAR fpdef','varargslist',4,'p_varargslist1','base_parser.py',3164),
  ('typedargslist -> tfpdef COMMA STAR tfpdef COMMA DOUBLESTAR tfpdef','typedargslist',7,'p_typedargslist2','base_parser.py',3170),
  ('varargslist -> fpdef COMMA STAR fpdef COMMA DOUBLESTAR fpdef','varargslist',7,'p_varargslist2','base_parser.py',3170),
  ('typedargslist -> tfpdef COMMA DOUBLESTAR tfpdef','typedargslist',4,'p_typedargslist3','base_parser.py',3176),
  ('varargslist -> fpdef COMMA DOUBLESTAR fpdef','varargslist',4,'p_varargslist3','base_parser.py',3176),
  ('typedargslist -> tfpdef','typedargslist',1,'p_typedargslist4','base_parser.py',3182),
  ('varargslist -> fpdef','varargslist',1,'p_varargslist4','base_parser.py',3182),
  ('typedargslist -> tfpdef COMMA','typedargslist',2,'p_typedargslist5','base_parser.py',3188),
  ('varargslist -> fpdef COMMA','varargslist',2,'p_varargslist5','base_parser.py',3188),
  ('typedargslist -> tfpdef typedargslist_list COMMA STAR tfpdef','typedargslist',5,'p_typedargslist6','base_parser.py',3194),
  ('varargslist -> fpdef varargslist_list COMMA STAR fpdef','varargslist',5,'p_varargslist6','base_parser.py',3194),
  ('typedargslist -> tfpdef typedargslist_list COMMA STAR tfpdef COMMA DOUBLESTAR tfpdef','typedargslist',8,'p_typedargslist7','base_parser.py',3202),
  ('varargslist -> fpdef varargslist_list COMMA STAR fpdef COMMA DOUBLESTAR fpdef','varargslist',8,'p_varargslist7','base_parser.py',3202),
  ('typedargslist -> tfpdef typedargslist_list COMMA DOUBLESTAR tfpdef','typedargslist',5,'p_typedargslist8','base_parser.py',3211),
  ('varargslist -> fpdef varargslist_list COMMA DOUBLESTAR fpdef','varargslist',5,'p_varargslist8','base_parser.py',3211),
  ('typedargslist -> tfpdef typedargslist_list','typedargslist',2,'p_typedargslist9','base_parser.py',3219),
  ('varargslist -> fpdef varargslist_list','varargslist',2,'p_varargslist9','base_parser.py',3219),
  ('typedargslist -> tfpdef typedargslist_list COMMA','typedargslist',3,'p_typedargslist10','base_parser.py',3227),
  ('varargslist -> fpdef varargslist_list COMMA','varargslist',3,'p_varargslist10','base_parser.py',3227),
  ('typedargslist -> tfpdef EQUAL test COMMA STAR tfpdef','typedargslist',6,'p_typedargslist11','base_parser.py',3235),
  ('varargslist -> fpdef EQUAL test COMMA STAR fpdef','varargslist',6,'p_varargslist11','base_parser.py',3235),
  ('typedargslist -> tfpdef EQUAL test COMMA STAR tfpdef COMMA DOUBLESTAR tfpdef','typedargslist',9,'p_typedargslist12','base_parser.py',3241),
  ('varargslist -> fpdef EQUAL test COMMA STAR fpdef COMMA DOUBLESTAR fpdef','varargslist',9,'p_varargslist12','base_parser.py',3241),
  ('typedargslist -> tfpdef EQUAL test COMMA DOUBLESTAR tfpdef','typedargslist',6,'p_typedargslist13','base_parser.py',3248),
  ('varargslist -> fpdef EQUAL test COMMA DOUBLESTAR fpdef','varargslist',6,'p_varargslist13','base_parser.py',3248),
  ('typedargslist -> tfpdef EQUAL test','typedargslist',3,'p_typedargslist14','base_parser.py',3254),
  ('varargslist -> fpdef EQUAL test','varargslist',3,'p_varargslist14','base_parser.py',3254),
  ('typedargslist -> tfpdef EQUAL test COMMA','typedargslist',4,'p_typedargslist15','base_parser.py',3260),
  ('varargslist -> fpdef EQUAL test COMMA','varargslist',4,'p_varargslist15','base_parser.py',3260),
  ('typedargslist -> tfpdef EQUAL test typedargslist_list COMMA STAR tfpdef','typedargslist',7,'p_typedargslist16','base_parser.py',3266),
  ('varargslist -> fpdef EQUAL test varargslist_list COMMA STAR fpdef','varargslist',7,'p_varargslist16','base_parser.py',3266),
  ('typedargslist -> tfpdef EQUAL test typedargslist_list COMMA STAR tfpdef COMMA DOUBLESTAR tfpdef','typedargslist',10,'p_typedargslist17','base_parser.py',3278),
  ('varargslist -> fpdef EQUAL test varargslist_list COMMA STAR fpdef COMMA DOUBLESTAR fpdef','varargslist',10,'p_varargslist17','base_parser.py',3278),
  ('typedargslist -> tfpdef EQUAL test typedargslist_list COMMA DOUBLESTAR tfpdef','typedargslist',7,'p_typedargslist18','base_parser.py',3291),
  ('varargslist -> fpdef EQUAL test varargslist_list COMMA DOUBLESTAR fpdef','varargslist',7,'p_varargslist18','base_parser.py',3291),
  ('typedargslist -> tfpdef EQUAL test typedargslist_list','typedargslist',4,'p_typedargslist19','base_parser.py',3303),
  ('varargslist -> fpdef EQUAL test varargslist_list','varargslist',4,'p_varargslist19','base_parser.py',3303),
  ('typedargslist -> tfpdef EQUAL test typedargslist_list COMMA','typedargslist',5,'p_typedargslist20','base_parser.py',3315),
  ('varargslist -> fpdef EQUAL test varargslist_list COMMA','varargslist',5,'p_varargslist20','base_parser.py',3315),
  ('typedargslist -> STAR tfpdef','typedargslist',2,'p_typedargslist21','base_parser.py',3327),
  ('varargslist -> STAR fpdef','varargslist',2,'p_varargslist21','base_parser.py',3327),
  ('typedargslist -> STAR tfpdef COMMA DOUBLESTAR tfpdef','typedargslist',5,'p_typedargslist22','base_parser.py',3332),
  ('varargslist -> STAR fpdef COMMA DOUBLESTAR fpdef','varargslist',5,'p_varargslist22','base_parser.py',3332),
  ('typedargslist -> DOUBLESTAR tfpdef','typedargslist',2,'p_typedargslist23','base_parser.py',3337),
  ('varargslist -> DOUBLESTAR fpdef','varargslist',2,'p_varargslist23','base_parser.py',3337),
  ('typedargslist_list -> COMMA tfpdef','typedargslist_list',2,'p_typedargslist_list1','base_parser.py',3343),
  ('varargslist_list -> COMMA fpdef','varargslist_list',2,'p_varargslist_list1','base_parser.py',3343),
  ('typedargslist_list -> COMMA tfpdef EQUAL test','typedargslist_list',4,'p_typedargslist_list2','base_parser.py',3347),
  ('varargslist_list -> COMMA fpdef EQUAL test','varargslist_list',4,'p_varargslist_list2','base_parser.py',3347),
  ('typedargslist_list -> typedargslist_list COMMA tfpdef','typedargslist_list',3,'p_typedargslist_list3','base_parser.py',3351),
  ('varargslist_list -> varargslist_list COMMA fpdef','varargslist_list',3,'p_varargslist_list3','base_parser.py',3351),
  ('typedargslist_list -> typedargslist_list COMMA tfpdef EQUAL test','typedargslist_list',5,'p_typedargslist_list4','base_parser.py',3361),
  ('varargslist_list -> varargslist_list COMMA fpdef EQUAL test','varargslist_list',5,'p_varargslist_list4','base_parser.py',3361),
]
