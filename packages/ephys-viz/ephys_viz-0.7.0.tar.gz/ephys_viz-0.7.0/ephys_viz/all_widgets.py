####################################################################
# This file is automatically generated
# Do not edit manually
####################################################################

from .BaseWidget import _BaseWidget

from .widgets import Video as VideoOrig
from .widgets import PlaceField as PlaceFieldOrig
from .widgets import Accordion as AccordionOrig
from .widgets import Autocorrelograms as AutocorrelogramsOrig
from .widgets import NWBView as NWBViewOrig
from .widgets import VBox as VBoxOrig
from .widgets import NWBBrowser as NWBBrowserOrig
from .widgets import NWBFile as NWBFileOrig
from .widgets import HBox as HBoxOrig
from .widgets import TwoPhotonSeries as TwoPhotonSeriesOrig
from .widgets import ElectrodeGeometry as ElectrodeGeometryOrig
from .widgets import Surface3d as Surface3dOrig
from .widgets import TimeseriesView as TimeseriesViewOrig
from .widgets import SpikeForestAnalysis as SpikeForestAnalysisOrig
from .widgets import Tabs as TabsOrig
from .widgets import CorticalSurface as CorticalSurfaceOrig



class Video(_BaseWidget):
    """Jupyter widget for Video"""

    def __init__(self, *args, **kwargs):
        super().__init__(VideoOrig, 'Video', 'ephys_viz', *args, **kwargs)


class PlaceField(_BaseWidget):
    """Jupyter widget for PlaceField"""

    def __init__(self, *args, **kwargs):
        super().__init__(PlaceFieldOrig, 'PlaceField', 'ephys_viz', *args, **kwargs)


class Accordion(_BaseWidget):
    """Jupyter widget for Accordion"""

    def __init__(self, *args, **kwargs):
        super().__init__(AccordionOrig, 'Accordion', 'ephys_viz', *args, **kwargs)


class Autocorrelograms(_BaseWidget):
    """Jupyter widget for Autocorrelograms"""

    def __init__(self, *args, **kwargs):
        super().__init__(AutocorrelogramsOrig, 'Autocorrelograms', 'ephys_viz', *args, **kwargs)


class NWBView(_BaseWidget):
    """Jupyter widget for NWBView"""

    def __init__(self, *args, **kwargs):
        super().__init__(NWBViewOrig, 'NWBView', 'ephys_viz', *args, **kwargs)


class VBox(_BaseWidget):
    """Jupyter widget for VBox"""

    def __init__(self, *args, **kwargs):
        super().__init__(VBoxOrig, 'VBox', 'ephys_viz', *args, **kwargs)


class NWBBrowser(_BaseWidget):
    """Jupyter widget for NWBBrowser"""

    def __init__(self, *args, **kwargs):
        super().__init__(NWBBrowserOrig, 'NWBBrowser', 'ephys_viz', *args, **kwargs)


class NWBFile(_BaseWidget):
    """Jupyter widget for NWBFile"""

    def __init__(self, *args, **kwargs):
        super().__init__(NWBFileOrig, 'NWBFile', 'ephys_viz', *args, **kwargs)


class HBox(_BaseWidget):
    """Jupyter widget for HBox"""

    def __init__(self, *args, **kwargs):
        super().__init__(HBoxOrig, 'HBox', 'ephys_viz', *args, **kwargs)


class TwoPhotonSeries(_BaseWidget):
    """Jupyter widget for TwoPhotonSeries"""

    def __init__(self, *args, **kwargs):
        super().__init__(TwoPhotonSeriesOrig, 'TwoPhotonSeries', 'ephys_viz', *args, **kwargs)


class ElectrodeGeometry(_BaseWidget):
    """Jupyter widget for ElectrodeGeometry"""

    def __init__(self, *args, **kwargs):
        super().__init__(ElectrodeGeometryOrig, 'ElectrodeGeometry', 'ephys_viz', *args, **kwargs)


class Surface3d(_BaseWidget):
    """Jupyter widget for Surface3d"""

    def __init__(self, *args, **kwargs):
        super().__init__(Surface3dOrig, 'Surface3d', 'ephys_viz', *args, **kwargs)


class TimeseriesView(_BaseWidget):
    """Jupyter widget for TimeseriesView"""

    def __init__(self, *args, **kwargs):
        super().__init__(TimeseriesViewOrig, 'TimeseriesView', 'ephys_viz', *args, **kwargs)


class SpikeForestAnalysis(_BaseWidget):
    """Jupyter widget for SpikeForestAnalysis"""

    def __init__(self, *args, **kwargs):
        super().__init__(SpikeForestAnalysisOrig, 'SpikeForestAnalysis', 'ephys_viz', *args, **kwargs)


class Tabs(_BaseWidget):
    """Jupyter widget for Tabs"""

    def __init__(self, *args, **kwargs):
        super().__init__(TabsOrig, 'Tabs', 'ephys_viz', *args, **kwargs)


class CorticalSurface(_BaseWidget):
    """Jupyter widget for CorticalSurface"""

    def __init__(self, *args, **kwargs):
        super().__init__(CorticalSurfaceOrig, 'CorticalSurface', 'ephys_viz', *args, **kwargs)

