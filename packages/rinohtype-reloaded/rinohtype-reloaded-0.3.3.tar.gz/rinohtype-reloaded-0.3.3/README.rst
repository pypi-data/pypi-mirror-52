rinohtype
=========

.. image:: http://img.shields.io/pypi/v/rinohtype.svg
   :target: https://pypi.python.org/pypi/rinohtype
   :alt: PyPI

.. image:: https://img.shields.io/pypi/pyversions/rinohtype.svg
   :target: https://pypi.python.org/pypi/rinohtype
   :alt: Python version

.. image:: https://badges.gitter.im/brechtm/rinohtype.svg
   :target: https://gitter.im/brechtm/rinohtype
   :alt: Gitter chat

.. image:: https://travis-ci.org/brechtm/rinohtype.svg?branch=master
   :target: https://travis-ci.org/brechtm/rinohtype
   :alt: Build status

.. image:: https://ci.appveyor.com/api/projects/status/qobpfyha7g4k109e/branch/master?svg=true
   :target: https://ci.appveyor.com/project/brechtm/rinohtype
   :alt: Windows Build status

.. image:: https://codecov.io/gh/brechtm/rinohtype/branch/master/graph/badge.svg
   :target: https://codecov.io/gh/brechtm/rinohtype
   :alt: Test coverage

.. note::

    Re-branded as ``rinohtype-reloaded``. As soon as upstream accepts
    pending pull requests, this repository might be archived. Re-branded PyPI
    versions will however stay forever.

Rinohtype is a document processor in the style of LaTeX_. It renders structured
documents to PDF based on a document template and a style sheet. An important
goal of rinohtype is to be more user-friendly than LaTeX. This includes
providing clear error messages and making it very easy to adjust the document
style. See the documentation_ to learn how to customize the style of your
document.

Rinohtype is currently in a beta phase and thus not recommended for production
use, but you can use it to explore rinohtype's features and bugs. I'd highly
appreciate it if you could `create a ticket`_ for any bugs you may encounter.
However, rinohtype is already very capable. Here is a list of its main
features:

* a powerful page layout system supporting columns, running headers/footers,
  floatable elements and footnotes
* support for figures, and (large) tables
* automatically generated table of contents and index
* automatic numbering and cross-referencing of section headings, figures and
  tables
* use one of the included document templates or create your own
* an intuitive style sheet system inspired by CSS
* modular design allowing for multiple frontends (such as reStructuredText,
  Markdown, DocBook, ...)
* handles OpenType, TrueType and Type1 fonts with support for advanced
  typographic features such as kerning, ligatures and small capitals
* embeds PDF, PNG and JPEG images, preserving transparency and color profiles
* easy to deploy; pure-Python with few dependencies
* built on Unicode; ready for non-latin languages

Rinohtype's primary input format is reStructuredText_. The ``rinoh`` command
line tool renders reStructuredText documents and the included Sphinx_ builder
obsoletes the need for a large LaTeX installation to produce PDF output. Have
a look at the `rinohtype documentation`_ for an example of the output.

Please, be warned that some older versions of PDF readers have trouble
displaying the PDFs generated by rinohtype (`issue 2`_):

- pre-37.0 Firefox's built-in PDF viewer (pdf.js)
- pre-0.41 poppler_-based applications such as Evince

.. _LaTeX: http://en.wikipedia.org/wiki/LaTeX
.. _documentation: http://www.mos6581.org/rinohtype/
.. _create a ticket: https://github.com/brechtm/rinohtype/issues
.. _reStructuredText: http://docutils.sourceforge.net/rst.html
.. _Sphinx: http://sphinx-doc.org
.. _blog: http://www.mos6581.org/archives.html
.. _rinohtype documentation: http://www.mos6581.org/rinohtype/_downloads/rinohtype.pdf
.. _issue 2: https://github.com/brechtm/rinohtype/issues/2
.. _poppler: http://poppler.freedesktop.org


Requirements
------------

rinohtype supports Python 3.4 and up. For parsing reStructuredText and
CommonMark documents, rinohtype depends on docutils_ and recommonmark_
respectively. pip_ takes care of these requirements when you install rinohtype.
If you want to include images other than PDF, PNG or JPEG, you also need to
install Pillow_.

.. _docutils: http://docutils.sourceforge.net/index.html
.. _recommonmark: https://recommonmark.readthedocs.io
.. _pip: https://pip.pypa.io
.. _Pillow: http://python-pillow.github.io


Getting Started
---------------

Installation is trivial::

    pip install rinohtype


reStructuredText Renderer
~~~~~~~~~~~~~~~~~~~~~~~~~

The easiest way to get started with rinohtype is to render a reStructuredText
document (such as ``CHANGES.rst`` from this repository) using the ``rinoh``
command line tool::

   rinoh CHANGES.rst

When ``rinoh`` finishes, you will find ``CHANGES.pdf`` alongside the input
file.

By default ``rinoh`` renders the input document using the article template. Run
``rinoh --help`` to see how you can tell ``rinoh`` which document template and
style sheet to use.


Sphinx Builder
~~~~~~~~~~~~~~

Rinohtype can be used as a drop-in replacement for the LaTeX builder (the
``latex_documents`` configuration variable has to be set). You only need to add
``'rinoh.frontend.sphinx'`` to the ``extensions`` list in ``conf.py``. With
this in place, you can select the `rinoh` builder when building the
documentation::

    sphinx-build -b rinoh . _build/rinoh


Contributing
------------

See `CONTRIBUTING.rst <CONTRIBUTING.rst>`_.


License
-------

All of rinohtype's source code is licensed under the `Affero GPL 3.0`_, unless
indicated otherwise in the source file (such as ``hyphenator.py``).

The Affero GPL requires for software that builds on rinohtype to also be
released as open source under the same license. For building closed-source
applications, you can obtain a `commercial license`_. The author of rinohtype
is also available for consultancy projects involving rinohtype.

.. _Affero GPL 3.0: https://www.gnu.org/licenses/agpl-3.0.html
.. _commercial license: brecht.machiels@opqode.com
