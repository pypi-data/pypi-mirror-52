# coding: utf-8

"""
    Budgea API Documentation

    see https://www.budget-insight.com/budgea-api  # noqa: E501

    The version of the OpenAPI document: 2.0
    Contact: rienafairefr@gmail.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import budgea
from budgea.api.banks_api import BanksApi  # noqa: E501
from budgea.rest import ApiException


class TestBanksApi(unittest.TestCase):
    """BanksApi unit test stubs"""

    def setUp(self):
        self.api = budgea.api.banks_api.BanksApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_account_types_get(self):
        """Test case for account_types_get

        Get account types  # noqa: E501
        """
        pass

    def test_account_types_id_account_type_get(self):
        """Test case for account_types_id_account_type_get

        Get an account type  # noqa: E501
        """
        pass

    def test_banks_categories_id_category_delete(self):
        """Test case for banks_categories_id_category_delete

        Delete the supplied category  # noqa: E501
        """
        pass

    def test_banks_categories_id_category_post(self):
        """Test case for banks_categories_id_category_post

        Edit a bank categories  # noqa: E501
        """
        pass

    def test_banks_categories_post(self):
        """Test case for banks_categories_post

        Create bank categories  # noqa: E501
        """
        pass

    def test_banks_get(self):
        """Test case for banks_get

        Get list of connectors  # noqa: E501
        """
        pass

    def test_banks_id_connector_connections_get(self):
        """Test case for banks_id_connector_connections_get

        Get a subset of id_connection with the largest diversity of account  # noqa: E501
        """
        pass

    def test_banks_id_connector_logos_get(self):
        """Test case for banks_id_connector_logos_get

        Get all links to the files associated with this connector.  # noqa: E501
        """
        pass

    def test_banks_id_connector_logos_main_get(self):
        """Test case for banks_id_connector_logos_main_get

        Get all links to the files associated with this connector.  # noqa: E501
        """
        pass

    def test_banks_id_connector_logos_thumbnail_get(self):
        """Test case for banks_id_connector_logos_thumbnail_get

        Get all links to the files associated with this connector.  # noqa: E501
        """
        pass

    def test_categories_get(self):
        """Test case for categories_get

        Get all categories  # noqa: E501
        """
        pass

    def test_categories_keywords_id_keyword_delete(self):
        """Test case for categories_keywords_id_keyword_delete

        Delete a particular key-value pair on a transaction.  # noqa: E501
        """
        pass

    def test_categories_keywords_post(self):
        """Test case for categories_keywords_post

        Add a new keyword associated with a category in the database.  # noqa: E501
        """
        pass

    def test_categorize_post(self):
        """Test case for categorize_post

        categorize transactions without storing them  # noqa: E501
        """
        pass

    def test_connections_get(self):
        """Test case for connections_get

        Get connections without a user  # noqa: E501
        """
        pass

    def test_connectors_get(self):
        """Test case for connectors_get

        Get list of connectors  # noqa: E501
        """
        pass

    def test_connectors_id_connector_logos_get(self):
        """Test case for connectors_id_connector_logos_get

        Get all links to the files associated with this connector.  # noqa: E501
        """
        pass

    def test_connectors_id_connector_logos_id_logo_delete(self):
        """Test case for connectors_id_connector_logos_id_logo_delete

        Delete a single Logo object.  # noqa: E501
        """
        pass

    def test_connectors_id_connector_logos_id_logo_put(self):
        """Test case for connectors_id_connector_logos_id_logo_put

        Create or Update a connector Logo.  # noqa: E501
        """
        pass

    def test_connectors_id_connector_logos_main_get(self):
        """Test case for connectors_id_connector_logos_main_get

        Get all links to the files associated with this connector.  # noqa: E501
        """
        pass

    def test_connectors_id_connector_logos_post(self):
        """Test case for connectors_id_connector_logos_post

        Create a connector Logo  # noqa: E501
        """
        pass

    def test_connectors_id_connector_logos_put(self):
        """Test case for connectors_id_connector_logos_put

        Create or Update a connector Logo  # noqa: E501
        """
        pass

    def test_connectors_id_connector_logos_thumbnail_get(self):
        """Test case for connectors_id_connector_logos_thumbnail_get

        Get all links to the files associated with this connector.  # noqa: E501
        """
        pass

    def test_connectors_id_connector_put(self):
        """Test case for connectors_id_connector_put

        Edit the provided connector  # noqa: E501
        """
        pass

    def test_connectors_post(self):
        """Test case for connectors_post

        Request a new connector  # noqa: E501
        """
        pass

    def test_invoicing_get(self):
        """Test case for invoicing_get

        Get number of accounts, connections and users synced.  # noqa: E501
        """
        pass

    def test_logs_get(self):
        """Test case for logs_get

        Get connection logs  # noqa: E501
        """
        pass

    def test_providers_get(self):
        """Test case for providers_get

        Get list of connectors  # noqa: E501
        """
        pass

    def test_providers_id_connector_connections_get(self):
        """Test case for providers_id_connector_connections_get

        Get a random subset of provider's id_connection  # noqa: E501
        """
        pass

    def test_providers_id_connector_logos_get(self):
        """Test case for providers_id_connector_logos_get

        Get all links to the files associated with this connector.  # noqa: E501
        """
        pass

    def test_providers_id_connector_logos_main_get(self):
        """Test case for providers_id_connector_logos_main_get

        Get all links to the files associated with this connector.  # noqa: E501
        """
        pass

    def test_providers_id_connector_logos_thumbnail_get(self):
        """Test case for providers_id_connector_logos_thumbnail_get

        Get all links to the files associated with this connector.  # noqa: E501
        """
        pass

    def test_users_id_user_account_types_get(self):
        """Test case for users_id_user_account_types_get

        Get account types  # noqa: E501
        """
        pass

    def test_users_id_user_account_types_id_account_type_get(self):
        """Test case for users_id_user_account_types_id_account_type_get

        Get an account type  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_delete(self):
        """Test case for users_id_user_accounts_delete

        Delete all accounts  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_get(self):
        """Test case for users_id_user_accounts_get

        Get accounts list.  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_categories_get(self):
        """Test case for users_id_user_accounts_id_account_categories_get

        Get the category  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_delete(self):
        """Test case for users_id_user_accounts_id_account_delete

        Delete an account.  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_delta_get(self):
        """Test case for users_id_user_accounts_id_account_delta_get

        Get deltas of accounts  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_logs_get(self):
        """Test case for users_id_user_accounts_id_account_logs_get

        Get accounts logs.  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_put(self):
        """Test case for users_id_user_accounts_id_account_put

        Update an account  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_transactions_delete(self):
        """Test case for users_id_user_accounts_id_account_transactions_delete

        Delete transactions  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_transactions_get(self):
        """Test case for users_id_user_accounts_id_account_transactions_get

        Get transactions  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_transactions_id_transaction_informations_delete(self):
        """Test case for users_id_user_accounts_id_account_transactions_id_transaction_informations_delete

        Delete all arbitrary key-value pairs of a transaction  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_transactions_id_transaction_informations_get(self):
        """Test case for users_id_user_accounts_id_account_transactions_id_transaction_informations_get

        List all arbitrary key-value pairs on a transaction  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_transactions_id_transaction_informations_id_information_delete(self):
        """Test case for users_id_user_accounts_id_account_transactions_id_transaction_informations_id_information_delete

        Delete a particular key-value pair on a transaction.  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_transactions_id_transaction_informations_id_information_get(self):
        """Test case for users_id_user_accounts_id_account_transactions_id_transaction_informations_id_information_get

        Get a particular arbitrary key-value pair on a transaction  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_transactions_id_transaction_informations_put(self):
        """Test case for users_id_user_accounts_id_account_transactions_id_transaction_informations_put

        Add or edit transaction arbitrary key-value pairs  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_transactions_id_transaction_put(self):
        """Test case for users_id_user_accounts_id_account_transactions_id_transaction_put

        Edit a transaction meta-data  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_transactions_post(self):
        """Test case for users_id_user_accounts_id_account_transactions_post

        Create transactions  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_transactionsclusters_get(self):
        """Test case for users_id_user_accounts_id_account_transactionsclusters_get

        Get clustered transactions  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_transactionsclusters_id_transactionscluster_delete(self):
        """Test case for users_id_user_accounts_id_account_transactionsclusters_id_transactionscluster_delete

        Delete a clustered transaction  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_transactionsclusters_id_transactionscluster_put(self):
        """Test case for users_id_user_accounts_id_account_transactionsclusters_id_transactionscluster_put

        Edit a clustered transaction  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_id_account_transactionsclusters_post(self):
        """Test case for users_id_user_accounts_id_account_transactionsclusters_post

        Create clustered transaction  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_post(self):
        """Test case for users_id_user_accounts_post

        Create an account  # noqa: E501
        """
        pass

    def test_users_id_user_accounts_put(self):
        """Test case for users_id_user_accounts_put

        Update many accounts at once  # noqa: E501
        """
        pass

    def test_users_id_user_alerts_get(self):
        """Test case for users_id_user_alerts_get

        Get alerts  # noqa: E501
        """
        pass

    def test_users_id_user_categories_full_get(self):
        """Test case for users_id_user_categories_full_get

        Get the category  # noqa: E501
        """
        pass

    def test_users_id_user_categories_full_id_full_delete(self):
        """Test case for users_id_user_categories_full_id_full_delete

        Delete a user-created transaction category  # noqa: E501
        """
        pass

    def test_users_id_user_categories_full_id_full_put(self):
        """Test case for users_id_user_categories_full_id_full_put

        Modify a user-created category  # noqa: E501
        """
        pass

    def test_users_id_user_categories_full_post(self):
        """Test case for users_id_user_categories_full_post

        Create a new transaction category  # noqa: E501
        """
        pass

    def test_users_id_user_categories_get(self):
        """Test case for users_id_user_categories_get

        Get the category  # noqa: E501
        """
        pass

    def test_users_id_user_connections_delete(self):
        """Test case for users_id_user_connections_delete

        Delete all connections  # noqa: E501
        """
        pass

    def test_users_id_user_connections_get(self):
        """Test case for users_id_user_connections_get

        Get connections  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_delete(self):
        """Test case for users_id_user_connections_id_connection_accounts_delete

        Delete all accounts  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_get(self):
        """Test case for users_id_user_connections_id_connection_accounts_get

        Get accounts list.  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_categories_get(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_categories_get

        Get the category  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_delete(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_delete

        Delete an account.  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_delta_get(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_delta_get

        Get deltas of accounts  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_logs_get(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_logs_get

        Get accounts logs.  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_put(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_put

        Update an account  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_transactions_delete(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_transactions_delete

        Delete transactions  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_transactions_get(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_transactions_get

        Get transactions  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_informations_delete(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_informations_delete

        Delete all arbitrary key-value pairs of a transaction  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_informations_get(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_informations_get

        List all arbitrary key-value pairs on a transaction  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_informations_id_information_delete(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_informations_id_information_delete

        Delete a particular key-value pair on a transaction.  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_informations_id_information_get(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_informations_id_information_get

        Get a particular arbitrary key-value pair on a transaction  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_informations_put(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_informations_put

        Add or edit transaction arbitrary key-value pairs  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_put(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_put

        Edit a transaction meta-data  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_transactions_post(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_transactions_post

        Create transactions  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_get(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_get

        Get clustered transactions  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactionscluster_delete(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactionscluster_delete

        Delete a clustered transaction  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactionscluster_put(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactionscluster_put

        Edit a clustered transaction  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_post(self):
        """Test case for users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_post

        Create clustered transaction  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_post(self):
        """Test case for users_id_user_connections_id_connection_accounts_post

        Create an account  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_accounts_put(self):
        """Test case for users_id_user_connections_id_connection_accounts_put

        Update many accounts at once  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_delete(self):
        """Test case for users_id_user_connections_id_connection_delete

        Delete a connection.  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_informations_get(self):
        """Test case for users_id_user_connections_id_connection_informations_get

        Get connection additionnal informations  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_logs_get(self):
        """Test case for users_id_user_connections_id_connection_logs_get

        Get connection logs  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_post(self):
        """Test case for users_id_user_connections_id_connection_post

        Update a connection.  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_put(self):
        """Test case for users_id_user_connections_id_connection_put

        Force synchronisation of a connection.  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_transactions_delete(self):
        """Test case for users_id_user_connections_id_connection_transactions_delete

        Delete transactions  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_transactions_get(self):
        """Test case for users_id_user_connections_id_connection_transactions_get

        Get transactions  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_transactions_id_transaction_informations_delete(self):
        """Test case for users_id_user_connections_id_connection_transactions_id_transaction_informations_delete

        Delete all arbitrary key-value pairs of a transaction  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_transactions_id_transaction_informations_get(self):
        """Test case for users_id_user_connections_id_connection_transactions_id_transaction_informations_get

        List all arbitrary key-value pairs on a transaction  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_transactions_id_transaction_informations_id_information_delete(self):
        """Test case for users_id_user_connections_id_connection_transactions_id_transaction_informations_id_information_delete

        Delete a particular key-value pair on a transaction.  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_transactions_id_transaction_informations_id_information_get(self):
        """Test case for users_id_user_connections_id_connection_transactions_id_transaction_informations_id_information_get

        Get a particular arbitrary key-value pair on a transaction  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_transactions_id_transaction_informations_put(self):
        """Test case for users_id_user_connections_id_connection_transactions_id_transaction_informations_put

        Add or edit transaction arbitrary key-value pairs  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_transactions_id_transaction_put(self):
        """Test case for users_id_user_connections_id_connection_transactions_id_transaction_put

        Edit a transaction meta-data  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_transactions_post(self):
        """Test case for users_id_user_connections_id_connection_transactions_post

        Create transactions  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_transactionsclusters_get(self):
        """Test case for users_id_user_connections_id_connection_transactionsclusters_get

        Get clustered transactions  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_transactionsclusters_id_transactionscluster_delete(self):
        """Test case for users_id_user_connections_id_connection_transactionsclusters_id_transactionscluster_delete

        Delete a clustered transaction  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_transactionsclusters_id_transactionscluster_put(self):
        """Test case for users_id_user_connections_id_connection_transactionsclusters_id_transactionscluster_put

        Edit a clustered transaction  # noqa: E501
        """
        pass

    def test_users_id_user_connections_id_connection_transactionsclusters_post(self):
        """Test case for users_id_user_connections_id_connection_transactionsclusters_post

        Create clustered transaction  # noqa: E501
        """
        pass

    def test_users_id_user_connections_post(self):
        """Test case for users_id_user_connections_post

        Add a new connection.  # noqa: E501
        """
        pass

    def test_users_id_user_forecast_get(self):
        """Test case for users_id_user_forecast_get

        Get forecast  # noqa: E501
        """
        pass

    def test_users_id_user_logs_get(self):
        """Test case for users_id_user_logs_get

        Get connection logs  # noqa: E501
        """
        pass

    def test_users_id_user_transactions_delete(self):
        """Test case for users_id_user_transactions_delete

        Delete transactions  # noqa: E501
        """
        pass

    def test_users_id_user_transactions_get(self):
        """Test case for users_id_user_transactions_get

        Get transactions  # noqa: E501
        """
        pass

    def test_users_id_user_transactions_id_transaction_informations_delete(self):
        """Test case for users_id_user_transactions_id_transaction_informations_delete

        Delete all arbitrary key-value pairs of a transaction  # noqa: E501
        """
        pass

    def test_users_id_user_transactions_id_transaction_informations_get(self):
        """Test case for users_id_user_transactions_id_transaction_informations_get

        List all arbitrary key-value pairs on a transaction  # noqa: E501
        """
        pass

    def test_users_id_user_transactions_id_transaction_informations_id_information_delete(self):
        """Test case for users_id_user_transactions_id_transaction_informations_id_information_delete

        Delete a particular key-value pair on a transaction.  # noqa: E501
        """
        pass

    def test_users_id_user_transactions_id_transaction_informations_id_information_get(self):
        """Test case for users_id_user_transactions_id_transaction_informations_id_information_get

        Get a particular arbitrary key-value pair on a transaction  # noqa: E501
        """
        pass

    def test_users_id_user_transactions_id_transaction_informations_put(self):
        """Test case for users_id_user_transactions_id_transaction_informations_put

        Add or edit transaction arbitrary key-value pairs  # noqa: E501
        """
        pass

    def test_users_id_user_transactions_id_transaction_put(self):
        """Test case for users_id_user_transactions_id_transaction_put

        Edit a transaction meta-data  # noqa: E501
        """
        pass

    def test_users_id_user_transactions_post(self):
        """Test case for users_id_user_transactions_post

        Create transactions  # noqa: E501
        """
        pass

    def test_users_id_user_transactionsclusters_get(self):
        """Test case for users_id_user_transactionsclusters_get

        Get clustered transactions  # noqa: E501
        """
        pass

    def test_users_id_user_transactionsclusters_id_transactionscluster_delete(self):
        """Test case for users_id_user_transactionsclusters_id_transactionscluster_delete

        Delete a clustered transaction  # noqa: E501
        """
        pass

    def test_users_id_user_transactionsclusters_id_transactionscluster_put(self):
        """Test case for users_id_user_transactionsclusters_id_transactionscluster_put

        Edit a clustered transaction  # noqa: E501
        """
        pass

    def test_users_id_user_transactionsclusters_post(self):
        """Test case for users_id_user_transactionsclusters_post

        Create clustered transaction  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
