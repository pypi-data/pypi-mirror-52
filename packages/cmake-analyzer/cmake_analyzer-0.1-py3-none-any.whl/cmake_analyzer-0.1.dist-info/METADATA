Metadata-Version: 2.1
Name: cmake-analyzer
Version: 0.1
Summary: CMake Analyzer (cmana) is a tool that helps developers to find common issues in CMake code. It searches for deprecated commands/keywords, bad codestyle, potential problems.
Home-page: https://bitbucket.org/ArchiDevil/cmake-analyzer
Author: Denis Bezykornov
Author-email: archidevil52@gmail.com
License: MIT
Project-URL: Homepage, https://bitbucket.org/ArchiDevil/cmake-analyzer
Project-URL: Bug Tracker, https://bitbucket.org/ArchiDevil/cmake-analyzer/issues
Project-URL: Source Code, https://bitbucket.org/ArchiDevil/cmake-analyzer/src
Keywords: cmake lint analyzer
Platform: UNKNOWN
Classifier: Topic :: Software Development :: Build Tools
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Environment :: Console
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Requires-Python: >=3.5
Description-Content-Type: text/markdown
Requires-Dist: TatSu (==4.4.0)

# CMake Analyzer

CMake Analyzer (`cmana`) is a tool that helps developers to find common issues
in CMake code. It searches for deprecated commands/keywords, bad codestyle,
potential problems.

## Installation

    $ pip install cmake-analyzer

## Usage
This tool works by both `python -m cmake_analyzer` and `cmana` console commands.

Simple usage pattern:

    $ cmana -p /some/directory/to/your/project

Full help is available by `-h` key as the following:

    $ cmana -h
    usage: cmana [-h] [-c CHECKS [CHECKS ...]] [-v] [--custom-checks PATH]
                (-p PATH | --list-checks) [--exclude EXCLUDE [EXCLUDE ...] |
                --include INCLUDE [INCLUDE ...]]

    optional arguments:
        -h, --help            show this help message and exit
        -c CHECKS [CHECKS ...], --checks CHECKS [CHECKS ...]
                                enable checks in the following format: style* legacy*
        -v, --verbose         enable verbose logging for large projects
        --custom-checks PATH  directory with user-defined checks
        -p PATH, --path PATH  path to start check from
        --list-checks         list all available checks
        --exclude EXCLUDE [EXCLUDE ...]
                                filter out files by mask
        --include INCLUDE [INCLUDE ...]
                                include only files by mask

## License

You may use CMake Analyzer under the terms of the MIT license
described in the enclosed `LICENSE.md` file.


