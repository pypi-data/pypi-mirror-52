Metadata-Version: 2.1
Name: pulumi
Version: 1.0.1a1567803187
Summary: Pulumi's Python SDK
Home-page: https://github.com/pulumi/pulumi
Author: UNKNOWN
Author-email: UNKNOWN
License: Apache 2.0
Platform: UNKNOWN
Requires-Dist: protobuf (>=3.6.0)
Requires-Dist: dill (>=0.3.0)
Requires-Dist: grpcio (>=1.9.1)

|Slack| |NPM version| |Python version| |GoDoc| |License|

**Pulumi’s Infrastructure as Code SDK** is the easiest way to create and
deploy cloud software that use containers, serverless functions, hosted
services, and infrastructure, on any cloud.

Simply write code in your favorite language and Pulumi automatically
provisions and manages your
`AWS <https://www.pulumi.com/docs/reference/clouds/aws/>`__,
`Azure <https://www.pulumi.com/docs/reference/clouds/azure/>`__, `Google
Cloud Platform <https://www.pulumi.com/docs/reference/clouds/gcp/>`__,
and/or
`Kubernetes <https://www.pulumi.com/docs/reference/clouds/kubernetes/>`__
resources, using an
`infrastructure-as-code <https://en.wikipedia.org/wiki/Infrastructure_as_Code>`__
approach. Skip the YAML, and use standard language features like loops,
functions, classes, and package management that you already know and
love.

For example, create three web servers:

.. code:: typescript

   let aws = require("@pulumi/aws");
   let sg = new aws.ec2.SecurityGroup("web-sg", {
       ingress: [{ protocol: "tcp", fromPort: 80, toPort: 80, cidrBlocks: ["0.0.0.0/0"]}],
   });
   for (let i = 0; i < 3; i++) {
       new aws.ec2.Instance(`web-${i}`, {
           ami: "ami-7172b611",
           instanceType: "t2.micro",
           securityGroups: [ sg.name ],
           userData: `#!/bin/bash
               echo "Hello, World!" > index.html
               nohup python -m SimpleHTTPServer 80 &`,
       });
   }

Or a simple serverless timer that archives Hacker News every day at
8:30AM:

.. code:: typescript

   const aws = require("@pulumi/aws");

   const snapshots = new aws.dynamodb.Table("snapshots", {
       attributes: [{ name: "id", type: "S", }],
       hashKey: "id", billingMode: "PAY_PER_REQUEST",
   });

   aws.cloudwatch.onSchedule("daily-yc-snapshot", "cron(30 8 * * ? *)", () => {
       require("https").get("https://news.ycombinator.com", res => {
           let content = "";
           res.setEncoding("utf8");
           res.on("data", chunk => content += chunk);
           res.on("end", () => new aws.sdk.DynamoDB.DocumentClient().put({
               TableName: snapshots.name.get(),
               Item: { date: Date.now(), content },
           }).promise());
       }).end();
   });

Many examples are available spanning containers, serverless, and
infrastructure in
`pulumi/examples <https://github.com/pulumi/examples>`__.

Pulumi is open source under the Apache 2.0 license, supports many
languages and clouds, and is easy to extend. This repo contains the
``pulumi`` CLI, language SDKs, and core Pulumi engine, and individual
libraries are in their own repos.

Welcome
-------

-  `Getting Started <#getting-started>`__: get up and running quickly.

-  `Tutorials <https://www.pulumi.com/docs/reference/tutorials/>`__:
   walk through end-to-end workflows for creating containers, serverless
   functions, and other cloud services and infrastructure.

-  `Examples <https://github.com/pulumi/examples>`__: browse a number of
   useful examples across many languages, clouds, and scenarios
   including containers, serverless, and infrastructure.

-  `Reference Docs <https://www.pulumi.com/docs/reference/>`__: read
   conceptual documentation, in addition to details on how to configure
   Pulumi to deploy into your AWS, Azure, or Google Cloud accounts,
   and/or Kubernetes cluster.

-  `Community Slack <https://slack.pulumi.com>`__: join us over at our
   community Slack channel. Any and all discussion or questions are
   welcome.

-  `Roadmap <https://github.com/pulumi/pulumi/wiki/Roadmap>`__: check
   out what’s on the roadmap for the Pulumi project over the coming
   months.

Getting Started
---------------

See the `Get Started <https://www.pulumi.com/docs/quickstart/>`__ guide
to quickly get started with Pulumi on your platform and cloud of choice.

Otherwise, the following steps demonstrate how to deploy your first
Pulumi program, using AWS Serverless Lambdas, in minutes:

1. **Install**:

   To install the latest Pulumi release, run the following (see full
   `installation
   instructions <https://www.pulumi.com/docs/reference/install/>`__ for
   additional installation options):

   .. code:: bash

      $ curl -fsSL https://get.pulumi.com/ | sh

2. **Create a Project**:

   After installing, you can get started with the ``pulumi new``
   command:

   .. code:: bash

      $ mkdir pulumi-demo && cd pulumi-demo
      $ pulumi new hello-aws-javascript

   The ``new`` command offers templates for all languages and clouds.
   Run it without an argument and it’ll prompt you with available
   projects. This command created an AWS Serverless Lambda project
   written in JavaScript.

3. **Deploy to the Cloud**:

   Run ``pulumi up`` to get your code to the cloud:

   .. code:: bash

      $ pulumi up

   This makes all cloud resources needed to run your code. Simply make
   edits to your project, and subsequent ``pulumi up``\ s will compute
   the minimal diff to deploy your changes.

4. **Use Your Program**:

   Now that your code is deployed, you can interact with it. In the
   above example, we can curl the endpoint:

   .. code:: bash

      $ curl $(pulumi stack output url)

5. **Access the Logs**:

   If you’re using containers or functions, Pulumi’s unified logging
   command will show all of your logs:

   .. code:: bash

      $ pulumi logs -f

6. **Destroy your Resources**:

   After you’re done, you can remove all resources created by your
   program:

   .. code:: bash

      $ pulumi destroy -y

To learn more, head over to `pulumi.com <https://pulumi.com>`__ for much
more information, including
`tutorials <https://www.pulumi.com/docs/reference/tutorials/>`__,
`examples <https://github.com/pulumi/examples>`__, and details of the
core Pulumi CLI and `programming model
concepts <https://www.pulumi.com/docs/reference/concepts/>`__.

Platform
--------

CLI
~~~

=============== ==========================
Architecture    Build Status
=============== ==========================
Linux/macOS x64 |Linux x64 Build Status|
Windows x64     |Windows x64 Build Status|
=============== ==========================

Languages
~~~~~~~~~

== ============================= ======= ===========
\  Language                      Status  Runtime
== ============================= ======= ===========
\  `JavaScript <./sdk/nodejs>`__ Stable  Node.js 8+
\  `TypeScript <./sdk/nodejs>`__ Stable  Node.js 8+
\  `Python <./sdk/python>`__     Stable  Python 3.6+
\  `Go <./sdk/go>`__             Preview Go 1.x
== ============================= ======= ===========

Clouds
~~~~~~

See `Supported Clouds <https://www.pulumi.com/docs/reference/clouds/>`__
for the full list of supported cloud and infrastructure providers.

Contributing
------------

Please See
`CONTRIBUTING.md <https://github.com/pulumi/pulumi/blob/master/CONTRIBUTING.md>`__
for information on building Pulumi from source or contributing
improvements.

.. |Slack| image:: http://www.pulumi.com/images/docs/badges/slack.svg
   :target: https://slack.pulumi.com
.. |NPM version| image:: https://badge.fury.io/js/%40pulumi%2Fpulumi.svg
   :target: https://npmjs.com/package/@pulumi/pulumi
.. |Python version| image:: https://badge.fury.io/py/pulumi.svg
   :target: https://pypi.org/project/pulumi
.. |GoDoc| image:: https://godoc.org/github.com/pulumi/pulumi?status.svg
   :target: https://godoc.org/github.com/pulumi/pulumi
.. |License| image:: https://img.shields.io/npm/l/%40pulumi%2Fpulumi.svg
   :target: https://github.com/pulumi/pulumi/blob/master/LICENSE
.. |Linux x64 Build Status| image:: https://travis-ci.com/pulumi/pulumi.svg?token=cTUUEgrxaTEGyecqJpDn&branch=master
   :target: https://travis-ci.com/pulumi/pulumi
.. |Windows x64 Build Status| image:: https://ci.appveyor.com/api/projects/status/uqrduw6qnoss7g4i?svg=true&branch=master
   :target: https://ci.appveyor.com/project/pulumi/pulumi


