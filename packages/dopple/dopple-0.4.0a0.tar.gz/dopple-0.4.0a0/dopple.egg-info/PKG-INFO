Metadata-Version: 2.1
Name: dopple
Version: 0.4.0a0
Summary: dopple: HTTP proxy to Unix Socket based JSON-RPC servers
Home-page: https://github.com/ethereum/dopple
Author: The Ethereum Foundation
Author-email: snakecharmers@ethereum.org
License: MIT
Description: # dopple
        
        HTTP proxy to Unix Socket based JSON-RPC servers
        
        ## Installation
        
        ```sh
        pip install dopple
        ```
        
        ## Use
        
        ```sh
        dopple ~/.ethereum/geth.ipc http://127.0.0.1:8545
        ```
        
        These values above are the default ones too. If they match your current configuration, they can be ommitted.
        
        Check out `--help` option for more information.
        
        Read more in the [documentation on ReadTheDocs](https://dopple.readthedocs.io/). [View the change log](https://dopple.readthedocs.io/en/latest/releases.html).
        
        ## Developer Setup
        
        If you would like to hack on dopple, please check out the [Snake Charmers
        Tactical Manual](https://github.com/ethereum/snake-charmers-tactical-manual)
        for information on how we do:
        
        - Testing
        - Pull Requests
        - Code Style
        - Documentation
        
        ### Development Environment Setup
        
        You can set up your dev environment with:
        
        ```sh
        git clone git@github.com:ethereum/dopple.git
        cd dopple
        virtualenv -p python3 venv
        . venv/bin/activate
        pip install -e .[dev]
        ```
        
        ### Testing Setup
        
        During development, you might like to have tests run on every file save.
        
        Show flake8 errors on file change:
        
        ```sh
        # Test flake8
        when-changed -v -s -r -1 dopple/ tests/ -c "clear; flake8 dopple tests && echo 'flake8 success' || echo 'error'"
        ```
        
        Run multi-process tests in one command, but without color:
        
        ```sh
        # in the project root:
        pytest --numprocesses=4 --looponfail --maxfail=1
        # the same thing, succinctly:
        pytest -n 4 -f --maxfail=1
        ```
        
        Run in one thread, with color and desktop notifications:
        
        ```sh
        cd venv
        ptw --onfail "notify-send -t 5000 'Test failure ⚠⚠⚠⚠⚠' 'python 3 test on dopple failed'" ../tests ../dopple
        ```
        
        ### Release setup
        
        For Debian-like systems:
        ```
        apt install pandoc
        ```
        
        To release a new version:
        
        ```sh
        make release bump=$$VERSION_PART_TO_BUMP$$
        ```
        
        #### How to bumpversion
        
        The version format for this repo is `{major}.{minor}.{patch}` for stable, and
        `{major}.{minor}.{patch}-{stage}.{devnum}` for unstable (`stage` can be alpha or beta).
        
        To issue the next version in line, specify which part to bump,
        like `make release bump=minor` or `make release bump=devnum`. This is typically done from the
        master branch, except when releasing a beta (in which case the beta is released from master,
        and the previous stable branch is released from said branch).
        
        If you are in a beta version, `make release bump=stage` will switch to a stable.
        
        To issue an unstable version when the current version is stable, specify the
        new version explicitly, like `make release bump="--new-version 4.0.0-alpha.1 devnum"`
        
Keywords: ethereum
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.6, <4
Description-Content-Type: text/markdown
Provides-Extra: doc
Provides-Extra: lint
Provides-Extra: test
Provides-Extra: dev
