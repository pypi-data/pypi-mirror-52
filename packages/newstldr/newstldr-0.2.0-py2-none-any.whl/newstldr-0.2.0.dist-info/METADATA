Metadata-Version: 2.1
Name: newstldr
Version: 0.2.0
Summary: NewsTLDR
Home-page: https://github.com/mardix/newstldr-service
Author: Mardix
Author-email: mcx2082@gmail.com
License: MIT
Platform: any
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Description-Content-Type: text/markdown
Requires-Dist: Flasik
Requires-Dist: Paginator (>=0.4.1)
Requires-Dist: requests (>=2.20.0)
Requires-Dist: six (==1.9.0)
Requires-Dist: tld (==0.7.2)
Requires-Dist: beautifulsoup4 (==4.4.1)
Requires-Dist: newspaper (==0.0.9.8)
Requires-Dist: sumy (==0.3.0)
Requires-Dist: nltk (>=3.4.5)
Requires-Dist: feedparser (==5.2.1)
Requires-Dist: python-dateutil (==2.4.2)
Requires-Dist: arrow (==0.8.0)

# NewsTLDR

A Flasik extension to fetch and summarize the news. 

It provides an API `https://url/newstldr/`


You will also need **newstldr-admin**


### Requirements

- AWS Account for S3
- Google API Account for youtube

## Install

Add in Flasik application requirements.txt `newstldr`

## Config

```
    # NTLDR/Newsroom
    NTLDR_AWS_ACCESS_KEY_ID = AWS_ACCESS_KEY_ID
    NTLDR_AWS_SECRET_ACCESS_KEY = AWS_SECRET_ACCESS_KEY
    NTLDR_AWS_REGION_NAME = AWS_REGION_NAME
    NTLDR_IMAGES_STORAGE_PREFIX = "ntldr.imgs"
    NTLDR_SQS_MQ_NAME = "Newsroom"
    NTLDR_GOOGLE_API_KEY = GOOGLE_API_KEY
```

## __flasik__.py 

```
import newstldr.cli

projects = {
  "main": [
    "newstldr"
  ]
}
```

## Setup

`flasik news:setup`

## Run workers

To automatically import and process articles

### Import Posts
`flasik news:worker:import-posts`

### Run Task Q

`flasik news:worker:run-taskq`


